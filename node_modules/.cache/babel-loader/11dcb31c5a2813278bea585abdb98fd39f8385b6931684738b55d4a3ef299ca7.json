{"ast":null,"code":"var _jsxFileName = \"/Users/a667227/Desktop/Work/ticket-management/src/components/TaskBoard.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../styles/TaskBoard.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Toast from './Toast';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// StrictMode compatibility workaround for react-beautiful-dnd\nconst useDndStrictModeWorkaround = () => {\n  _s();\n  const [enabled, setEnabled] = useState(false);\n  useEffect(() => {\n    // We need to delay enabling the drag-n-drop until after the initial render\n    // to work around an issue with StrictMode in React 18\n    const timeout = setTimeout(() => {\n      setEnabled(true);\n    }, 0);\n    return () => clearTimeout(timeout);\n  }, []);\n  return enabled;\n};\n_s(useDndStrictModeWorkaround, \"KO045EdmUKRrcVNzr+fxbg9aW04=\");\nconst TaskBoard = ({\n  tickets,\n  onStatusChange,\n  currentUser\n}) => {\n  _s2();\n  const columns = ['DRAFT', 'PENDING', 'APPROVED', 'REJECTED'];\n  const [isDragging, setIsDragging] = useState(false);\n  const [toast, setToast] = useState({\n    message: '',\n    visible: false\n  });\n\n  // Use the StrictMode workaround\n  const isDndEnabled = useDndStrictModeWorkaround();\n\n  // Clean up drag state on unmount\n  useEffect(() => {\n    return () => {\n      setIsDragging(false);\n    };\n  }, []);\n\n  // Check if the user can move the ticket from source to destination status\n  const canMoveTicket = (ticket, sourceStatus, destinationStatus) => {\n    const role = currentUser.role;\n\n    // ADMIN can move tickets freely between any status\n    if (role === 'ADMIN') return true;\n\n    // APPROVER can only approve or reject tickets from PENDING status\n    if (role === 'APPROVER') {\n      if (sourceStatus === 'PENDING' && (destinationStatus === 'APPROVED' || destinationStatus === 'REJECTED')) {\n        return true;\n      }\n      return false;\n    }\n\n    // REQUESTER can only move their own tickets from DRAFT to PENDING\n    if (role === 'REQUESTER') {\n      if (ticket.requesterId === currentUser._id && sourceStatus === 'DRAFT' && destinationStatus === 'PENDING') {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  };\n  const getRequesterName = ticket => {\n    var _ticket$requester;\n    return ((_ticket$requester = ticket.requester) === null || _ticket$requester === void 0 ? void 0 : _ticket$requester.fullName) || 'Unknown User';\n  };\n  const handleDragEnd = result => {\n    setIsDragging(false);\n    const {\n      draggableId,\n      source,\n      destination\n    } = result;\n\n    // Drop outside any droppable area or same position\n    if (!destination || source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n    const ticketId = draggableId;\n    const sourceStatus = source.droppableId;\n    const destinationStatus = destination.droppableId;\n    const ticket = tickets.find(t => t._id === ticketId);\n    if (!ticket) return;\n\n    // Check if the user has permission to move the ticket\n    if (canMoveTicket(ticket, sourceStatus, destinationStatus)) {\n      onStatusChange(ticketId, destinationStatus);\n    } else {\n      // Show toast notification for permission error\n      setToast({\n        message: `You don't have permission to move this ticket to ${destinationStatus} status`,\n        visible: true\n      });\n    }\n  };\n  const handleDragStart = () => {\n    setIsDragging(true);\n  };\n\n  // Handle closing the toast\n  const handleCloseToast = () => {\n    setToast({\n      ...toast,\n      visible: false\n    });\n  };\n\n  // Create a simplified board without drag-and-drop\n  const renderSimpleBoard = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-board\",\n      children: columns.map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"column-title\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: tickets.filter(ticket => ticket.status === status).map(ticket => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-priority\",\n              \"data-priority\": ticket.department\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: ticket.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: ticket.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"assignee\",\n                children: getRequesterName(ticket)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"due-date\",\n                children: ticket.requestDate ? new Date(ticket.requestDate).toLocaleDateString() : 'No date'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this)]\n          }, ticket._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-task-btn\",\n          children: \"+ Add Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  };\n\n  // If DnD is not enabled yet, render a simplified board\n  if (!isDndEnabled) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [toast.visible && /*#__PURE__*/_jsxDEV(Toast, {\n        message: toast.message,\n        type: \"error\",\n        onClose: handleCloseToast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), renderSimpleBoard()]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [toast.visible && /*#__PURE__*/_jsxDEV(Toast, {\n      message: toast.message,\n      type: \"error\",\n      onClose: handleCloseToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      onDragStart: handleDragStart,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-board\",\n        children: columns.map(columnStatus => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"column-title\",\n            children: columnStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: columnStatus,\n            children: (provided, snapshot) => {\n              // Filter tickets for this column\n              const columnTickets = tickets.filter(ticket => ticket.status === columnStatus);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                className: `task-list ${snapshot.isDraggingOver ? 'drop-allowed' : ''}`,\n                children: [columnTickets.map((ticket, index) => {\n                  // Determine if this ticket can be dragged\n                  const isDragDisabled = currentUser.role === 'REQUESTER' && (ticket.requesterId !== currentUser._id || ticket.status !== 'DRAFT') || currentUser.role === 'APPROVER' && ticket.status !== 'PENDING';\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: ticket._id,\n                    index: index,\n                    isDragDisabled: isDragDisabled,\n                    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      ref: provided.innerRef,\n                      ...provided.draggableProps,\n                      ...provided.dragHandleProps,\n                      className: `task-card ${snapshot.isDragging ? 'is-dragging' : ''} ${isDragDisabled ? 'not-draggable' : ''}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"task-priority\",\n                        \"data-priority\": ticket.department\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: ticket.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: ticket.description\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 219,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"task-meta\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"assignee\",\n                          children: getRequesterName(ticket)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 221,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"due-date\",\n                          children: ticket.requestDate ? new Date(ticket.requestDate).toLocaleDateString() : 'No date'\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 222,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 31\n                    }, this)\n                  }, ticket._id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 27\n                  }, this);\n                }), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this);\n            }\n          }, columnStatus, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-task-btn\",\n            children: \"+ Add Ticket\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, columnStatus, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(TaskBoard, \"Ql8QqJILIY6xuQwFuc+Pgd5KrZQ=\", false, function () {\n  return [useDndStrictModeWorkaround];\n});\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["useState","useEffect","DragDropContext","Droppable","Draggable","Toast","jsxDEV","_jsxDEV","Fragment","_Fragment","useDndStrictModeWorkaround","_s","enabled","setEnabled","timeout","setTimeout","clearTimeout","TaskBoard","tickets","onStatusChange","currentUser","_s2","columns","isDragging","setIsDragging","toast","setToast","message","visible","isDndEnabled","canMoveTicket","ticket","sourceStatus","destinationStatus","role","requesterId","_id","getRequesterName","_ticket$requester","requester","fullName","handleDragEnd","result","draggableId","source","destination","droppableId","index","ticketId","find","t","handleDragStart","handleCloseToast","renderSimpleBoard","className","children","map","status","fileName","_jsxFileName","lineNumber","columnNumber","filter","department","title","description","requestDate","Date","toLocaleDateString","type","onClose","onDragEnd","onDragStart","columnStatus","provided","snapshot","columnTickets","ref","innerRef","droppableProps","isDraggingOver","isDragDisabled","draggableProps","dragHandleProps","placeholder","_c","$RefreshReg$"],"sources":["/Users/a667227/Desktop/Work/ticket-management/src/components/TaskBoard.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport '../styles/TaskBoard.css';\nimport { Ticket, TicketStatus, User } from '../types/system';\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\nimport Toast from './Toast';\n\ninterface TaskBoardProps {\n  tickets: Ticket[];\n  onStatusChange: (ticketId: string, newStatus: TicketStatus) => void;\n  currentUser: User;\n}\n\n// StrictMode compatibility workaround for react-beautiful-dnd\nconst useDndStrictModeWorkaround = () => {\n  const [enabled, setEnabled] = useState(false);\n  \n  useEffect(() => {\n    // We need to delay enabling the drag-n-drop until after the initial render\n    // to work around an issue with StrictMode in React 18\n    const timeout = setTimeout(() => {\n      setEnabled(true);\n    }, 0);\n    \n    return () => clearTimeout(timeout);\n  }, []);\n  \n  return enabled;\n};\n\nconst TaskBoard: FC<TaskBoardProps> = ({ tickets, onStatusChange, currentUser }) => {\n  const columns: TicketStatus[] = ['DRAFT', 'PENDING', 'APPROVED', 'REJECTED'];\n  const [isDragging, setIsDragging] = useState(false);\n  const [toast, setToast] = useState<{ message: string; visible: boolean }>({\n    message: '',\n    visible: false\n  });\n  \n  // Use the StrictMode workaround\n  const isDndEnabled = useDndStrictModeWorkaround();\n\n  // Clean up drag state on unmount\n  useEffect(() => {\n    return () => {\n      setIsDragging(false);\n    };\n  }, []);\n\n  // Check if the user can move the ticket from source to destination status\n  const canMoveTicket = (\n    ticket: Ticket,\n    sourceStatus: TicketStatus,\n    destinationStatus: TicketStatus\n  ): boolean => {\n    const role = currentUser.role;\n    \n    // ADMIN can move tickets freely between any status\n    if (role === 'ADMIN') return true;\n    \n    // APPROVER can only approve or reject tickets from PENDING status\n    if (role === 'APPROVER') {\n      if (sourceStatus === 'PENDING' && (destinationStatus === 'APPROVED' || destinationStatus === 'REJECTED')) {\n        return true;\n      }\n      return false;\n    }\n    \n    // REQUESTER can only move their own tickets from DRAFT to PENDING\n    if (role === 'REQUESTER') {\n      if (ticket.requesterId === currentUser._id && sourceStatus === 'DRAFT' && destinationStatus === 'PENDING') {\n        return true;\n      }\n      return false;\n    }\n    \n    return false;\n  };\n\n  const getRequesterName = (ticket: Ticket): string => {\n    return ticket.requester?.fullName || 'Unknown User';\n  };\n\n  const handleDragEnd = (result: DropResult) => {\n    setIsDragging(false);\n    \n    const { draggableId, source, destination } = result;\n    \n    // Drop outside any droppable area or same position\n    if (!destination || \n        (source.droppableId === destination.droppableId && \n         source.index === destination.index)) {\n      return;\n    }\n    \n    const ticketId = draggableId;\n    const sourceStatus = source.droppableId as TicketStatus;\n    const destinationStatus = destination.droppableId as TicketStatus;\n    \n    const ticket = tickets.find(t => t._id === ticketId);\n    \n    if (!ticket) return;\n    \n    // Check if the user has permission to move the ticket\n    if (canMoveTicket(ticket, sourceStatus, destinationStatus)) {\n      onStatusChange(ticketId, destinationStatus);\n    } else {\n      // Show toast notification for permission error\n      setToast({\n        message: `You don't have permission to move this ticket to ${destinationStatus} status`,\n        visible: true\n      });\n    }\n  };\n  \n  const handleDragStart = () => {\n    setIsDragging(true);\n  };\n\n  // Handle closing the toast\n  const handleCloseToast = () => {\n    setToast({ ...toast, visible: false });\n  };\n\n  // Create a simplified board without drag-and-drop\n  const renderSimpleBoard = () => {\n    return (\n      <div className=\"task-board\">\n        {columns.map((status) => (\n          <div key={status} className=\"task-column\">\n            <h3 className=\"column-title\">{status}</h3>\n            <div className=\"task-list\">\n              {tickets\n                .filter((ticket) => ticket.status === status)\n                .map((ticket) => (\n                  <div key={ticket._id} className=\"task-card\">\n                    <div className=\"task-priority\" data-priority={ticket.department}></div>\n                    <h4>{ticket.title}</h4>\n                    <p>{ticket.description}</p>\n                    <div className=\"task-meta\">\n                      <span className=\"assignee\">{getRequesterName(ticket)}</span>\n                      <span className=\"due-date\">\n                        {ticket.requestDate ? new Date(ticket.requestDate).toLocaleDateString() : 'No date'}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n            </div>\n            <button className=\"add-task-btn\">+ Add Ticket</button>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  // If DnD is not enabled yet, render a simplified board\n  if (!isDndEnabled) {\n    return (\n      <>\n        {toast.visible && (\n          <Toast \n            message={toast.message} \n            type=\"error\" \n            onClose={handleCloseToast} \n          />\n        )}\n        {renderSimpleBoard()}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {toast.visible && (\n        <Toast \n          message={toast.message} \n          type=\"error\" \n          onClose={handleCloseToast} \n        />\n      )}\n      \n      <DragDropContext onDragEnd={handleDragEnd} onDragStart={handleDragStart}>\n        <div className=\"task-board\">\n          {columns.map((columnStatus) => (\n            <div key={columnStatus} className=\"task-column\">\n              <h3 className=\"column-title\">{columnStatus}</h3>\n              <Droppable droppableId={columnStatus} key={columnStatus}>\n                {(provided, snapshot) => {\n                  // Filter tickets for this column\n                  const columnTickets = tickets.filter(ticket => ticket.status === columnStatus);\n                  \n                  return (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.droppableProps}\n                      className={`task-list ${snapshot.isDraggingOver ? 'drop-allowed' : ''}`}\n                    >\n                      {columnTickets.map((ticket, index) => {\n                        // Determine if this ticket can be dragged\n                        const isDragDisabled = \n                          (currentUser.role === 'REQUESTER' && \n                          (ticket.requesterId !== currentUser._id || ticket.status !== 'DRAFT')) ||\n                          (currentUser.role === 'APPROVER' && ticket.status !== 'PENDING');\n                          \n                        return (\n                          <Draggable \n                            key={ticket._id} \n                            draggableId={ticket._id}\n                            index={index}\n                            isDragDisabled={isDragDisabled}\n                          >\n                            {(provided, snapshot) => (\n                              <div\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                className={`task-card ${snapshot.isDragging ? 'is-dragging' : ''} ${isDragDisabled ? 'not-draggable' : ''}`}\n                              >\n                                <div className=\"task-priority\" data-priority={ticket.department}></div>\n                                <h4>{ticket.title}</h4>\n                                <p>{ticket.description}</p>\n                                <div className=\"task-meta\">\n                                  <span className=\"assignee\">{getRequesterName(ticket)}</span>\n                                  <span className=\"due-date\">\n                                    {ticket.requestDate ? new Date(ticket.requestDate).toLocaleDateString() : 'No date'}\n                                  </span>\n                                </div>\n                              </div>\n                            )}\n                          </Draggable>\n                        );\n                      })}\n                      {provided.placeholder}\n                    </div>\n                  );\n                }}\n              </Droppable>\n              <button className=\"add-task-btn\">+ Add Ticket</button>\n            </div>\n          ))}\n        </div>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default TaskBoard; "],"mappings":";;;AAAA,SAAaA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC/C,OAAO,yBAAyB;AAEhC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAoB,qBAAqB;AACvF,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQ5B;AACA,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMa,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/BF,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,EAAE,CAAC,CAAC;IAEL,OAAO,MAAMG,YAAY,CAACF,OAAO,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,OAAO;AAChB,CAAC;AAACD,EAAA,CAdID,0BAA0B;AAgBhC,MAAMO,SAA6B,GAAGA,CAAC;EAAEC,OAAO;EAAEC,cAAc;EAAEC;AAAY,CAAC,KAAK;EAAAC,GAAA;EAClF,MAAMC,OAAuB,GAAG,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EAC5E,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAwC;IACxE2B,OAAO,EAAE,EAAE;IACXC,OAAO,EAAE;EACX,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAGnB,0BAA0B,CAAC,CAAC;;EAEjD;EACAT,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXuB,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,aAAa,GAAGA,CACpBC,MAAc,EACdC,YAA0B,EAC1BC,iBAA+B,KACnB;IACZ,MAAMC,IAAI,GAAGd,WAAW,CAACc,IAAI;;IAE7B;IACA,IAAIA,IAAI,KAAK,OAAO,EAAE,OAAO,IAAI;;IAEjC;IACA,IAAIA,IAAI,KAAK,UAAU,EAAE;MACvB,IAAIF,YAAY,KAAK,SAAS,KAAKC,iBAAiB,KAAK,UAAU,IAAIA,iBAAiB,KAAK,UAAU,CAAC,EAAE;QACxG,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;;IAEA;IACA,IAAIC,IAAI,KAAK,WAAW,EAAE;MACxB,IAAIH,MAAM,CAACI,WAAW,KAAKf,WAAW,CAACgB,GAAG,IAAIJ,YAAY,KAAK,OAAO,IAAIC,iBAAiB,KAAK,SAAS,EAAE;QACzG,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd;IAEA,OAAO,KAAK;EACd,CAAC;EAED,MAAMI,gBAAgB,GAAIN,MAAc,IAAa;IAAA,IAAAO,iBAAA;IACnD,OAAO,EAAAA,iBAAA,GAAAP,MAAM,CAACQ,SAAS,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,QAAQ,KAAI,cAAc;EACrD,CAAC;EAED,MAAMC,aAAa,GAAIC,MAAkB,IAAK;IAC5ClB,aAAa,CAAC,KAAK,CAAC;IAEpB,MAAM;MAAEmB,WAAW;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGH,MAAM;;IAEnD;IACA,IAAI,CAACG,WAAW,IACXD,MAAM,CAACE,WAAW,KAAKD,WAAW,CAACC,WAAW,IAC9CF,MAAM,CAACG,KAAK,KAAKF,WAAW,CAACE,KAAM,EAAE;MACxC;IACF;IAEA,MAAMC,QAAQ,GAAGL,WAAW;IAC5B,MAAMX,YAAY,GAAGY,MAAM,CAACE,WAA2B;IACvD,MAAMb,iBAAiB,GAAGY,WAAW,CAACC,WAA2B;IAEjE,MAAMf,MAAM,GAAGb,OAAO,CAAC+B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACd,GAAG,KAAKY,QAAQ,CAAC;IAEpD,IAAI,CAACjB,MAAM,EAAE;;IAEb;IACA,IAAID,aAAa,CAACC,MAAM,EAAEC,YAAY,EAAEC,iBAAiB,CAAC,EAAE;MAC1Dd,cAAc,CAAC6B,QAAQ,EAAEf,iBAAiB,CAAC;IAC7C,CAAC,MAAM;MACL;MACAP,QAAQ,CAAC;QACPC,OAAO,EAAE,oDAAoDM,iBAAiB,SAAS;QACvFL,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMuB,eAAe,GAAGA,CAAA,KAAM;IAC5B3B,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;;EAED;EACA,MAAM4B,gBAAgB,GAAGA,CAAA,KAAM;IAC7B1B,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEG,OAAO,EAAE;IAAM,CAAC,CAAC;EACxC,CAAC;;EAED;EACA,MAAMyB,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,oBACE9C,OAAA;MAAK+C,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBjC,OAAO,CAACkC,GAAG,CAAEC,MAAM,iBAClBlD,OAAA;QAAkB+C,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACvChD,OAAA;UAAI+C,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEE;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1CtD,OAAA;UAAK+C,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvBrC,OAAO,CACL4C,MAAM,CAAE/B,MAAM,IAAKA,MAAM,CAAC0B,MAAM,KAAKA,MAAM,CAAC,CAC5CD,GAAG,CAAEzB,MAAM,iBACVxB,OAAA;YAAsB+C,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACzChD,OAAA;cAAK+C,SAAS,EAAC,eAAe;cAAC,iBAAevB,MAAM,CAACgC;YAAW;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACvEtD,OAAA;cAAAgD,QAAA,EAAKxB,MAAM,CAACiC;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBtD,OAAA;cAAAgD,QAAA,EAAIxB,MAAM,CAACkC;YAAW;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3BtD,OAAA;cAAK+C,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBhD,OAAA;gBAAM+C,SAAS,EAAC,UAAU;gBAAAC,QAAA,EAAElB,gBAAgB,CAACN,MAAM;cAAC;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5DtD,OAAA;gBAAM+C,SAAS,EAAC,UAAU;gBAAAC,QAAA,EACvBxB,MAAM,CAACmC,WAAW,GAAG,IAAIC,IAAI,CAACpC,MAAM,CAACmC,WAAW,CAAC,CAACE,kBAAkB,CAAC,CAAC,GAAG;cAAS;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/E,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA,GATE9B,MAAM,CAACK,GAAG;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUf,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNtD,OAAA;UAAQ+C,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAnB9CJ,MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoBX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;;EAED;EACA,IAAI,CAAChC,YAAY,EAAE;IACjB,oBACEtB,OAAA,CAAAE,SAAA;MAAA8C,QAAA,GACG9B,KAAK,CAACG,OAAO,iBACZrB,OAAA,CAACF,KAAK;QACJsB,OAAO,EAAEF,KAAK,CAACE,OAAQ;QACvB0C,IAAI,EAAC,OAAO;QACZC,OAAO,EAAElB;MAAiB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CACF,EACAR,iBAAiB,CAAC,CAAC;IAAA,eACpB,CAAC;EAEP;EAEA,oBACE9C,OAAA,CAAAE,SAAA;IAAA8C,QAAA,GACG9B,KAAK,CAACG,OAAO,iBACZrB,OAAA,CAACF,KAAK;MACJsB,OAAO,EAAEF,KAAK,CAACE,OAAQ;MACvB0C,IAAI,EAAC,OAAO;MACZC,OAAO,EAAElB;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACF,eAEDtD,OAAA,CAACL,eAAe;MAACqE,SAAS,EAAE9B,aAAc;MAAC+B,WAAW,EAAErB,eAAgB;MAAAI,QAAA,eACtEhD,OAAA;QAAK+C,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBjC,OAAO,CAACkC,GAAG,CAAEiB,YAAY,iBACxBlE,OAAA;UAAwB+C,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC7ChD,OAAA;YAAI+C,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEkB;UAAY;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChDtD,OAAA,CAACJ,SAAS;YAAC2C,WAAW,EAAE2B,YAAa;YAAAlB,QAAA,EAClCA,CAACmB,QAAQ,EAAEC,QAAQ,KAAK;cACvB;cACA,MAAMC,aAAa,GAAG1D,OAAO,CAAC4C,MAAM,CAAC/B,MAAM,IAAIA,MAAM,CAAC0B,MAAM,KAAKgB,YAAY,CAAC;cAE9E,oBACElE,OAAA;gBACEsE,GAAG,EAAEH,QAAQ,CAACI,QAAS;gBAAA,GACnBJ,QAAQ,CAACK,cAAc;gBAC3BzB,SAAS,EAAE,aAAaqB,QAAQ,CAACK,cAAc,GAAG,cAAc,GAAG,EAAE,EAAG;gBAAAzB,QAAA,GAEvEqB,aAAa,CAACpB,GAAG,CAAC,CAACzB,MAAM,EAAEgB,KAAK,KAAK;kBACpC;kBACA,MAAMkC,cAAc,GACjB7D,WAAW,CAACc,IAAI,KAAK,WAAW,KAChCH,MAAM,CAACI,WAAW,KAAKf,WAAW,CAACgB,GAAG,IAAIL,MAAM,CAAC0B,MAAM,KAAK,OAAO,CAAC,IACpErC,WAAW,CAACc,IAAI,KAAK,UAAU,IAAIH,MAAM,CAAC0B,MAAM,KAAK,SAAU;kBAElE,oBACElD,OAAA,CAACH,SAAS;oBAERuC,WAAW,EAAEZ,MAAM,CAACK,GAAI;oBACxBW,KAAK,EAAEA,KAAM;oBACbkC,cAAc,EAAEA,cAAe;oBAAA1B,QAAA,EAE9BA,CAACmB,QAAQ,EAAEC,QAAQ,kBAClBpE,OAAA;sBACEsE,GAAG,EAAEH,QAAQ,CAACI,QAAS;sBAAA,GACnBJ,QAAQ,CAACQ,cAAc;sBAAA,GACvBR,QAAQ,CAACS,eAAe;sBAC5B7B,SAAS,EAAE,aAAaqB,QAAQ,CAACpD,UAAU,GAAG,aAAa,GAAG,EAAE,IAAI0D,cAAc,GAAG,eAAe,GAAG,EAAE,EAAG;sBAAA1B,QAAA,gBAE5GhD,OAAA;wBAAK+C,SAAS,EAAC,eAAe;wBAAC,iBAAevB,MAAM,CAACgC;sBAAW;wBAAAL,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC,eACvEtD,OAAA;wBAAAgD,QAAA,EAAKxB,MAAM,CAACiC;sBAAK;wBAAAN,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,eACvBtD,OAAA;wBAAAgD,QAAA,EAAIxB,MAAM,CAACkC;sBAAW;wBAAAP,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,eAC3BtD,OAAA;wBAAK+C,SAAS,EAAC,WAAW;wBAAAC,QAAA,gBACxBhD,OAAA;0BAAM+C,SAAS,EAAC,UAAU;0BAAAC,QAAA,EAAElB,gBAAgB,CAACN,MAAM;wBAAC;0BAAA2B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAO,CAAC,eAC5DtD,OAAA;0BAAM+C,SAAS,EAAC,UAAU;0BAAAC,QAAA,EACvBxB,MAAM,CAACmC,WAAW,GAAG,IAAIC,IAAI,CAACpC,MAAM,CAACmC,WAAW,CAAC,CAACE,kBAAkB,CAAC,CAAC,GAAG;wBAAS;0BAAAV,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAC/E,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACJ,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACH;kBACN,GAtBI9B,MAAM,CAACK,GAAG;oBAAAsB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAuBN,CAAC;gBAEhB,CAAC,CAAC,EACDa,QAAQ,CAACU,WAAW;cAAA;gBAAA1B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB,CAAC;YAEV;UAAC,GAjDwCY,YAAY;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkD5C,CAAC,eACZtD,OAAA;YAAQ+C,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GArD9CY,YAAY;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAsDjB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAAA,eAClB,CAAC;AAEP,CAAC;AAACxC,GAAA,CArNIJ,SAA6B;EAAA,QASZP,0BAA0B;AAAA;AAAA2E,EAAA,GAT3CpE,SAA6B;AAuNnC,eAAeA,SAAS;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}