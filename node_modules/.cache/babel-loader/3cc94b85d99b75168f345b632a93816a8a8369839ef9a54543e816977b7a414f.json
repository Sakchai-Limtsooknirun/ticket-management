{"ast":null,"code":"import{useState,useEffect}from'react';import{BrowserRouter,Routes,Route,Navigate}from'react-router-dom';import'./App.css';import Layout from'./components/Layout';import RouteWrapper from'./components/RouteWrapper';import MyTickets from'./components/tickets/MyTickets';import Login from'./components/Login';import{createTicket,getTickets,updateTicketStatus}from'./services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[tickets,setTickets]=useState([]);const[isAuthenticated,setIsAuthenticated]=useState(false);const[currentUser,setCurrentUser]=useState(null);useEffect(()=>{// Check for existing auth token and user data\nconst token=localStorage.getItem('token');const savedUser=localStorage.getItem('user');if(token&&savedUser){setIsAuthenticated(true);setCurrentUser(JSON.parse(savedUser));// Fetch tickets when authenticated\nfetchTickets();}},[]);const fetchTickets=async()=>{try{const fetchedTickets=await getTickets();setTickets(fetchedTickets);}catch(error){console.error('Error fetching tickets:',error);}};const handleLoginSuccess=(token,user)=>{setIsAuthenticated(true);setCurrentUser(user);// Fetch tickets after successful login\nfetchTickets();};const handleLogout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setIsAuthenticated(false);setCurrentUser(null);setTickets([]);};const handleCreateRequest=navigate=>{navigate('/tickets/create');};const handleTicketSubmit=async(ticketData,navigate)=>{try{await createTicket(ticketData);// Fetch updated tickets list\nawait fetchTickets();navigate('/tickets');alert('Ticket created successfully!');}catch(error){console.error('Error creating ticket:',error);alert('Failed to create ticket. Please try again.');}};const handleTicketStatusChange=async(ticketId,newStatus)=>{try{await updateTicketStatus(ticketId,newStatus);// Fetch updated tickets list\nawait fetchTickets();}catch(error){console.error('Error updating ticket status:',error);alert('Failed to update ticket status. Please try again.');}};if(!isAuthenticated){return/*#__PURE__*/_jsx(Login,{onLoginSuccess:handleLoginSuccess});}return/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsxs(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Layout,{currentUser:currentUser,onLogout:handleLogout,onCreateRequest:()=>{}}),children:[/*#__PURE__*/_jsx(Route,{index:true,element:/*#__PURE__*/_jsx(RouteWrapper,{component:\"home\",tickets:tickets,currentUser:currentUser,onCreateRequest:handleCreateRequest,onStatusChange:handleTicketStatusChange})}),/*#__PURE__*/_jsx(Route,{path:\"tickets\",element:/*#__PURE__*/_jsx(MyTickets,{tickets:tickets,currentUser:currentUser})}),/*#__PURE__*/_jsx(Route,{path:\"tickets/create\",element:/*#__PURE__*/_jsx(RouteWrapper,{component:\"create\",currentUser:currentUser,onCreateRequest:handleCreateRequest,onSubmit:handleTicketSubmit})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]})})});};export default App;","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Routes","Route","Navigate","Layout","RouteWrapper","MyTickets","Login","createTicket","getTickets","updateTicketStatus","jsx","_jsx","jsxs","_jsxs","App","tickets","setTickets","isAuthenticated","setIsAuthenticated","currentUser","setCurrentUser","token","localStorage","getItem","savedUser","JSON","parse","fetchTickets","fetchedTickets","error","console","handleLoginSuccess","user","handleLogout","removeItem","handleCreateRequest","navigate","handleTicketSubmit","ticketData","alert","handleTicketStatusChange","ticketId","newStatus","onLoginSuccess","children","path","element","onLogout","onCreateRequest","index","component","onStatusChange","onSubmit","to","replace"],"sources":["/Users/a667227/Desktop/Work/ticket-management/src/App.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout';\nimport RouteWrapper from './components/RouteWrapper';\nimport MyTickets from './components/tickets/MyTickets';\nimport Login from './components/Login';\nimport { User, Ticket, TicketStatus } from './types/system';\nimport { createTicket, getTickets, updateTicketStatus } from './services/api';\n\nconst App: FC = () => {\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (token && savedUser) {\n      setIsAuthenticated(true);\n      setCurrentUser(JSON.parse(savedUser));\n      // Fetch tickets when authenticated\n      fetchTickets();\n    }\n  }, []);\n\n  const fetchTickets = async () => {\n    try {\n      const fetchedTickets = await getTickets();\n      setTickets(fetchedTickets);\n    } catch (error) {\n      console.error('Error fetching tickets:', error);\n    }\n  };\n\n  const handleLoginSuccess = (token: string, user: User) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setTickets([]);\n  };\n\n  const handleCreateRequest = (navigate: (path: string) => void) => {\n    navigate('/tickets/create');\n  };\n\n  const handleTicketSubmit = async (ticketData: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'>, navigate: (path: string) => void) => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      navigate('/tickets');\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n\n  const handleTicketStatusChange = async (ticketId: string, newStatus: TicketStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n\n  if (!isAuthenticated) {\n    return <Login onLoginSuccess={handleLoginSuccess} />;\n  }\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route \n          path=\"/\" \n          element={\n            <Layout \n              currentUser={currentUser!}\n              onLogout={handleLogout}\n              onCreateRequest={() => {}}\n            />\n          }\n        >\n          <Route index element={\n            <RouteWrapper \n              component=\"home\"\n              tickets={tickets}\n              currentUser={currentUser!}\n              onCreateRequest={handleCreateRequest}\n              onStatusChange={handleTicketStatusChange}\n            />\n          } />\n          <Route \n            path=\"tickets\"\n            element={\n              <MyTickets\n                tickets={tickets}\n                currentUser={currentUser!}\n              />\n            }\n          />\n          <Route \n            path=\"tickets/create\" \n            element={\n              <RouteWrapper \n                component=\"create\"\n                currentUser={currentUser!}\n                onCreateRequest={handleCreateRequest}\n                onSubmit={handleTicketSubmit}\n              />\n            } \n          />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}