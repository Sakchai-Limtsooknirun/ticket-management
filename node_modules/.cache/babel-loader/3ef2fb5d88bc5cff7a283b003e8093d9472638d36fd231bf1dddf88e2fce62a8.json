{"ast":null,"code":"var _jsxFileName = \"/Users/a667227/Desktop/Work/web2-announcement/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport Products from './components/Products';\nimport TicketCreation from './components/tickets/TicketCreation';\nimport TaskBoard from './components/TaskBoard';\nimport Login from './components/Login';\nimport { createTicket, getTickets, updateTicketStatus } from './services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [showTicketCreation, setShowTicketCreation] = useState(false);\n  const [tickets, setTickets] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (token && savedUser) {\n      setIsAuthenticated(true);\n      setCurrentUser(JSON.parse(savedUser));\n      // Fetch tickets when authenticated\n      fetchTickets();\n    }\n  }, []);\n  const fetchTickets = async () => {\n    try {\n      const fetchedTickets = await getTickets();\n      setTickets(fetchedTickets);\n    } catch (error) {\n      console.error('Error fetching tickets:', error);\n    }\n  };\n  const handleLoginSuccess = (token, user) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setShowTicketCreation(false);\n    setTickets([]);\n  };\n  const handleCreateRequest = () => {\n    setShowTicketCreation(true);\n  };\n  const handleTicketSubmit = async ticketData => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      setShowTicketCreation(false);\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n  const handleTicketStatusChange = async (ticketId, newStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onCreateRequest: handleCreateRequest,\n      currentUser: currentUser,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: showTicketCreation ? /*#__PURE__*/_jsxDEV(TicketCreation, {\n        currentUser: currentUser,\n        onSubmit: handleTicketSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Hero, {\n          onCreateRequest: handleCreateRequest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TaskBoard, {\n          tickets: tickets,\n          onStatusChange: handleTicketStatusChange,\n          currentUser: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"accessibility-btn\",\n      \"aria-label\": \"Accessibility Options\",\n      children: \"\\u267F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RRK2fHiuaEyxnqGyxTbDAynUbrk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Hero","Products","TicketCreation","TaskBoard","Login","createTicket","getTickets","updateTicketStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showTicketCreation","setShowTicketCreation","tickets","setTickets","isAuthenticated","setIsAuthenticated","currentUser","setCurrentUser","token","localStorage","getItem","savedUser","JSON","parse","fetchTickets","fetchedTickets","error","console","handleLoginSuccess","user","handleLogout","removeItem","handleCreateRequest","handleTicketSubmit","ticketData","alert","handleTicketStatusChange","ticketId","newStatus","onLoginSuccess","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onCreateRequest","onLogout","onSubmit","onStatusChange","_c","$RefreshReg$"],"sources":["/Users/a667227/Desktop/Work/web2-announcement/src/App.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport Products from './components/Products';\nimport TicketCreation from './components/tickets/TicketCreation';\nimport TaskBoard from './components/TaskBoard';\nimport Login from './components/Login';\nimport { User, Ticket, TicketStatus } from './types/system';\nimport { createTicket, getTickets, updateTicketStatus } from './services/api';\n\nconst App: FC = () => {\n  const [showTicketCreation, setShowTicketCreation] = useState(false);\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (token && savedUser) {\n      setIsAuthenticated(true);\n      setCurrentUser(JSON.parse(savedUser));\n      // Fetch tickets when authenticated\n      fetchTickets();\n    }\n  }, []);\n\n  const fetchTickets = async () => {\n    try {\n      const fetchedTickets = await getTickets();\n      setTickets(fetchedTickets);\n    } catch (error) {\n      console.error('Error fetching tickets:', error);\n    }\n  };\n\n  const handleLoginSuccess = (token: string, user: User) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setShowTicketCreation(false);\n    setTickets([]);\n  };\n\n  const handleCreateRequest = () => {\n    setShowTicketCreation(true);\n  };\n\n  const handleTicketSubmit = async (ticketData: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'>) => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      setShowTicketCreation(false);\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n\n  const handleTicketStatusChange = async (ticketId: string, newStatus: TicketStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n\n  if (!isAuthenticated) {\n    return <Login onLoginSuccess={handleLoginSuccess} />;\n  }\n\n  return (\n    <div className=\"app\">\n      <Header \n        onCreateRequest={handleCreateRequest}\n        currentUser={currentUser!}\n        onLogout={handleLogout}\n      />\n      <main>\n        {showTicketCreation ? (\n          <TicketCreation \n            currentUser={currentUser!}\n            onSubmit={handleTicketSubmit}\n          />\n        ) : (\n          <>\n            <Hero onCreateRequest={handleCreateRequest} />\n            <Products />\n            <TaskBoard \n              tickets={tickets}\n              onStatusChange={handleTicketStatusChange}\n              currentUser={currentUser!}\n            />\n          </>\n        )}\n      </main>\n      <button className=\"accessibility-btn\" aria-label=\"Accessibility Options\">â™¿</button>\n    </div>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}