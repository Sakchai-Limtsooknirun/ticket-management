{"ast":null,"code":"import{useState,useEffect}from'react';import{BrowserRouter,Routes,Route,Navigate}from'react-router-dom';import'./App.css';import Layout from'./components/Layout';import RouteWrapper from'./components/RouteWrapper';import MyTickets from'./components/tickets/MyTickets';import Login from'./components/Login';import{createTicket,getTickets,updateTicketStatus,updateTicket,getAllTicketsRaw,checkApiConnection}from'./services/api';import TicketDetail from'./components/tickets/TicketDetail';import RequestManagement from'./components/admin/RequestManagement';import ProtectedRoute from'./components/ProtectedRoute';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{var _debugInfo$data,_debugInfo$data2,_debugInfo$data$conne,_debugInfo$data3;const[tickets,setTickets]=useState([]);const[isAuthenticated,setIsAuthenticated]=useState(false);const[currentUser,setCurrentUser]=useState(null);const[debugInfo,setDebugInfo]=useState({visible:false,data:null});const[serverStatus,setServerStatus]=useState('unknown');const[showStartServerInstructions,setShowStartServerInstructions]=useState(false);useEffect(()=>{// Check for existing auth token and user data\nconst token=localStorage.getItem('token');const savedUser=localStorage.getItem('user');if(token&&savedUser){try{const parsedUser=JSON.parse(savedUser);console.log('Loaded user:',parsedUser);// Debug log\nconsole.log('Token found:',token?'Yes (length: '+token.length+')':'No');setIsAuthenticated(true);setCurrentUser(parsedUser);// Fetch tickets when authenticated\nfetchTickets();// Check server status quietly (no UI indicators)\ncheckServerStatusQuietly();}catch(error){console.error('Error parsing saved user data:',error);// Handle corrupted user data by clearing it\nlocalStorage.removeItem('token');localStorage.removeItem('user');setIsAuthenticated(false);}}else{console.log('No authentication found. Token:',!!token,'User:',!!savedUser);}},[]);const fetchTickets=async dateRange=>{try{// Use a default date range if none provided (all time)\nif(!dateRange){const end=new Date();const start=new Date(2020,0,1);// Jan 1, 2020 instead of 365 days\ndateRange={startDate:start,endDate:end};}// Ensure startDate and endDate are defined\nconst safeRange={startDate:dateRange.startDate||new Date(2020,0,1),endDate:dateRange.endDate||new Date()};console.log('App fetching tickets with date range:',{startDate:safeRange.startDate.toISOString(),endDate:safeRange.endDate.toISOString()});const response=await getTickets(undefined,1,100,safeRange);// Check if there was an error in the response\nif(response.error){console.error('Error in ticket response:',response.error);setDebugInfo({visible:true,data:{status:'error',message:'Error fetching tickets',error:response.error,timestamp:new Date().toISOString()}});// Keep existing tickets instead of setting empty array\nreturn;}// Handle response with tickets\nif(response.tickets&&Array.isArray(response.tickets)){const ticketsArray=response.tickets;console.log(`App received ${ticketsArray.length} tickets`);// Log first ticket data for debugging\nif(ticketsArray.length>0){console.log('First ticket sample:',{id:ticketsArray[0]._id,title:ticketsArray[0].title,status:ticketsArray[0].status,date:ticketsArray[0].requestDate});}setTickets(ticketsArray);}else{console.warn('Unexpected ticket response format:',response);setTickets([]);}}catch(error){console.error('Error fetching tickets:',error);setDebugInfo({visible:true,data:{status:'error',message:'Exception fetching tickets',error:(error===null||error===void 0?void 0:error.message)||'Unknown error',timestamp:new Date().toISOString()}});// If we get an authentication error, clear the token and redirect to login\nif(error!==null&&error!==void 0&&error.response&&error.response.status===401){console.error('Authentication error. Redirecting to login.');localStorage.removeItem('token');localStorage.removeItem('user');setIsAuthenticated(false);setCurrentUser(null);}}};const handleLoginSuccess=(token,user)=>{setIsAuthenticated(true);setCurrentUser(user);// Fetch tickets after successful login\nfetchTickets();};const handleLogout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setIsAuthenticated(false);setCurrentUser(null);setTickets([]);};const handleCreateRequest=()=>{// Use navigate directly in components that need it\nwindow.location.href='/tickets/create';};const handleTicketSubmit=async(ticketData,navigate)=>{try{await createTicket(ticketData);// Fetch updated tickets list\nawait fetchTickets();navigate('/tickets');alert('Ticket created successfully!');}catch(error){console.error('Error creating ticket:',error);alert('Failed to create ticket. Please try again.');}};const handleTicketStatusChange=async(ticketId,newStatus)=>{try{await updateTicketStatus(ticketId,newStatus);// Fetch updated tickets list\nawait fetchTickets();}catch(error){console.error('Error updating ticket status:',error);alert('Failed to update ticket status. Please try again.');}};const handleUpdateTicket=async(ticketId,updatedData)=>{try{if('status'in updatedData){// Use status-specific endpoint for status updates\nawait updateTicketStatus(ticketId,updatedData.status);}else{// Use general update endpoint for other updates\nawait updateTicket(ticketId,updatedData);}// Fetch updated tickets list\nawait fetchTickets();}catch(error){console.error('Error updating ticket:',error);alert('Failed to update ticket. Please try again.');}};// Add debug function to directly fetch and display the raw API response\nconst debugApiCall=async()=>{try{var _localStorage$getItem;setDebugInfo({visible:true,data:{status:'loading',message:'Fetching data from API...'}});// Call the raw tickets endpoint\nconst rawResponse=await getAllTicketsRaw();console.log('DEBUG: Raw API response:',rawResponse);// Show detailed debug info\nsetDebugInfo({visible:true,data:{status:'success',timestamp:new Date().toISOString(),endpoint:'/tickets',response:rawResponse,auth:{tokenExists:!!localStorage.getItem('token'),tokenLength:((_localStorage$getItem=localStorage.getItem('token'))===null||_localStorage$getItem===void 0?void 0:_localStorage$getItem.length)||0,userInfo:currentUser?{id:currentUser._id,role:currentUser.role,email:currentUser.email}:'No user data'}}});}catch(error){var _error$response;console.error('Debug API call failed:',error);setDebugInfo({visible:true,data:{status:'error',timestamp:new Date().toISOString(),message:(error===null||error===void 0?void 0:error.message)||'Unknown error',details:(error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||{},stack:(error===null||error===void 0?void 0:error.stack)||''}});}};// Improved test ticket creation with detailed responses\nconst createTestTicket=async()=>{if(!currentUser)return;try{console.log('Creating test ticket...');setDebugInfo({visible:true,data:{status:'loading',message:'Creating test ticket...'}});const testTicketData={_id:'',// This will be generated by the server\ntitle:'Test Ticket '+new Date().toISOString(),description:'This is a test ticket created for debugging.',requesterId:currentUser._id,department:currentUser.department,chemicalConfig:{machineId:'TEST-MACHINE',machineName:'Test Machine',chemicalType:'Test Chemical',concentration:1.0,temperature:25.0,flowRate:1.0},requestDate:new Date().toISOString()};const response=await createTicket(testTicketData);console.log('Test ticket created successfully:',response);// Show success info\nsetDebugInfo({visible:true,data:{status:'success',message:'Test ticket created successfully',ticketData:response,timestamp:new Date().toISOString()}});// Fetch tickets again\nfetchTickets();}catch(error){var _error$response2;console.error('Error creating test ticket:',error);setDebugInfo({visible:true,data:{status:'error',message:`Error creating test ticket: ${(error===null||error===void 0?void 0:error.message)||'Unknown error'}`,details:(error===null||error===void 0?void 0:(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||{},timestamp:new Date().toISOString()}});alert(`Error creating test ticket: ${(error===null||error===void 0?void 0:error.message)||'Unknown error'}`);}};// Function to close debug panel\nconst closeDebugPanel=()=>{setDebugInfo({...debugInfo,visible:false});};// Add a quiet server status check function (no UI feedback)\nconst checkServerStatusQuietly=async()=>{try{console.log('Checking server status quietly...');const connectionInfo=await checkApiConnection();if(connectionInfo.overallStatus==='server_unreachable'){setServerStatus('offline');}else if(connectionInfo.overallStatus==='auth_issue'){setServerStatus('auth_issue');}else{setServerStatus('online');}console.log('Server status:',serverStatus);}catch(error){console.error('Error checking server status:',error);setServerStatus('offline');}};// Update the server connection check to also update status\nconst checkServerConnection=async()=>{try{setDebugInfo({visible:true,data:{status:'loading',message:'Checking API server connection...'}});const connectionInfo=await checkApiConnection();console.log('Server connection check:',connectionInfo);// Update server status\nif(connectionInfo.overallStatus==='server_unreachable'){setServerStatus('offline');}else if(connectionInfo.overallStatus==='auth_issue'){setServerStatus('auth_issue');}else{setServerStatus('online');}// Show detailed connection info\nsetDebugInfo({visible:true,data:{status:'connection_check',timestamp:new Date().toISOString(),title:'API Server Connection Status',connection:connectionInfo,recommendations:getConnectionRecommendations(connectionInfo)}});}catch(error){console.error('Connection check failed:',error);setServerStatus('offline');setDebugInfo({visible:true,data:{status:'error',timestamp:new Date().toISOString(),message:'Connection check failed',error:(error===null||error===void 0?void 0:error.message)||'Unknown error',stack:(error===null||error===void 0?void 0:error.stack)||''}});}};// Helper function to generate recommendations based on connection check results\nconst getConnectionRecommendations=connectionInfo=>{var _connectionInfo$summa;const recommendations=[];if(connectionInfo.overallStatus==='server_unreachable'){recommendations.push('The backend server is not reachable. Check if the server is running on the correct port.');recommendations.push('Verify that the API_BASE_URL is correct (currently: '+connectionInfo.apiBaseUrl+')');recommendations.push('Check for network connectivity issues or firewall restrictions.');recommendations.push('Make sure the server is running on port 5001 (or update API_BASE_URL if different).');}else if(connectionInfo.overallStatus==='auth_issue'){recommendations.push('The server is reachable, but authentication is failing.');recommendations.push('Your auth token may be invalid or expired. Try logging out and back in.');recommendations.push('Check if your user account has the proper permissions on the server.');}else if(((_connectionInfo$summa=connectionInfo.summary)===null||_connectionInfo$summa===void 0?void 0:_connectionInfo$summa.successfulChecks)===0){recommendations.push('All connectivity checks failed. This could indicate a CORS issue.');recommendations.push('Check browser console for CORS-related errors.');recommendations.push('Verify that the backend server has the correct CORS headers configured.');}return recommendations;};// Show instructions to start the server\nconst showServerInstructions=()=>{setShowStartServerInstructions(true);};// Hide server instructions\nconst hideServerInstructions=()=>{setShowStartServerInstructions(false);};if(!isAuthenticated||!currentUser){return/*#__PURE__*/_jsx(Login,{onLoginSuccess:handleLoginSuccess});}// If authenticated but no tickets, add a debug button\nif(tickets.length===0){console.log('No tickets found. Adding debug UI...');}return/*#__PURE__*/_jsxs(BrowserRouter,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',top:'10px',right:'10px',zIndex:1001,display:'flex',alignItems:'center',backgroundColor:serverStatus==='online'?'rgba(40, 167, 69, 0.8)':serverStatus==='offline'?'rgba(220, 53, 69, 0.8)':serverStatus==='auth_issue'?'rgba(255, 193, 7, 0.8)':'rgba(108, 117, 125, 0.8)',color:'white',padding:'5px 10px',borderRadius:'4px',fontSize:'12px',cursor:'pointer',boxShadow:'0 2px 4px rgba(0,0,0,0.2)'},onClick:checkServerConnection,title:\"Click to check server connection\",children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'10px',height:'10px',borderRadius:'50%',backgroundColor:serverStatus==='online'?'#28a745':serverStatus==='offline'?'#dc3545':serverStatus==='auth_issue'?'#ffc107':'#6c757d',marginRight:'8px',boxShadow:'0 0 5px rgba(255,255,255,0.5)'}}),\"Backend Server: \",serverStatus==='online'?'Online':serverStatus==='offline'?'Offline':serverStatus==='auth_issue'?'Auth Issue':'Unknown']}),showStartServerInstructions&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0,0,0,0.7)',zIndex:9999,display:'flex',alignItems:'center',justifyContent:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#fff',borderRadius:'8px',padding:'20px',maxWidth:'600px',boxShadow:'0 4px 8px rgba(0,0,0,0.2)',color:'#333'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{margin:0,color:'#333'},children:\"Start Backend Server\"}),/*#__PURE__*/_jsx(\"button\",{onClick:hideServerInstructions,style:{background:'none',border:'none',fontSize:'20px',cursor:'pointer'},children:\"\\u2715\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Follow these steps to start the backend server:\"}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#f5f5f5',padding:'15px',borderRadius:'4px',fontFamily:'monospace',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:'bold',marginBottom:'10px'},children:\"1. Open a terminal and navigate to your project folder:\"}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#333',color:'#fff',padding:'10px',borderRadius:'4px',marginBottom:'15px'},children:\"cd /Users/a667227/Desktop/Work/ticket-management\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:'bold',marginBottom:'10px'},children:\"2. Navigate to the backend directory:\"}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#333',color:'#fff',padding:'10px',borderRadius:'4px',marginBottom:'15px'},children:\"cd backend\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:'bold',marginBottom:'10px'},children:\"3. Install dependencies (if needed):\"}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#333',color:'#fff',padding:'10px',borderRadius:'4px',marginBottom:'15px'},children:\"npm install\"}),/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:'bold',marginBottom:'10px'},children:\"4. Start the server:\"}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#333',color:'#fff',padding:'10px',borderRadius:'4px'},children:[\"npm run dev\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"span\",{style:{color:'#999'},children:\"// or: npm start\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'flex-end'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:hideServerInstructions,style:{backgroundColor:'#6c757d',color:'white',border:'none',padding:'8px 16px',borderRadius:'4px',cursor:'pointer',marginRight:'10px'},children:\"Close\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{hideServerInstructions();checkServerConnection();},style:{backgroundColor:'#28a745',color:'white',border:'none',padding:'8px 16px',borderRadius:'4px',cursor:'pointer'},children:\"Check Connection Again\"})]})]})}),debugInfo.visible&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0,0,0,0.8)',zIndex:9999,overflow:'auto',padding:'20px',color:'#fff',fontFamily:'monospace'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#1e1e1e',padding:'20px',borderRadius:'8px',maxWidth:'1200px',margin:'0 auto',boxShadow:'0 0 20px rgba(0,0,0,0.5)'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{color:'#61dafb',margin:0},children:((_debugInfo$data=debugInfo.data)===null||_debugInfo$data===void 0?void 0:_debugInfo$data.title)||'API Debug Information'}),/*#__PURE__*/_jsx(\"button\",{onClick:closeDebugPanel,style:{backgroundColor:'#e74c3c',color:'white',border:'none',padding:'5px 15px',borderRadius:'4px',cursor:'pointer'},children:\"Close\"})]}),((_debugInfo$data2=debugInfo.data)===null||_debugInfo$data2===void 0?void 0:_debugInfo$data2.status)==='connection_check'&&debugInfo.data.recommendations&&debugInfo.data.recommendations.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#2d2d2d',padding:'15px',borderRadius:'4px',marginBottom:'15px',border:'1px solid #ffc107'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'#ffc107',marginTop:0},children:\"Recommendations\"}),/*#__PURE__*/_jsx(\"ul\",{style:{color:'#fff',paddingLeft:'20px'},children:debugInfo.data.recommendations.map((rec,index)=>/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:'8px'},children:rec},index))}),((_debugInfo$data$conne=debugInfo.data.connection)===null||_debugInfo$data$conne===void 0?void 0:_debugInfo$data$conne.overallStatus)==='server_unreachable'&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'15px',padding:'10px',backgroundColor:'#463022',borderRadius:'4px'},children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Steps to start the server:\"})}),/*#__PURE__*/_jsxs(\"ol\",{style:{paddingLeft:'20px'},children:[/*#__PURE__*/_jsx(\"li\",{children:\"Open a terminal in your project root\"}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Navigate to the backend folder: \",/*#__PURE__*/_jsx(\"code\",{children:\"cd backend\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Install dependencies if needed: \",/*#__PURE__*/_jsx(\"code\",{children:\"npm install\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Start the server: \",/*#__PURE__*/_jsx(\"code\",{children:\"npm start\"}),\" or \",/*#__PURE__*/_jsx(\"code\",{children:\"node server.js\"})]})]})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'#2d2d2d',padding:'15px',borderRadius:'4px',overflowX:'auto'},children:/*#__PURE__*/_jsx(\"pre\",{style:{maxHeight:'80vh',margin:0,color:((_debugInfo$data3=debugInfo.data)===null||_debugInfo$data3===void 0?void 0:_debugInfo$data3.status)==='error'?'#ff6b6b':'#a3e635'},children:JSON.stringify(debugInfo.data,null,2)})})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{padding:'10px',backgroundColor:'#343a40',color:'white',textAlign:'center',position:'sticky',top:0,zIndex:1000,display:'flex',justifyContent:'center',gap:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:checkServerConnection,style:{padding:'5px 10px',backgroundColor:'#dc3545',color:'white',border:'none',borderRadius:'4px'},children:\"Check Server Connection\"}),serverStatus==='offline'&&/*#__PURE__*/_jsx(\"button\",{onClick:showServerInstructions,style:{padding:'5px 10px',backgroundColor:'#ffc107',color:'black',border:'none',borderRadius:'4px'},children:\"Start Backend Server\"}),/*#__PURE__*/_jsx(\"button\",{onClick:createTestTicket,style:{padding:'5px 10px',backgroundColor:'#28a745',color:'white',border:'none',borderRadius:'4px'},children:\"Create Test Ticket\"}),/*#__PURE__*/_jsx(\"button\",{onClick:debugApiCall,style:{padding:'5px 10px',backgroundColor:'#007bff',color:'white',border:'none',borderRadius:'4px'},children:\"Debug API Response\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>fetchTickets(),style:{padding:'5px 10px',backgroundColor:'#6c757d',color:'white',border:'none',borderRadius:'4px'},children:\"Refresh Tickets\"})]}),serverStatus==='offline'&&/*#__PURE__*/_jsxs(\"div\",{style:{padding:'15px',backgroundColor:'#f8d7da',color:'#721c24',textAlign:'center',margin:'10px',border:'1px solid #f5c6cb',borderRadius:'4px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:'0 0 10px 0'},children:\"Backend Server is Offline\"}),/*#__PURE__*/_jsx(\"p\",{children:\"The application cannot retrieve tickets because the backend server is not running.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:showServerInstructions,style:{backgroundColor:'#ffc107',color:'black',border:'none',padding:'8px 16px',borderRadius:'4px',cursor:'pointer',marginTop:'10px'},children:\"Show Instructions to Start Server\"})]}),tickets.length===0&&serverStatus!=='offline'&&/*#__PURE__*/_jsx(\"div\",{style:{padding:'10px',backgroundColor:'#f8f9fa',color:'#6c757d',textAlign:'center',margin:'10px',border:'1px solid #dee2e6',borderRadius:'4px'},children:/*#__PURE__*/_jsx(\"p\",{children:\"No tickets found. Use the debug tools above to investigate.\"})}),/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsxs(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Layout,{currentUser:currentUser,onLogout:handleLogout}),children:[/*#__PURE__*/_jsx(Route,{index:true,element:/*#__PURE__*/_jsx(RouteWrapper,{component:\"home\",tickets:tickets,currentUser:currentUser,onCreateRequest:handleCreateRequest,onStatusChange:handleTicketStatusChange})}),/*#__PURE__*/_jsx(Route,{path:\"tickets\",element:/*#__PURE__*/_jsx(MyTickets,{tickets:tickets,currentUser:currentUser})}),/*#__PURE__*/_jsx(Route,{path:\"tickets/create\",element:/*#__PURE__*/_jsx(RouteWrapper,{component:\"create\",currentUser:currentUser,onCreateRequest:handleCreateRequest,onSubmit:handleTicketSubmit})}),/*#__PURE__*/_jsx(Route,{path:\"/my-tickets\",element:/*#__PURE__*/_jsx(MyTickets,{tickets:tickets,currentUser:currentUser})}),/*#__PURE__*/_jsx(Route,{path:\"/tickets/:id\",element:/*#__PURE__*/_jsx(TicketDetail,{tickets:tickets,currentUser:currentUser,onUpdate:handleUpdateTicket})}),/*#__PURE__*/_jsx(Route,{path:\"/admin/requests\",element:/*#__PURE__*/_jsx(ProtectedRoute,{currentUser:currentUser,requiredRole:['ADMIN','APPROVER'],children:/*#__PURE__*/_jsx(RequestManagement,{tickets:tickets,currentUser:currentUser,onUpdate:handleUpdateTicket})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true})})]})})]});};export default App;","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Routes","Route","Navigate","Layout","RouteWrapper","MyTickets","Login","createTicket","getTickets","updateTicketStatus","updateTicket","getAllTicketsRaw","checkApiConnection","TicketDetail","RequestManagement","ProtectedRoute","jsx","_jsx","jsxs","_jsxs","App","_debugInfo$data","_debugInfo$data2","_debugInfo$data$conne","_debugInfo$data3","tickets","setTickets","isAuthenticated","setIsAuthenticated","currentUser","setCurrentUser","debugInfo","setDebugInfo","visible","data","serverStatus","setServerStatus","showStartServerInstructions","setShowStartServerInstructions","token","localStorage","getItem","savedUser","parsedUser","JSON","parse","console","log","length","fetchTickets","checkServerStatusQuietly","error","removeItem","dateRange","end","Date","start","startDate","endDate","safeRange","toISOString","response","undefined","status","message","timestamp","Array","isArray","ticketsArray","id","_id","title","date","requestDate","warn","handleLoginSuccess","user","handleLogout","handleCreateRequest","window","location","href","handleTicketSubmit","ticketData","navigate","alert","handleTicketStatusChange","ticketId","newStatus","handleUpdateTicket","updatedData","debugApiCall","_localStorage$getItem","rawResponse","endpoint","auth","tokenExists","tokenLength","userInfo","role","email","_error$response","details","stack","createTestTicket","testTicketData","description","requesterId","department","chemicalConfig","machineId","machineName","chemicalType","concentration","temperature","flowRate","_error$response2","closeDebugPanel","connectionInfo","overallStatus","checkServerConnection","connection","recommendations","getConnectionRecommendations","_connectionInfo$summa","push","apiBaseUrl","summary","successfulChecks","showServerInstructions","hideServerInstructions","onLoginSuccess","children","style","position","top","right","zIndex","display","alignItems","backgroundColor","color","padding","borderRadius","fontSize","cursor","boxShadow","onClick","width","height","marginRight","left","bottom","justifyContent","maxWidth","marginBottom","margin","background","border","fontFamily","fontWeight","overflow","marginTop","paddingLeft","map","rec","index","overflowX","maxHeight","stringify","textAlign","gap","path","element","onLogout","component","onCreateRequest","onStatusChange","onSubmit","onUpdate","requiredRole","to","replace"],"sources":["/Users/s89539/Desktop/ticket-management/src/App.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout';\nimport RouteWrapper from './components/RouteWrapper';\nimport MyTickets from './components/tickets/MyTickets';\nimport Login from './components/Login';\nimport { User, Ticket, TicketStatus } from './types/system';\nimport { \n  createTicket, \n  getTickets, \n  updateTicketStatus, \n  updateTicket, \n  getAllTicketsRaw,\n  checkApiConnection \n} from './services/api';\nimport TicketDetail from './components/tickets/TicketDetail';\nimport RequestManagement from './components/admin/RequestManagement';\nimport ProtectedRoute from './components/ProtectedRoute';\n\nconst App: FC = () => {\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [debugInfo, setDebugInfo] = useState<{ visible: boolean; data: any }>({\n    visible: false,\n    data: null\n  });\n  const [serverStatus, setServerStatus] = useState<'unknown' | 'online' | 'offline' | 'auth_issue'>('unknown');\n  const [showStartServerInstructions, setShowStartServerInstructions] = useState(false);\n\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (token && savedUser) {\n      try {\n        const parsedUser = JSON.parse(savedUser);\n        console.log('Loaded user:', parsedUser); // Debug log\n        console.log('Token found:', token ? 'Yes (length: ' + token.length + ')' : 'No');\n        setIsAuthenticated(true);\n        setCurrentUser(parsedUser);\n        // Fetch tickets when authenticated\n        fetchTickets();\n        // Check server status quietly (no UI indicators)\n        checkServerStatusQuietly();\n      } catch (error: any) {\n        console.error('Error parsing saved user data:', error);\n        // Handle corrupted user data by clearing it\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n      }\n    } else {\n      console.log('No authentication found. Token:', !!token, 'User:', !!savedUser);\n    }\n  }, []);\n\n  const fetchTickets = async (dateRange?: { startDate?: Date, endDate?: Date }) => {\n    try {\n      // Use a default date range if none provided (all time)\n      if (!dateRange) {\n        const end = new Date();\n        const start = new Date(2020, 0, 1); // Jan 1, 2020 instead of 365 days\n        dateRange = { startDate: start, endDate: end };\n      }\n      \n      // Ensure startDate and endDate are defined\n      const safeRange = {\n        startDate: dateRange.startDate || new Date(2020, 0, 1),\n        endDate: dateRange.endDate || new Date()\n      };\n      \n      console.log('App fetching tickets with date range:', {\n        startDate: safeRange.startDate.toISOString(),\n        endDate: safeRange.endDate.toISOString()\n      });\n      \n      const response = await getTickets(undefined, 1, 100, safeRange);\n      \n      // Check if there was an error in the response\n      if (response.error) {\n        console.error('Error in ticket response:', response.error);\n        setDebugInfo({\n          visible: true,\n          data: {\n            status: 'error',\n            message: 'Error fetching tickets',\n            error: response.error,\n            timestamp: new Date().toISOString()\n          }\n        });\n        // Keep existing tickets instead of setting empty array\n        return;\n      }\n      \n      // Handle response with tickets\n      if (response.tickets && Array.isArray(response.tickets)) {\n        const ticketsArray = response.tickets;\n        console.log(`App received ${ticketsArray.length} tickets`);\n        \n        // Log first ticket data for debugging\n        if (ticketsArray.length > 0) {\n          console.log('First ticket sample:', {\n            id: ticketsArray[0]._id,\n            title: ticketsArray[0].title,\n            status: ticketsArray[0].status,\n            date: ticketsArray[0].requestDate\n          });\n        }\n        \n        setTickets(ticketsArray);\n      } else {\n        console.warn('Unexpected ticket response format:', response);\n        setTickets([]);\n      }\n    } catch (error: any) {\n      console.error('Error fetching tickets:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          message: 'Exception fetching tickets',\n          error: error?.message || 'Unknown error',\n          timestamp: new Date().toISOString()\n        }\n      });\n      \n      // If we get an authentication error, clear the token and redirect to login\n      if (error?.response && error.response.status === 401) {\n        console.error('Authentication error. Redirecting to login.');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n        setCurrentUser(null);\n      }\n    }\n  };\n\n  const handleLoginSuccess = (token: string, user: User) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setTickets([]);\n  };\n\n  const handleCreateRequest = () => {\n    // Use navigate directly in components that need it\n    window.location.href = '/tickets/create';\n  };\n\n  const handleTicketSubmit = async (ticketData: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'>, navigate: (path: string) => void) => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      navigate('/tickets');\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n\n  const handleTicketStatusChange = async (ticketId: string, newStatus: TicketStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n\n  const handleUpdateTicket = async (ticketId: string, updatedData: Partial<Ticket>) => {\n    try {\n      if ('status' in updatedData) {\n        // Use status-specific endpoint for status updates\n        await updateTicketStatus(ticketId, updatedData.status as TicketStatus);\n      } else {\n        // Use general update endpoint for other updates\n        await updateTicket(ticketId, updatedData);\n      }\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket:', error);\n      alert('Failed to update ticket. Please try again.');\n    }\n  };\n\n  // Add debug function to directly fetch and display the raw API response\n  const debugApiCall = async () => {\n    try {\n      setDebugInfo({\n        visible: true,\n        data: { status: 'loading', message: 'Fetching data from API...' }\n      });\n      \n      // Call the raw tickets endpoint\n      const rawResponse = await getAllTicketsRaw();\n      \n      console.log('DEBUG: Raw API response:', rawResponse);\n      \n      // Show detailed debug info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'success',\n          timestamp: new Date().toISOString(),\n          endpoint: '/tickets',\n          response: rawResponse,\n          auth: {\n            tokenExists: !!localStorage.getItem('token'),\n            tokenLength: localStorage.getItem('token')?.length || 0,\n            userInfo: currentUser ? {\n              id: currentUser._id,\n              role: currentUser.role,\n              email: currentUser.email\n            } : 'No user data'\n          }\n        }\n      });\n    } catch (error: any) {\n      console.error('Debug API call failed:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          timestamp: new Date().toISOString(),\n          message: error?.message || 'Unknown error',\n          details: error?.response?.data || {},\n          stack: error?.stack || ''\n        }\n      });\n    }\n  };\n\n  // Improved test ticket creation with detailed responses\n  const createTestTicket = async () => {\n    if (!currentUser) return;\n    \n    try {\n      console.log('Creating test ticket...');\n      setDebugInfo({\n        visible: true,\n        data: { status: 'loading', message: 'Creating test ticket...' }\n      });\n      \n      const testTicketData: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'> = {\n        _id: '', // This will be generated by the server\n        title: 'Test Ticket ' + new Date().toISOString(),\n        description: 'This is a test ticket created for debugging.',\n        requesterId: currentUser._id,\n        department: currentUser.department,\n        chemicalConfig: {\n          machineId: 'TEST-MACHINE',\n          machineName: 'Test Machine',\n          chemicalType: 'Test Chemical',\n          concentration: 1.0,\n          temperature: 25.0,\n          flowRate: 1.0\n        },\n        requestDate: new Date().toISOString()\n      };\n      \n      const response = await createTicket(testTicketData);\n      console.log('Test ticket created successfully:', response);\n      \n      // Show success info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'success',\n          message: 'Test ticket created successfully',\n          ticketData: response,\n          timestamp: new Date().toISOString()\n        }\n      });\n      \n      // Fetch tickets again\n      fetchTickets();\n    } catch (error: any) {\n      console.error('Error creating test ticket:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          message: `Error creating test ticket: ${error?.message || 'Unknown error'}`,\n          details: error?.response?.data || {},\n          timestamp: new Date().toISOString()\n        }\n      });\n      alert(`Error creating test ticket: ${error?.message || 'Unknown error'}`);\n    }\n  };\n\n  // Function to close debug panel\n  const closeDebugPanel = () => {\n    setDebugInfo({ ...debugInfo, visible: false });\n  };\n\n  // Add a quiet server status check function (no UI feedback)\n  const checkServerStatusQuietly = async () => {\n    try {\n      console.log('Checking server status quietly...');\n      const connectionInfo = await checkApiConnection();\n      \n      if (connectionInfo.overallStatus === 'server_unreachable') {\n        setServerStatus('offline');\n      } else if (connectionInfo.overallStatus === 'auth_issue') {\n        setServerStatus('auth_issue');\n      } else {\n        setServerStatus('online');\n      }\n      \n      console.log('Server status:', serverStatus);\n    } catch (error) {\n      console.error('Error checking server status:', error);\n      setServerStatus('offline');\n    }\n  };\n\n  // Update the server connection check to also update status\n  const checkServerConnection = async () => {\n    try {\n      setDebugInfo({\n        visible: true,\n        data: { status: 'loading', message: 'Checking API server connection...' }\n      });\n      \n      const connectionInfo = await checkApiConnection();\n      \n      console.log('Server connection check:', connectionInfo);\n      \n      // Update server status\n      if (connectionInfo.overallStatus === 'server_unreachable') {\n        setServerStatus('offline');\n      } else if (connectionInfo.overallStatus === 'auth_issue') {\n        setServerStatus('auth_issue');\n      } else {\n        setServerStatus('online');\n      }\n      \n      // Show detailed connection info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'connection_check',\n          timestamp: new Date().toISOString(),\n          title: 'API Server Connection Status',\n          connection: connectionInfo,\n          recommendations: getConnectionRecommendations(connectionInfo)\n        }\n      });\n    } catch (error: any) {\n      console.error('Connection check failed:', error);\n      setServerStatus('offline');\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          timestamp: new Date().toISOString(),\n          message: 'Connection check failed',\n          error: error?.message || 'Unknown error',\n          stack: error?.stack || ''\n        }\n      });\n    }\n  };\n  \n  // Helper function to generate recommendations based on connection check results\n  const getConnectionRecommendations = (connectionInfo: any): string[] => {\n    const recommendations: string[] = [];\n    \n    if (connectionInfo.overallStatus === 'server_unreachable') {\n      recommendations.push('The backend server is not reachable. Check if the server is running on the correct port.');\n      recommendations.push('Verify that the API_BASE_URL is correct (currently: ' + connectionInfo.apiBaseUrl + ')');\n      recommendations.push('Check for network connectivity issues or firewall restrictions.');\n      recommendations.push('Make sure the server is running on port 5001 (or update API_BASE_URL if different).');\n    } else if (connectionInfo.overallStatus === 'auth_issue') {\n      recommendations.push('The server is reachable, but authentication is failing.');\n      recommendations.push('Your auth token may be invalid or expired. Try logging out and back in.');\n      recommendations.push('Check if your user account has the proper permissions on the server.');\n    } else if (connectionInfo.summary?.successfulChecks === 0) {\n      recommendations.push('All connectivity checks failed. This could indicate a CORS issue.');\n      recommendations.push('Check browser console for CORS-related errors.');\n      recommendations.push('Verify that the backend server has the correct CORS headers configured.');\n    }\n    \n    return recommendations;\n  };\n\n  // Show instructions to start the server\n  const showServerInstructions = () => {\n    setShowStartServerInstructions(true);\n  };\n\n  // Hide server instructions\n  const hideServerInstructions = () => {\n    setShowStartServerInstructions(false);\n  };\n\n  if (!isAuthenticated || !currentUser) {\n    return <Login onLoginSuccess={handleLoginSuccess} />;\n  }\n\n  // If authenticated but no tickets, add a debug button\n  if (tickets.length === 0) {\n    console.log('No tickets found. Adding debug UI...');\n  }\n\n  return (\n    <BrowserRouter>\n      {/* Server Status Indicator */}\n      <div \n        style={{\n          position: 'fixed',\n          top: '10px',\n          right: '10px',\n          zIndex: 1001,\n          display: 'flex',\n          alignItems: 'center',\n          backgroundColor: \n            serverStatus === 'online' ? 'rgba(40, 167, 69, 0.8)' : \n            serverStatus === 'offline' ? 'rgba(220, 53, 69, 0.8)' : \n            serverStatus === 'auth_issue' ? 'rgba(255, 193, 7, 0.8)' : \n            'rgba(108, 117, 125, 0.8)',\n          color: 'white',\n          padding: '5px 10px',\n          borderRadius: '4px',\n          fontSize: '12px',\n          cursor: 'pointer',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n        }}\n        onClick={checkServerConnection}\n        title=\"Click to check server connection\"\n      >\n        <div \n          style={{\n            width: '10px',\n            height: '10px',\n            borderRadius: '50%',\n            backgroundColor: \n              serverStatus === 'online' ? '#28a745' : \n              serverStatus === 'offline' ? '#dc3545' : \n              serverStatus === 'auth_issue' ? '#ffc107' : \n              '#6c757d',\n            marginRight: '8px',\n            boxShadow: '0 0 5px rgba(255,255,255,0.5)'\n          }}\n        ></div>\n        Backend Server: {\n          serverStatus === 'online' ? 'Online' : \n          serverStatus === 'offline' ? 'Offline' : \n          serverStatus === 'auth_issue' ? 'Auth Issue' : \n          'Unknown'\n        }\n      </div>\n\n      {/* Start Server Instructions Modal */}\n      {showStartServerInstructions && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.7)',\n          zIndex: 9999,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n          <div style={{\n            backgroundColor: '#fff',\n            borderRadius: '8px',\n            padding: '20px',\n            maxWidth: '600px',\n            boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n            color: '#333'\n          }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '15px' }}>\n              <h2 style={{ margin: 0, color: '#333' }}>Start Backend Server</h2>\n              <button \n                onClick={hideServerInstructions}\n                style={{\n                  background: 'none',\n                  border: 'none',\n                  fontSize: '20px',\n                  cursor: 'pointer'\n                }}\n              >\n                ✕\n              </button>\n            </div>\n            \n            <p>Follow these steps to start the backend server:</p>\n            \n            <div style={{ \n              backgroundColor: '#f5f5f5', \n              padding: '15px', \n              borderRadius: '4px',\n              fontFamily: 'monospace',\n              marginBottom: '20px'\n            }}>\n              <p style={{ fontWeight: 'bold', marginBottom: '10px' }}>1. Open a terminal and navigate to your project folder:</p>\n              <div style={{ \n                backgroundColor: '#333', \n                color: '#fff', \n                padding: '10px',\n                borderRadius: '4px',\n                marginBottom: '15px'\n              }}>\n                cd /Users/a667227/Desktop/Work/ticket-management\n              </div>\n              \n              <p style={{ fontWeight: 'bold', marginBottom: '10px' }}>2. Navigate to the backend directory:</p>\n              <div style={{ \n                backgroundColor: '#333', \n                color: '#fff', \n                padding: '10px',\n                borderRadius: '4px',\n                marginBottom: '15px'\n              }}>\n                cd backend\n              </div>\n              \n              <p style={{ fontWeight: 'bold', marginBottom: '10px' }}>3. Install dependencies (if needed):</p>\n              <div style={{ \n                backgroundColor: '#333', \n                color: '#fff', \n                padding: '10px',\n                borderRadius: '4px',\n                marginBottom: '15px'\n              }}>\n                npm install\n              </div>\n              \n              <p style={{ fontWeight: 'bold', marginBottom: '10px' }}>4. Start the server:</p>\n              <div style={{ \n                backgroundColor: '#333', \n                color: '#fff', \n                padding: '10px',\n                borderRadius: '4px'\n              }}>\n                npm run dev\n                <br />\n                <span style={{ color: '#999' }}>// or: npm start</span>\n              </div>\n            </div>\n            \n            <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n              <button \n                onClick={hideServerInstructions}\n                style={{\n                  backgroundColor: '#6c757d',\n                  color: 'white',\n                  border: 'none',\n                  padding: '8px 16px',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  marginRight: '10px'\n                }}\n              >\n                Close\n              </button>\n              <button \n                onClick={() => {\n                  hideServerInstructions();\n                  checkServerConnection();\n                }}\n                style={{\n                  backgroundColor: '#28a745',\n                  color: 'white',\n                  border: 'none',\n                  padding: '8px 16px',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >\n                Check Connection Again\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Debug panel */}\n      {debugInfo.visible && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.8)',\n          zIndex: 9999,\n          overflow: 'auto',\n          padding: '20px',\n          color: '#fff',\n          fontFamily: 'monospace'\n        }}>\n          <div style={{ \n            backgroundColor: '#1e1e1e', \n            padding: '20px', \n            borderRadius: '8px',\n            maxWidth: '1200px',\n            margin: '0 auto',\n            boxShadow: '0 0 20px rgba(0,0,0,0.5)'\n          }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n              <h2 style={{ color: '#61dafb', margin: 0 }}>\n                {debugInfo.data?.title || 'API Debug Information'}\n              </h2>\n              <button \n                onClick={closeDebugPanel}\n                style={{\n                  backgroundColor: '#e74c3c',\n                  color: 'white',\n                  border: 'none',\n                  padding: '5px 15px',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >\n                Close\n              </button>\n            </div>\n            \n            {/* Add recommendations section for connection check */}\n            {debugInfo.data?.status === 'connection_check' && debugInfo.data.recommendations && debugInfo.data.recommendations.length > 0 && (\n              <div style={{\n                backgroundColor: '#2d2d2d',\n                padding: '15px',\n                borderRadius: '4px',\n                marginBottom: '15px',\n                border: '1px solid #ffc107'\n              }}>\n                <h3 style={{ color: '#ffc107', marginTop: 0 }}>Recommendations</h3>\n                <ul style={{ color: '#fff', paddingLeft: '20px' }}>\n                  {debugInfo.data.recommendations.map((rec: string, index: number) => (\n                    <li key={index} style={{ marginBottom: '8px' }}>{rec}</li>\n                  ))}\n                </ul>\n                {debugInfo.data.connection?.overallStatus === 'server_unreachable' && (\n                  <div style={{ marginTop: '15px', padding: '10px', backgroundColor: '#463022', borderRadius: '4px' }}>\n                    <p><strong>Steps to start the server:</strong></p>\n                    <ol style={{ paddingLeft: '20px' }}>\n                      <li>Open a terminal in your project root</li>\n                      <li>Navigate to the backend folder: <code>cd backend</code></li>\n                      <li>Install dependencies if needed: <code>npm install</code></li>\n                      <li>Start the server: <code>npm start</code> or <code>node server.js</code></li>\n                    </ol>\n                  </div>\n                )}\n              </div>\n            )}\n            \n            <div style={{ \n              backgroundColor: '#2d2d2d', \n              padding: '15px', \n              borderRadius: '4px',\n              overflowX: 'auto'\n            }}>\n              <pre style={{ \n                maxHeight: '80vh', \n                margin: 0, \n                color: debugInfo.data?.status === 'error' ? '#ff6b6b' : '#a3e635' \n              }}>\n                {JSON.stringify(debugInfo.data, null, 2)}\n              </pre>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Debug tools bar */}\n      <div style={{\n        padding: '10px',\n        backgroundColor: '#343a40',\n        color: 'white',\n        textAlign: 'center',\n        position: 'sticky',\n        top: 0,\n        zIndex: 1000,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '10px'\n      }}>\n        <button \n          onClick={checkServerConnection}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#dc3545',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px'\n          }}\n        >\n          Check Server Connection\n        </button>\n        {serverStatus === 'offline' && (\n          <button\n            onClick={showServerInstructions}\n            style={{\n              padding: '5px 10px',\n              backgroundColor: '#ffc107',\n              color: 'black',\n              border: 'none',\n              borderRadius: '4px'\n            }}\n          >\n            Start Backend Server\n          </button>\n        )}\n        <button \n          onClick={createTestTicket}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#28a745',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px'\n          }}\n        >\n          Create Test Ticket\n        </button>\n        <button\n          onClick={debugApiCall}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none', \n            borderRadius: '4px'\n          }}\n        >\n          Debug API Response\n        </button>\n        <button\n          onClick={() => fetchTickets()}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#6c757d',\n            color: 'white',\n            border: 'none', \n            borderRadius: '4px'\n          }}\n        >\n          Refresh Tickets\n        </button>\n      </div>\n\n      {/* Show server offline message instead of no tickets when appropriate */}\n      {serverStatus === 'offline' && (\n        <div style={{\n          padding: '15px',\n          backgroundColor: '#f8d7da', \n          color: '#721c24',\n          textAlign: 'center',\n          margin: '10px',\n          border: '1px solid #f5c6cb',\n          borderRadius: '4px'\n        }}>\n          <h3 style={{ margin: '0 0 10px 0' }}>Backend Server is Offline</h3>\n          <p>The application cannot retrieve tickets because the backend server is not running.</p>\n          <button\n            onClick={showServerInstructions}\n            style={{\n              backgroundColor: '#ffc107',\n              color: 'black',\n              border: 'none',\n              padding: '8px 16px',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              marginTop: '10px'\n            }}\n          >\n            Show Instructions to Start Server\n          </button>\n        </div>\n      )}\n\n      {/* \"No tickets\" warning when server is online but no tickets found */}\n      {tickets.length === 0 && serverStatus !== 'offline' && (\n        <div style={{\n          padding: '10px',\n          backgroundColor: '#f8f9fa',\n          color: '#6c757d',\n          textAlign: 'center',\n          margin: '10px',\n          border: '1px solid #dee2e6',\n          borderRadius: '4px'\n        }}>\n          <p>No tickets found. Use the debug tools above to investigate.</p>\n        </div>\n      )}\n\n      <Routes>\n        <Route \n          path=\"/\" \n          element={\n            <Layout \n              currentUser={currentUser}\n              onLogout={handleLogout}\n            />\n          }\n        >\n          <Route index element={\n            <RouteWrapper \n              component=\"home\"\n              tickets={tickets}\n              currentUser={currentUser}\n              onCreateRequest={handleCreateRequest}\n              onStatusChange={handleTicketStatusChange}\n            />\n          } />\n          <Route \n            path=\"tickets\"\n            element={\n              <MyTickets\n                tickets={tickets}\n                currentUser={currentUser}\n              />\n            }\n          />\n          <Route \n            path=\"tickets/create\" \n            element={\n              <RouteWrapper \n                component=\"create\"\n                currentUser={currentUser}\n                onCreateRequest={handleCreateRequest}\n                onSubmit={handleTicketSubmit}\n              />\n            } \n          />\n          <Route \n            path=\"/my-tickets\" \n            element={\n              <MyTickets \n                tickets={tickets} \n                currentUser={currentUser}\n              />\n            } \n          />\n          <Route \n            path=\"/tickets/:id\" \n            element={\n              <TicketDetail \n                tickets={tickets} \n                currentUser={currentUser} \n                onUpdate={handleUpdateTicket} \n              />\n            } \n          />\n          <Route \n            path=\"/admin/requests\" \n            element={\n              <ProtectedRoute currentUser={currentUser} requiredRole={['ADMIN', 'APPROVER']}>\n                <RequestManagement\n                  tickets={tickets}\n                  currentUser={currentUser}\n                  onUpdate={handleUpdateTicket}\n                />\n              </ProtectedRoute>\n            }\n          />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}