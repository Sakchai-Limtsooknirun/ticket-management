{"ast":null,"code":"var _jsxFileName = \"/Users/a667227/Desktop/Work/ticket-management/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout';\nimport RouteWrapper from './components/RouteWrapper';\nimport MyTickets from './components/tickets/MyTickets';\nimport Login from './components/Login';\nimport { createTicket, getTickets, updateTicketStatus, updateTicket, getAllTicketsRaw, checkApiConnection } from './services/api';\nimport TicketDetail from './components/tickets/TicketDetail';\nimport RequestManagement from './components/admin/RequestManagement';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  var _debugInfo$data, _debugInfo$data2, _debugInfo$data$conne, _debugInfo$data3;\n  const [tickets, setTickets] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [debugInfo, setDebugInfo] = useState({\n    visible: false,\n    data: null\n  });\n  const [serverStatus, setServerStatus] = useState('unknown');\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (token && savedUser) {\n      try {\n        const parsedUser = JSON.parse(savedUser);\n        console.log('Loaded user:', parsedUser); // Debug log\n        console.log('Token found:', token ? 'Yes (length: ' + token.length + ')' : 'No');\n        setIsAuthenticated(true);\n        setCurrentUser(parsedUser);\n        // Fetch tickets when authenticated\n        fetchTickets();\n        // Check server status quietly (no UI indicators)\n        checkServerStatusQuietly();\n      } catch (error) {\n        console.error('Error parsing saved user data:', error);\n        // Handle corrupted user data by clearing it\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n      }\n    } else {\n      console.log('No authentication found. Token:', !!token, 'User:', !!savedUser);\n    }\n  }, []);\n  const fetchTickets = async dateRange => {\n    try {\n      // Use a default date range if none provided (all time)\n      if (!dateRange) {\n        const end = new Date();\n        const start = new Date(2020, 0, 1); // Jan 1, 2020 instead of 365 days\n        dateRange = {\n          startDate: start,\n          endDate: end\n        };\n      }\n\n      // Ensure startDate and endDate are defined\n      const safeRange = {\n        startDate: dateRange.startDate || new Date(2020, 0, 1),\n        endDate: dateRange.endDate || new Date()\n      };\n      console.log('App fetching tickets with date range:', {\n        startDate: safeRange.startDate.toISOString(),\n        endDate: safeRange.endDate.toISOString()\n      });\n      const response = await getTickets(undefined, 1, 100, safeRange);\n\n      // Check if there was an error in the response\n      if (response.error) {\n        console.error('Error in ticket response:', response.error);\n        setDebugInfo({\n          visible: true,\n          data: {\n            status: 'error',\n            message: 'Error fetching tickets',\n            error: response.error,\n            timestamp: new Date().toISOString()\n          }\n        });\n        // Keep existing tickets instead of setting empty array\n        return;\n      }\n\n      // Handle response with tickets\n      if (response.tickets && Array.isArray(response.tickets)) {\n        const ticketsArray = response.tickets;\n        console.log(`App received ${ticketsArray.length} tickets`);\n\n        // Log first ticket data for debugging\n        if (ticketsArray.length > 0) {\n          console.log('First ticket sample:', {\n            id: ticketsArray[0]._id,\n            title: ticketsArray[0].title,\n            status: ticketsArray[0].status,\n            date: ticketsArray[0].requestDate\n          });\n        }\n        setTickets(ticketsArray);\n      } else {\n        console.warn('Unexpected ticket response format:', response);\n        setTickets([]);\n      }\n    } catch (error) {\n      console.error('Error fetching tickets:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          message: 'Exception fetching tickets',\n          error: (error === null || error === void 0 ? void 0 : error.message) || 'Unknown error',\n          timestamp: new Date().toISOString()\n        }\n      });\n\n      // If we get an authentication error, clear the token and redirect to login\n      if (error !== null && error !== void 0 && error.response && error.response.status === 401) {\n        console.error('Authentication error. Redirecting to login.');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n        setCurrentUser(null);\n      }\n    }\n  };\n  const handleLoginSuccess = (token, user) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setTickets([]);\n  };\n  const handleCreateRequest = () => {\n    // Use navigate directly in components that need it\n    window.location.href = '/tickets/create';\n  };\n  const handleTicketSubmit = async (ticketData, navigate) => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      navigate('/tickets');\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n  const handleTicketStatusChange = async (ticketId, newStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n  const handleUpdateTicket = async (ticketId, updatedData) => {\n    try {\n      if ('status' in updatedData) {\n        // Use status-specific endpoint for status updates\n        await updateTicketStatus(ticketId, updatedData.status);\n      } else {\n        // Use general update endpoint for other updates\n        await updateTicket(ticketId, updatedData);\n      }\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket:', error);\n      alert('Failed to update ticket. Please try again.');\n    }\n  };\n\n  // Add debug function to directly fetch and display the raw API response\n  const debugApiCall = async () => {\n    try {\n      var _localStorage$getItem;\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'loading',\n          message: 'Fetching data from API...'\n        }\n      });\n\n      // Call the raw tickets endpoint\n      const rawResponse = await getAllTicketsRaw();\n      console.log('DEBUG: Raw API response:', rawResponse);\n\n      // Show detailed debug info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'success',\n          timestamp: new Date().toISOString(),\n          endpoint: '/tickets',\n          response: rawResponse,\n          auth: {\n            tokenExists: !!localStorage.getItem('token'),\n            tokenLength: ((_localStorage$getItem = localStorage.getItem('token')) === null || _localStorage$getItem === void 0 ? void 0 : _localStorage$getItem.length) || 0,\n            userInfo: currentUser ? {\n              id: currentUser._id,\n              role: currentUser.role,\n              email: currentUser.email\n            } : 'No user data'\n          }\n        }\n      });\n    } catch (error) {\n      var _error$response;\n      console.error('Debug API call failed:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          timestamp: new Date().toISOString(),\n          message: (error === null || error === void 0 ? void 0 : error.message) || 'Unknown error',\n          details: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {},\n          stack: (error === null || error === void 0 ? void 0 : error.stack) || ''\n        }\n      });\n    }\n  };\n\n  // Improved test ticket creation with detailed responses\n  const createTestTicket = async () => {\n    if (!currentUser) return;\n    try {\n      console.log('Creating test ticket...');\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'loading',\n          message: 'Creating test ticket...'\n        }\n      });\n      const testTicketData = {\n        _id: '',\n        // This will be generated by the server\n        title: 'Test Ticket ' + new Date().toISOString(),\n        description: 'This is a test ticket created for debugging.',\n        requesterId: currentUser._id,\n        department: currentUser.department,\n        chemicalConfig: {\n          machineId: 'TEST-MACHINE',\n          machineName: 'Test Machine',\n          chemicalType: 'Test Chemical',\n          concentration: 1.0,\n          temperature: 25.0,\n          flowRate: 1.0\n        },\n        requestDate: new Date().toISOString()\n      };\n      const response = await createTicket(testTicketData);\n      console.log('Test ticket created successfully:', response);\n\n      // Show success info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'success',\n          message: 'Test ticket created successfully',\n          ticketData: response,\n          timestamp: new Date().toISOString()\n        }\n      });\n\n      // Fetch tickets again\n      fetchTickets();\n    } catch (error) {\n      var _error$response2;\n      console.error('Error creating test ticket:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          message: `Error creating test ticket: ${(error === null || error === void 0 ? void 0 : error.message) || 'Unknown error'}`,\n          details: (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {},\n          timestamp: new Date().toISOString()\n        }\n      });\n      alert(`Error creating test ticket: ${(error === null || error === void 0 ? void 0 : error.message) || 'Unknown error'}`);\n    }\n  };\n\n  // Function to close debug panel\n  const closeDebugPanel = () => {\n    setDebugInfo({\n      ...debugInfo,\n      visible: false\n    });\n  };\n\n  // Add a quiet server status check function (no UI feedback)\n  const checkServerStatusQuietly = async () => {\n    try {\n      console.log('Checking server status quietly...');\n      const connectionInfo = await checkApiConnection();\n      if (connectionInfo.overallStatus === 'server_unreachable') {\n        setServerStatus('offline');\n      } else if (connectionInfo.overallStatus === 'auth_issue') {\n        setServerStatus('auth_issue');\n      } else {\n        setServerStatus('online');\n      }\n      console.log('Server status:', serverStatus);\n    } catch (error) {\n      console.error('Error checking server status:', error);\n      setServerStatus('offline');\n    }\n  };\n\n  // Update the server connection check to also update status\n  const checkServerConnection = async () => {\n    try {\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'loading',\n          message: 'Checking API server connection...'\n        }\n      });\n      const connectionInfo = await checkApiConnection();\n      console.log('Server connection check:', connectionInfo);\n\n      // Update server status\n      if (connectionInfo.overallStatus === 'server_unreachable') {\n        setServerStatus('offline');\n      } else if (connectionInfo.overallStatus === 'auth_issue') {\n        setServerStatus('auth_issue');\n      } else {\n        setServerStatus('online');\n      }\n\n      // Show detailed connection info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'connection_check',\n          timestamp: new Date().toISOString(),\n          title: 'API Server Connection Status',\n          connection: connectionInfo,\n          recommendations: getConnectionRecommendations(connectionInfo)\n        }\n      });\n    } catch (error) {\n      console.error('Connection check failed:', error);\n      setServerStatus('offline');\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          timestamp: new Date().toISOString(),\n          message: 'Connection check failed',\n          error: (error === null || error === void 0 ? void 0 : error.message) || 'Unknown error',\n          stack: (error === null || error === void 0 ? void 0 : error.stack) || ''\n        }\n      });\n    }\n  };\n\n  // Helper function to generate recommendations based on connection check results\n  const getConnectionRecommendations = connectionInfo => {\n    var _connectionInfo$summa;\n    const recommendations = [];\n    if (connectionInfo.overallStatus === 'server_unreachable') {\n      recommendations.push('The backend server is not reachable. Check if the server is running on the correct port.');\n      recommendations.push('Verify that the API_BASE_URL is correct (currently: ' + connectionInfo.apiBaseUrl + ')');\n      recommendations.push('Check for network connectivity issues or firewall restrictions.');\n      recommendations.push('Make sure the server is running on port 5001 (or update API_BASE_URL if different).');\n    } else if (connectionInfo.overallStatus === 'auth_issue') {\n      recommendations.push('The server is reachable, but authentication is failing.');\n      recommendations.push('Your auth token may be invalid or expired. Try logging out and back in.');\n      recommendations.push('Check if your user account has the proper permissions on the server.');\n    } else if (((_connectionInfo$summa = connectionInfo.summary) === null || _connectionInfo$summa === void 0 ? void 0 : _connectionInfo$summa.successfulChecks) === 0) {\n      recommendations.push('All connectivity checks failed. This could indicate a CORS issue.');\n      recommendations.push('Check browser console for CORS-related errors.');\n      recommendations.push('Verify that the backend server has the correct CORS headers configured.');\n    }\n    return recommendations;\n  };\n  if (!isAuthenticated || !currentUser) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated but no tickets, add a debug button\n  if (tickets.length === 0) {\n    console.log('No tickets found. Adding debug UI...');\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '10px',\n        right: '10px',\n        zIndex: 1001,\n        display: 'flex',\n        alignItems: 'center',\n        backgroundColor: serverStatus === 'online' ? 'rgba(40, 167, 69, 0.8)' : serverStatus === 'offline' ? 'rgba(220, 53, 69, 0.8)' : serverStatus === 'auth_issue' ? 'rgba(255, 193, 7, 0.8)' : 'rgba(108, 117, 125, 0.8)',\n        color: 'white',\n        padding: '5px 10px',\n        borderRadius: '4px',\n        fontSize: '12px',\n        cursor: 'pointer',\n        boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n      },\n      onClick: checkServerConnection,\n      title: \"Click to check server connection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '10px',\n          height: '10px',\n          borderRadius: '50%',\n          backgroundColor: serverStatus === 'online' ? '#28a745' : serverStatus === 'offline' ? '#dc3545' : serverStatus === 'auth_issue' ? '#ffc107' : '#6c757d',\n          marginRight: '8px',\n          boxShadow: '0 0 5px rgba(255,255,255,0.5)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), \"Backend Server: \", serverStatus === 'online' ? 'Online' : serverStatus === 'offline' ? 'Offline' : serverStatus === 'auth_issue' ? 'Auth Issue' : 'Unknown']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), debugInfo.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        zIndex: 9999,\n        overflow: 'auto',\n        padding: '20px',\n        color: '#fff',\n        fontFamily: 'monospace'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#1e1e1e',\n          padding: '20px',\n          borderRadius: '8px',\n          maxWidth: '1200px',\n          margin: '0 auto',\n          boxShadow: '0 0 20px rgba(0,0,0,0.5)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: '#61dafb',\n              margin: 0\n            },\n            children: ((_debugInfo$data = debugInfo.data) === null || _debugInfo$data === void 0 ? void 0 : _debugInfo$data.title) || 'API Debug Information'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDebugPanel,\n            style: {\n              backgroundColor: '#e74c3c',\n              color: 'white',\n              border: 'none',\n              padding: '5px 15px',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this), ((_debugInfo$data2 = debugInfo.data) === null || _debugInfo$data2 === void 0 ? void 0 : _debugInfo$data2.status) === 'connection_check' && debugInfo.data.recommendations && debugInfo.data.recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#2d2d2d',\n            padding: '15px',\n            borderRadius: '4px',\n            marginBottom: '15px',\n            border: '1px solid #ffc107'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: '#ffc107',\n              marginTop: 0\n            },\n            children: \"Recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              color: '#fff',\n              paddingLeft: '20px'\n            },\n            children: debugInfo.data.recommendations.map((rec, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginBottom: '8px'\n              },\n              children: rec\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 17\n          }, this), ((_debugInfo$data$conne = debugInfo.data.connection) === null || _debugInfo$data$conne === void 0 ? void 0 : _debugInfo$data$conne.overallStatus) === 'server_unreachable' && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '15px',\n              padding: '10px',\n              backgroundColor: '#463022',\n              borderRadius: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Steps to start the server:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              style: {\n                paddingLeft: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Open a terminal in your project root\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 521,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Navigate to the backend folder: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"cd backend\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Install dependencies if needed: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"npm install\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Start the server: \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"npm start\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 45\n                }, this), \" or \", /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: \"node server.js\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#2d2d2d',\n            padding: '15px',\n            borderRadius: '4px',\n            overflowX: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              maxHeight: '80vh',\n              margin: 0,\n              color: ((_debugInfo$data3 = debugInfo.data) === null || _debugInfo$data3 === void 0 ? void 0 : _debugInfo$data3.status) === 'error' ? '#ff6b6b' : '#a3e635'\n            },\n            children: JSON.stringify(debugInfo.data, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px',\n        backgroundColor: '#343a40',\n        color: 'white',\n        textAlign: 'center',\n        position: 'sticky',\n        top: 0,\n        zIndex: 1000,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkServerConnection,\n        style: {\n          padding: '5px 10px',\n          backgroundColor: '#dc3545',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px'\n        },\n        children: \"Check Server Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createTestTicket,\n        style: {\n          padding: '5px 10px',\n          backgroundColor: '#28a745',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px'\n        },\n        children: \"Create Test Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: debugApiCall,\n        style: {\n          padding: '5px 10px',\n          backgroundColor: '#007bff',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px'\n        },\n        children: \"Debug API Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchTickets(),\n        style: {\n          padding: '5px 10px',\n          backgroundColor: '#6c757d',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px'\n        },\n        children: \"Refresh Tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 7\n    }, this), tickets.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px',\n        backgroundColor: '#f8d7da',\n        color: '#721c24',\n        textAlign: 'center',\n        margin: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tickets found. Use the debug tools above to investigate.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          currentUser: currentUser,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(RouteWrapper, {\n            component: \"home\",\n            tickets: tickets,\n            currentUser: currentUser,\n            onCreateRequest: handleCreateRequest,\n            onStatusChange: handleTicketStatusChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"tickets\",\n          element: /*#__PURE__*/_jsxDEV(MyTickets, {\n            tickets: tickets,\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"tickets/create\",\n          element: /*#__PURE__*/_jsxDEV(RouteWrapper, {\n            component: \"create\",\n            currentUser: currentUser,\n            onCreateRequest: handleCreateRequest,\n            onSubmit: handleTicketSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/my-tickets\",\n          element: /*#__PURE__*/_jsxDEV(MyTickets, {\n            tickets: tickets,\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tickets/:id\",\n          element: /*#__PURE__*/_jsxDEV(TicketDetail, {\n            tickets: tickets,\n            currentUser: currentUser,\n            onUpdate: handleUpdateTicket\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/requests\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            currentUser: currentUser,\n            requiredRole: ['ADMIN', 'APPROVER'],\n            children: /*#__PURE__*/_jsxDEV(RequestManagement, {\n              tickets: tickets,\n              currentUser: currentUser,\n              onUpdate: handleUpdateTicket\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Q/FjjVRTlqkZtmmpUC9xJWhW4KM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Routes","Route","Navigate","Layout","RouteWrapper","MyTickets","Login","createTicket","getTickets","updateTicketStatus","updateTicket","getAllTicketsRaw","checkApiConnection","TicketDetail","RequestManagement","ProtectedRoute","jsxDEV","_jsxDEV","App","_s","_debugInfo$data","_debugInfo$data2","_debugInfo$data$conne","_debugInfo$data3","tickets","setTickets","isAuthenticated","setIsAuthenticated","currentUser","setCurrentUser","debugInfo","setDebugInfo","visible","data","serverStatus","setServerStatus","token","localStorage","getItem","savedUser","parsedUser","JSON","parse","console","log","length","fetchTickets","checkServerStatusQuietly","error","removeItem","dateRange","end","Date","start","startDate","endDate","safeRange","toISOString","response","undefined","status","message","timestamp","Array","isArray","ticketsArray","id","_id","title","date","requestDate","warn","handleLoginSuccess","user","handleLogout","handleCreateRequest","window","location","href","handleTicketSubmit","ticketData","navigate","alert","handleTicketStatusChange","ticketId","newStatus","handleUpdateTicket","updatedData","debugApiCall","_localStorage$getItem","rawResponse","endpoint","auth","tokenExists","tokenLength","userInfo","role","email","_error$response","details","stack","createTestTicket","testTicketData","description","requesterId","department","chemicalConfig","machineId","machineName","chemicalType","concentration","temperature","flowRate","_error$response2","closeDebugPanel","connectionInfo","overallStatus","checkServerConnection","connection","recommendations","getConnectionRecommendations","_connectionInfo$summa","push","apiBaseUrl","summary","successfulChecks","onLoginSuccess","fileName","_jsxFileName","lineNumber","columnNumber","children","style","position","top","right","zIndex","display","alignItems","backgroundColor","color","padding","borderRadius","fontSize","cursor","boxShadow","onClick","width","height","marginRight","left","bottom","overflow","fontFamily","maxWidth","margin","justifyContent","marginBottom","border","marginTop","paddingLeft","map","rec","index","overflowX","maxHeight","stringify","textAlign","gap","path","element","onLogout","component","onCreateRequest","onStatusChange","onSubmit","onUpdate","requiredRole","to","replace","_c","$RefreshReg$"],"sources":["/Users/a667227/Desktop/Work/ticket-management/src/App.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout';\nimport RouteWrapper from './components/RouteWrapper';\nimport MyTickets from './components/tickets/MyTickets';\nimport Login from './components/Login';\nimport { User, Ticket, TicketStatus } from './types/system';\nimport { \n  createTicket, \n  getTickets, \n  updateTicketStatus, \n  updateTicket, \n  getAllTicketsRaw,\n  checkApiConnection \n} from './services/api';\nimport TicketDetail from './components/tickets/TicketDetail';\nimport RequestManagement from './components/admin/RequestManagement';\nimport ProtectedRoute from './components/ProtectedRoute';\n\nconst App: FC = () => {\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [debugInfo, setDebugInfo] = useState<{ visible: boolean; data: any }>({\n    visible: false,\n    data: null\n  });\n  const [serverStatus, setServerStatus] = useState<'unknown' | 'online' | 'offline' | 'auth_issue'>('unknown');\n\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (token && savedUser) {\n      try {\n        const parsedUser = JSON.parse(savedUser);\n        console.log('Loaded user:', parsedUser); // Debug log\n        console.log('Token found:', token ? 'Yes (length: ' + token.length + ')' : 'No');\n        setIsAuthenticated(true);\n        setCurrentUser(parsedUser);\n        // Fetch tickets when authenticated\n        fetchTickets();\n        // Check server status quietly (no UI indicators)\n        checkServerStatusQuietly();\n      } catch (error: any) {\n        console.error('Error parsing saved user data:', error);\n        // Handle corrupted user data by clearing it\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n      }\n    } else {\n      console.log('No authentication found. Token:', !!token, 'User:', !!savedUser);\n    }\n  }, []);\n\n  const fetchTickets = async (dateRange?: { startDate?: Date, endDate?: Date }) => {\n    try {\n      // Use a default date range if none provided (all time)\n      if (!dateRange) {\n        const end = new Date();\n        const start = new Date(2020, 0, 1); // Jan 1, 2020 instead of 365 days\n        dateRange = { startDate: start, endDate: end };\n      }\n      \n      // Ensure startDate and endDate are defined\n      const safeRange = {\n        startDate: dateRange.startDate || new Date(2020, 0, 1),\n        endDate: dateRange.endDate || new Date()\n      };\n      \n      console.log('App fetching tickets with date range:', {\n        startDate: safeRange.startDate.toISOString(),\n        endDate: safeRange.endDate.toISOString()\n      });\n      \n      const response = await getTickets(undefined, 1, 100, safeRange);\n      \n      // Check if there was an error in the response\n      if (response.error) {\n        console.error('Error in ticket response:', response.error);\n        setDebugInfo({\n          visible: true,\n          data: {\n            status: 'error',\n            message: 'Error fetching tickets',\n            error: response.error,\n            timestamp: new Date().toISOString()\n          }\n        });\n        // Keep existing tickets instead of setting empty array\n        return;\n      }\n      \n      // Handle response with tickets\n      if (response.tickets && Array.isArray(response.tickets)) {\n        const ticketsArray = response.tickets;\n        console.log(`App received ${ticketsArray.length} tickets`);\n        \n        // Log first ticket data for debugging\n        if (ticketsArray.length > 0) {\n          console.log('First ticket sample:', {\n            id: ticketsArray[0]._id,\n            title: ticketsArray[0].title,\n            status: ticketsArray[0].status,\n            date: ticketsArray[0].requestDate\n          });\n        }\n        \n        setTickets(ticketsArray);\n      } else {\n        console.warn('Unexpected ticket response format:', response);\n        setTickets([]);\n      }\n    } catch (error: any) {\n      console.error('Error fetching tickets:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          message: 'Exception fetching tickets',\n          error: error?.message || 'Unknown error',\n          timestamp: new Date().toISOString()\n        }\n      });\n      \n      // If we get an authentication error, clear the token and redirect to login\n      if (error?.response && error.response.status === 401) {\n        console.error('Authentication error. Redirecting to login.');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n        setCurrentUser(null);\n      }\n    }\n  };\n\n  const handleLoginSuccess = (token: string, user: User) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setTickets([]);\n  };\n\n  const handleCreateRequest = () => {\n    // Use navigate directly in components that need it\n    window.location.href = '/tickets/create';\n  };\n\n  const handleTicketSubmit = async (ticketData: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'>, navigate: (path: string) => void) => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      navigate('/tickets');\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n\n  const handleTicketStatusChange = async (ticketId: string, newStatus: TicketStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n\n  const handleUpdateTicket = async (ticketId: string, updatedData: Partial<Ticket>) => {\n    try {\n      if ('status' in updatedData) {\n        // Use status-specific endpoint for status updates\n        await updateTicketStatus(ticketId, updatedData.status as TicketStatus);\n      } else {\n        // Use general update endpoint for other updates\n        await updateTicket(ticketId, updatedData);\n      }\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket:', error);\n      alert('Failed to update ticket. Please try again.');\n    }\n  };\n\n  // Add debug function to directly fetch and display the raw API response\n  const debugApiCall = async () => {\n    try {\n      setDebugInfo({\n        visible: true,\n        data: { status: 'loading', message: 'Fetching data from API...' }\n      });\n      \n      // Call the raw tickets endpoint\n      const rawResponse = await getAllTicketsRaw();\n      \n      console.log('DEBUG: Raw API response:', rawResponse);\n      \n      // Show detailed debug info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'success',\n          timestamp: new Date().toISOString(),\n          endpoint: '/tickets',\n          response: rawResponse,\n          auth: {\n            tokenExists: !!localStorage.getItem('token'),\n            tokenLength: localStorage.getItem('token')?.length || 0,\n            userInfo: currentUser ? {\n              id: currentUser._id,\n              role: currentUser.role,\n              email: currentUser.email\n            } : 'No user data'\n          }\n        }\n      });\n    } catch (error: any) {\n      console.error('Debug API call failed:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          timestamp: new Date().toISOString(),\n          message: error?.message || 'Unknown error',\n          details: error?.response?.data || {},\n          stack: error?.stack || ''\n        }\n      });\n    }\n  };\n\n  // Improved test ticket creation with detailed responses\n  const createTestTicket = async () => {\n    if (!currentUser) return;\n    \n    try {\n      console.log('Creating test ticket...');\n      setDebugInfo({\n        visible: true,\n        data: { status: 'loading', message: 'Creating test ticket...' }\n      });\n      \n      const testTicketData: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'> = {\n        _id: '', // This will be generated by the server\n        title: 'Test Ticket ' + new Date().toISOString(),\n        description: 'This is a test ticket created for debugging.',\n        requesterId: currentUser._id,\n        department: currentUser.department,\n        chemicalConfig: {\n          machineId: 'TEST-MACHINE',\n          machineName: 'Test Machine',\n          chemicalType: 'Test Chemical',\n          concentration: 1.0,\n          temperature: 25.0,\n          flowRate: 1.0\n        },\n        requestDate: new Date().toISOString()\n      };\n      \n      const response = await createTicket(testTicketData);\n      console.log('Test ticket created successfully:', response);\n      \n      // Show success info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'success',\n          message: 'Test ticket created successfully',\n          ticketData: response,\n          timestamp: new Date().toISOString()\n        }\n      });\n      \n      // Fetch tickets again\n      fetchTickets();\n    } catch (error: any) {\n      console.error('Error creating test ticket:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          message: `Error creating test ticket: ${error?.message || 'Unknown error'}`,\n          details: error?.response?.data || {},\n          timestamp: new Date().toISOString()\n        }\n      });\n      alert(`Error creating test ticket: ${error?.message || 'Unknown error'}`);\n    }\n  };\n\n  // Function to close debug panel\n  const closeDebugPanel = () => {\n    setDebugInfo({ ...debugInfo, visible: false });\n  };\n\n  // Add a quiet server status check function (no UI feedback)\n  const checkServerStatusQuietly = async () => {\n    try {\n      console.log('Checking server status quietly...');\n      const connectionInfo = await checkApiConnection();\n      \n      if (connectionInfo.overallStatus === 'server_unreachable') {\n        setServerStatus('offline');\n      } else if (connectionInfo.overallStatus === 'auth_issue') {\n        setServerStatus('auth_issue');\n      } else {\n        setServerStatus('online');\n      }\n      \n      console.log('Server status:', serverStatus);\n    } catch (error) {\n      console.error('Error checking server status:', error);\n      setServerStatus('offline');\n    }\n  };\n\n  // Update the server connection check to also update status\n  const checkServerConnection = async () => {\n    try {\n      setDebugInfo({\n        visible: true,\n        data: { status: 'loading', message: 'Checking API server connection...' }\n      });\n      \n      const connectionInfo = await checkApiConnection();\n      \n      console.log('Server connection check:', connectionInfo);\n      \n      // Update server status\n      if (connectionInfo.overallStatus === 'server_unreachable') {\n        setServerStatus('offline');\n      } else if (connectionInfo.overallStatus === 'auth_issue') {\n        setServerStatus('auth_issue');\n      } else {\n        setServerStatus('online');\n      }\n      \n      // Show detailed connection info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'connection_check',\n          timestamp: new Date().toISOString(),\n          title: 'API Server Connection Status',\n          connection: connectionInfo,\n          recommendations: getConnectionRecommendations(connectionInfo)\n        }\n      });\n    } catch (error: any) {\n      console.error('Connection check failed:', error);\n      setServerStatus('offline');\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          timestamp: new Date().toISOString(),\n          message: 'Connection check failed',\n          error: error?.message || 'Unknown error',\n          stack: error?.stack || ''\n        }\n      });\n    }\n  };\n  \n  // Helper function to generate recommendations based on connection check results\n  const getConnectionRecommendations = (connectionInfo: any): string[] => {\n    const recommendations: string[] = [];\n    \n    if (connectionInfo.overallStatus === 'server_unreachable') {\n      recommendations.push('The backend server is not reachable. Check if the server is running on the correct port.');\n      recommendations.push('Verify that the API_BASE_URL is correct (currently: ' + connectionInfo.apiBaseUrl + ')');\n      recommendations.push('Check for network connectivity issues or firewall restrictions.');\n      recommendations.push('Make sure the server is running on port 5001 (or update API_BASE_URL if different).');\n    } else if (connectionInfo.overallStatus === 'auth_issue') {\n      recommendations.push('The server is reachable, but authentication is failing.');\n      recommendations.push('Your auth token may be invalid or expired. Try logging out and back in.');\n      recommendations.push('Check if your user account has the proper permissions on the server.');\n    } else if (connectionInfo.summary?.successfulChecks === 0) {\n      recommendations.push('All connectivity checks failed. This could indicate a CORS issue.');\n      recommendations.push('Check browser console for CORS-related errors.');\n      recommendations.push('Verify that the backend server has the correct CORS headers configured.');\n    }\n    \n    return recommendations;\n  };\n\n  if (!isAuthenticated || !currentUser) {\n    return <Login onLoginSuccess={handleLoginSuccess} />;\n  }\n\n  // If authenticated but no tickets, add a debug button\n  if (tickets.length === 0) {\n    console.log('No tickets found. Adding debug UI...');\n  }\n\n  return (\n    <BrowserRouter>\n      {/* Server Status Indicator */}\n      <div \n        style={{\n          position: 'fixed',\n          top: '10px',\n          right: '10px',\n          zIndex: 1001,\n          display: 'flex',\n          alignItems: 'center',\n          backgroundColor: \n            serverStatus === 'online' ? 'rgba(40, 167, 69, 0.8)' : \n            serverStatus === 'offline' ? 'rgba(220, 53, 69, 0.8)' : \n            serverStatus === 'auth_issue' ? 'rgba(255, 193, 7, 0.8)' : \n            'rgba(108, 117, 125, 0.8)',\n          color: 'white',\n          padding: '5px 10px',\n          borderRadius: '4px',\n          fontSize: '12px',\n          cursor: 'pointer',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.2)'\n        }}\n        onClick={checkServerConnection}\n        title=\"Click to check server connection\"\n      >\n        <div \n          style={{\n            width: '10px',\n            height: '10px',\n            borderRadius: '50%',\n            backgroundColor: \n              serverStatus === 'online' ? '#28a745' : \n              serverStatus === 'offline' ? '#dc3545' : \n              serverStatus === 'auth_issue' ? '#ffc107' : \n              '#6c757d',\n            marginRight: '8px',\n            boxShadow: '0 0 5px rgba(255,255,255,0.5)'\n          }}\n        ></div>\n        Backend Server: {\n          serverStatus === 'online' ? 'Online' : \n          serverStatus === 'offline' ? 'Offline' : \n          serverStatus === 'auth_issue' ? 'Auth Issue' : \n          'Unknown'\n        }\n      </div>\n\n      {/* Debug panel */}\n      {debugInfo.visible && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.8)',\n          zIndex: 9999,\n          overflow: 'auto',\n          padding: '20px',\n          color: '#fff',\n          fontFamily: 'monospace'\n        }}>\n          <div style={{ \n            backgroundColor: '#1e1e1e', \n            padding: '20px', \n            borderRadius: '8px',\n            maxWidth: '1200px',\n            margin: '0 auto',\n            boxShadow: '0 0 20px rgba(0,0,0,0.5)'\n          }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n              <h2 style={{ color: '#61dafb', margin: 0 }}>\n                {debugInfo.data?.title || 'API Debug Information'}\n              </h2>\n              <button \n                onClick={closeDebugPanel}\n                style={{\n                  backgroundColor: '#e74c3c',\n                  color: 'white',\n                  border: 'none',\n                  padding: '5px 15px',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >\n                Close\n              </button>\n            </div>\n            \n            {/* Add recommendations section for connection check */}\n            {debugInfo.data?.status === 'connection_check' && debugInfo.data.recommendations && debugInfo.data.recommendations.length > 0 && (\n              <div style={{\n                backgroundColor: '#2d2d2d',\n                padding: '15px',\n                borderRadius: '4px',\n                marginBottom: '15px',\n                border: '1px solid #ffc107'\n              }}>\n                <h3 style={{ color: '#ffc107', marginTop: 0 }}>Recommendations</h3>\n                <ul style={{ color: '#fff', paddingLeft: '20px' }}>\n                  {debugInfo.data.recommendations.map((rec: string, index: number) => (\n                    <li key={index} style={{ marginBottom: '8px' }}>{rec}</li>\n                  ))}\n                </ul>\n                {debugInfo.data.connection?.overallStatus === 'server_unreachable' && (\n                  <div style={{ marginTop: '15px', padding: '10px', backgroundColor: '#463022', borderRadius: '4px' }}>\n                    <p><strong>Steps to start the server:</strong></p>\n                    <ol style={{ paddingLeft: '20px' }}>\n                      <li>Open a terminal in your project root</li>\n                      <li>Navigate to the backend folder: <code>cd backend</code></li>\n                      <li>Install dependencies if needed: <code>npm install</code></li>\n                      <li>Start the server: <code>npm start</code> or <code>node server.js</code></li>\n                    </ol>\n                  </div>\n                )}\n              </div>\n            )}\n            \n            <div style={{ \n              backgroundColor: '#2d2d2d', \n              padding: '15px', \n              borderRadius: '4px',\n              overflowX: 'auto'\n            }}>\n              <pre style={{ \n                maxHeight: '80vh', \n                margin: 0, \n                color: debugInfo.data?.status === 'error' ? '#ff6b6b' : '#a3e635' \n              }}>\n                {JSON.stringify(debugInfo.data, null, 2)}\n              </pre>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Debug tools bar */}\n      <div style={{\n        padding: '10px',\n        backgroundColor: '#343a40',\n        color: 'white',\n        textAlign: 'center',\n        position: 'sticky',\n        top: 0,\n        zIndex: 1000,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '10px'\n      }}>\n        <button \n          onClick={checkServerConnection}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#dc3545',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px'\n          }}\n        >\n          Check Server Connection\n        </button>\n        <button \n          onClick={createTestTicket}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#28a745',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px'\n          }}\n        >\n          Create Test Ticket\n        </button>\n        <button\n          onClick={debugApiCall}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none', \n            borderRadius: '4px'\n          }}\n        >\n          Debug API Response\n        </button>\n        <button\n          onClick={() => fetchTickets()}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#6c757d',\n            color: 'white',\n            border: 'none', \n            borderRadius: '4px'\n          }}\n        >\n          Refresh Tickets\n        </button>\n      </div>\n\n      {/* Existing no tickets warning - we'll keep this but make it less prominent */}\n      {tickets.length === 0 && (\n        <div style={{\n          padding: '10px',\n          backgroundColor: '#f8d7da',\n          color: '#721c24',\n          textAlign: 'center',\n          margin: '10px'\n        }}>\n          <p>No tickets found. Use the debug tools above to investigate.</p>\n        </div>\n      )}\n\n      <Routes>\n        <Route \n          path=\"/\" \n          element={\n            <Layout \n              currentUser={currentUser}\n              onLogout={handleLogout}\n            />\n          }\n        >\n          <Route index element={\n            <RouteWrapper \n              component=\"home\"\n              tickets={tickets}\n              currentUser={currentUser}\n              onCreateRequest={handleCreateRequest}\n              onStatusChange={handleTicketStatusChange}\n            />\n          } />\n          <Route \n            path=\"tickets\"\n            element={\n              <MyTickets\n                tickets={tickets}\n                currentUser={currentUser}\n              />\n            }\n          />\n          <Route \n            path=\"tickets/create\" \n            element={\n              <RouteWrapper \n                component=\"create\"\n                currentUser={currentUser}\n                onCreateRequest={handleCreateRequest}\n                onSubmit={handleTicketSubmit}\n              />\n            } \n          />\n          <Route \n            path=\"/my-tickets\" \n            element={\n              <MyTickets \n                tickets={tickets} \n                currentUser={currentUser}\n              />\n            } \n          />\n          <Route \n            path=\"/tickets/:id\" \n            element={\n              <TicketDetail \n                tickets={tickets} \n                currentUser={currentUser} \n                onUpdate={handleUpdateTicket} \n              />\n            } \n          />\n          <Route \n            path=\"/admin/requests\" \n            element={\n              <ProtectedRoute currentUser={currentUser} requiredRole={['ADMIN', 'APPROVER']}>\n                <RequestManagement\n                  tickets={tickets}\n                  currentUser={currentUser}\n                  onUpdate={handleUpdateTicket}\n                />\n              </ProtectedRoute>\n            }\n          />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}