{"ast":null,"code":"import React from'react';import Products from'./Products';import TaskBoard from'./TaskBoard';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Home=_ref=>{let{tickets,currentUser,onCreateRequest,onStatusChange}=_ref;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Products,{onCreateRequest:onCreateRequest,currentUser:currentUser}),/*#__PURE__*/_jsx(TaskBoard,{tickets:tickets,onStatusChange:onStatusChange,currentUser:currentUser})]});};export default Home;","map":{"version":3,"names":["React","Products","TaskBoard","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Home","_ref","tickets","currentUser","onCreateRequest","onStatusChange","children"],"sources":["/Users/s89539/Desktop/ticket-management/src/components/Home.tsx"],"sourcesContent":["import React from 'react';\nimport Products from './Products';\nimport TaskBoard from './TaskBoard';\nimport { User, Ticket, TicketStatus } from '../types/system';\n\ninterface HomeProps {\n  tickets: Ticket[];\n  currentUser: User;\n  onCreateRequest: () => void;\n  onStatusChange: (ticketId: string, newStatus: TicketStatus) => void;\n}\n\nconst Home: React.FC<HomeProps> = ({ tickets, currentUser, onCreateRequest, onStatusChange }) => {\n  return (\n    <>\n      <Products onCreateRequest={onCreateRequest} currentUser={currentUser} />\n      <TaskBoard \n        tickets={tickets}\n        onStatusChange={onStatusChange}\n        currentUser={currentUser}\n      />\n    </>\n  );\n};\n\nexport default Home; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,YAAY,CACjC,MAAO,CAAAC,SAAS,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAUpC,KAAM,CAAAC,IAAyB,CAAGC,IAAA,EAA+D,IAA9D,CAAEC,OAAO,CAAEC,WAAW,CAAEC,eAAe,CAAEC,cAAe,CAAC,CAAAJ,IAAA,CAC1F,mBACEF,KAAA,CAAAF,SAAA,EAAAS,QAAA,eACEX,IAAA,CAACH,QAAQ,EAACY,eAAe,CAAEA,eAAgB,CAACD,WAAW,CAAEA,WAAY,CAAE,CAAC,cACxER,IAAA,CAACF,SAAS,EACRS,OAAO,CAAEA,OAAQ,CACjBG,cAAc,CAAEA,cAAe,CAC/BF,WAAW,CAAEA,WAAY,CAC1B,CAAC,EACF,CAAC,CAEP,CAAC,CAED,cAAe,CAAAH,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}