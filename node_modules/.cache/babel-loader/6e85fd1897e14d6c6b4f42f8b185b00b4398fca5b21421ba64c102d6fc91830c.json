{"ast":null,"code":"var _jsxFileName = \"/Users/a667227/Desktop/Work/web2-announcement/src/components/tickets/MyTickets.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../styles/tickets/MyTickets.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTickets = ({\n  tickets,\n  currentUser\n}) => {\n  _s();\n  const navigate = useNavigate();\n\n  // Filter tickets based on user role\n  const filteredTickets = tickets.filter(ticket => {\n    if (currentUser.role === 'ADMIN') return true;\n    if (currentUser.role === 'APPROVER') {\n      return ticket.status === 'PENDING' || ticket.requesterId === currentUser.id;\n    }\n    return ticket.requesterId === currentUser.id;\n  });\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const getStatusClass = status => {\n    switch (status) {\n      case 'APPROVED':\n        return 'status-approved';\n      case 'REJECTED':\n        return 'status-rejected';\n      case 'PENDING':\n        return 'status-pending';\n      default:\n        return 'status-draft';\n    }\n  };\n  const handleRowClick = ticketId => {\n    navigate(`/tickets/${ticketId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-tickets\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tickets-table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"tickets-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Request Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Machine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredTickets.map(ticket => /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleRowClick(ticket.id),\n            className: \"ticket-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ticket.id.slice(-6).toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ticket.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ticket.department\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status-badge ${getStatusClass(ticket.status)}`,\n                children: ticket.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: formatDate(ticket.requestDate)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ticket.chemicalConfig.machineName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, ticket.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), filteredTickets.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-tickets\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tickets found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTickets, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = MyTickets;\nexport default MyTickets;\nvar _c;\n$RefreshReg$(_c, \"MyTickets\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","MyTickets","tickets","currentUser","_s","navigate","filteredTickets","filter","ticket","role","status","requesterId","id","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","getStatusClass","handleRowClick","ticketId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","slice","toUpperCase","title","department","requestDate","chemicalConfig","machineName","length","_c","$RefreshReg$"],"sources":["/Users/a667227/Desktop/Work/web2-announcement/src/components/tickets/MyTickets.tsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Ticket, User } from '../../types/system';\nimport '../../styles/tickets/MyTickets.css';\n\ninterface MyTicketsProps {\n  tickets: Ticket[];\n  currentUser: User;\n}\n\nconst MyTickets: React.FC<MyTicketsProps> = ({ tickets, currentUser }) => {\n  const navigate = useNavigate();\n  \n  // Filter tickets based on user role\n  const filteredTickets = tickets.filter(ticket => {\n    if (currentUser.role === 'ADMIN') return true;\n    if (currentUser.role === 'APPROVER') {\n      return ticket.status === 'PENDING' || ticket.requesterId === currentUser.id;\n    }\n    return ticket.requesterId === currentUser.id;\n  });\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getStatusClass = (status: string) => {\n    switch (status) {\n      case 'APPROVED': return 'status-approved';\n      case 'REJECTED': return 'status-rejected';\n      case 'PENDING': return 'status-pending';\n      default: return 'status-draft';\n    }\n  };\n\n  const handleRowClick = (ticketId: string) => {\n    navigate(`/tickets/${ticketId}`);\n  };\n\n  return (\n    <div className=\"my-tickets\">\n      <h2>My Tickets</h2>\n      <div className=\"tickets-table-container\">\n        <table className=\"tickets-table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Title</th>\n              <th>Department</th>\n              <th>Status</th>\n              <th>Request Date</th>\n              <th>Machine</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredTickets.map(ticket => (\n              <tr \n                key={ticket.id} \n                onClick={() => handleRowClick(ticket.id)}\n                className=\"ticket-row\"\n              >\n                <td>{ticket.id.slice(-6).toUpperCase()}</td>\n                <td>{ticket.title}</td>\n                <td>{ticket.department}</td>\n                <td>\n                  <span className={`status-badge ${getStatusClass(ticket.status)}`}>\n                    {ticket.status}\n                  </span>\n                </td>\n                <td>{formatDate(ticket.requestDate)}</td>\n                <td>{ticket.chemicalConfig.machineName}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        {filteredTickets.length === 0 && (\n          <div className=\"no-tickets\">\n            <p>No tickets found</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MyTickets; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}