{"ast":null,"code":"var _jsxFileName = \"/Users/a667227/Desktop/Work/ticket-management/src/components/TaskBoard.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport '../styles/TaskBoard.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Toast from './Toast';\nimport { useNavigate } from 'react-router-dom';\nimport { getAllTicketsRaw } from '../services/api'; // Import the debug function\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Updated StrictModeDroppable component to fix React 18 warnings\n// This is a compatibility wrapper for react-beautiful-dnd in React 18 with StrictMode\nconst StrictModeDroppable = ({\n  children,\n  ...props\n}) => {\n  _s();\n  const [enabled, setEnabled] = useState(false);\n  useEffect(() => {\n    // Wait until after client-side hydration to enable\n    const animation = requestAnimationFrame(() => {\n      setEnabled(true);\n    });\n    return () => {\n      cancelAnimationFrame(animation);\n    };\n  }, []);\n  if (!enabled) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Droppable, {\n    ...props,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n_s(StrictModeDroppable, \"KO045EdmUKRrcVNzr+fxbg9aW04=\");\n_c = StrictModeDroppable;\nconst TaskBoard = ({\n  tickets,\n  onStatusChange,\n  currentUser\n}) => {\n  _s2();\n  const columns = ['DRAFT', 'PENDING', 'APPROVED', 'REJECTED'];\n  const [isDragging, setIsDragging] = useState(false);\n  const [toast, setToast] = useState({\n    message: '',\n    visible: false\n  });\n  const navigate = useNavigate();\n\n  // State for date filter\n  const [dateRange, setDateRange] = useState(() => {\n    const end = new Date();\n    const start = new Date();\n    start.setDate(start.getDate() - 365); // Changed to show 1 year of tickets by default\n    return {\n      startDate: start,\n      endDate: end\n    };\n  });\n\n  // Adding debug state\n  const [debugInfo, setDebugInfo] = useState('');\n\n  // Log received tickets for debugging\n  useEffect(() => {\n    console.log('TaskBoard received tickets:', tickets);\n    console.log('Current date range:', {\n      startDate: dateRange.startDate.toISOString(),\n      endDate: dateRange.endDate.toISOString()\n    });\n  }, [tickets, dateRange]);\n\n  // State for pagination per column\n  const [pagination, setPagination] = useState({\n    'DRAFT': {\n      page: 1,\n      limit: 20\n    },\n    'PENDING': {\n      page: 1,\n      limit: 20\n    },\n    'APPROVED': {\n      page: 1,\n      limit: 20\n    },\n    'REJECTED': {\n      page: 1,\n      limit: 20\n    }\n  });\n\n  // Filter tickets based on user role\n  const filteredTickets = tickets.filter(ticket => {\n    // Debug ticket date\n    const ticketDate = new Date(ticket.requestDate || '');\n    console.log('Filtering ticket:', {\n      id: ticket._id,\n      title: ticket.title,\n      status: ticket.status,\n      date: ticket.requestDate,\n      ticketDate: ticketDate.toISOString(),\n      inRange: ticketDate >= dateRange.startDate && ticketDate <= dateRange.endDate\n    });\n\n    // Date range filter\n    if (ticketDate < dateRange.startDate || ticketDate > dateRange.endDate) {\n      return false;\n    }\n\n    // User role filter\n    if (currentUser.role === 'ADMIN') return true;\n    if (currentUser.role === 'APPROVER') {\n      // Approvers can see all tickets in all statuses\n      return true;\n    }\n    return ticket.requesterId === currentUser._id;\n  });\n\n  // Log filtered tickets for debugging\n  useEffect(() => {\n    console.log('Filtered tickets count:', filteredTickets.length);\n  }, [filteredTickets]);\n\n  // Group tickets by status\n  const ticketsByStatus = columns.reduce((acc, status) => {\n    acc[status] = filteredTickets.filter(ticket => ticket.status === status);\n    return acc;\n  }, {});\n\n  // Get visible tickets per column with pagination\n  const getVisibleTickets = status => {\n    const {\n      page,\n      limit\n    } = pagination[status];\n    const start = (page - 1) * limit;\n    const end = start + limit;\n    return ticketsByStatus[status].slice(start, end);\n  };\n\n  // Handle page change for a column\n  const handlePageChange = (status, increment) => {\n    setPagination(prev => {\n      const columnPagination = {\n        ...prev[status]\n      };\n      columnPagination.page += increment;\n\n      // Ensure page is within valid range\n      const maxPage = Math.ceil(ticketsByStatus[status].length / columnPagination.limit) || 1;\n      if (columnPagination.page < 1) columnPagination.page = 1;\n      if (columnPagination.page > maxPage) columnPagination.page = maxPage;\n      return {\n        ...prev,\n        [status]: columnPagination\n      };\n    });\n  };\n\n  // Handle date filter changes\n  const handleDateFilterChange = (type, dateString) => {\n    // Parse the date in a safer way to avoid timezone issues\n    const date = new Date(dateString + 'T00:00:00');\n    console.log('Date changed:', {\n      type,\n      dateString,\n      parsedDate: date.toISOString()\n    });\n    setDateRange(prev => ({\n      ...prev,\n      [type === 'start' ? 'startDate' : 'endDate']: date\n    }));\n\n    // Reset pagination when filter changes\n    setPagination({\n      'DRAFT': {\n        page: 1,\n        limit: 20\n      },\n      'PENDING': {\n        page: 1,\n        limit: 20\n      },\n      'APPROVED': {\n        page: 1,\n        limit: 20\n      },\n      'REJECTED': {\n        page: 1,\n        limit: 20\n      }\n    });\n  };\n\n  // Check if the user can move the ticket from source to destination status\n  const canMoveTicket = (ticket, sourceStatus, destinationStatus) => {\n    const role = currentUser.role;\n\n    // ADMIN can move tickets freely between any status\n    if (role === 'ADMIN') return true;\n\n    // APPROVER can only move tickets forward in the workflow, but cannot move from DRAFT\n    if (role === 'APPROVER') {\n      // Define workflow order for all status determinations\n      const workflowOrder = {\n        'DRAFT': 0,\n        'PENDING': 1,\n        'APPROVED': 2,\n        'REJECTED': 2 // APPROVED and REJECTED are at the same level\n      };\n\n      // Approvers can move their own tickets with some restrictions\n      if (ticket.requesterId === currentUser._id) {\n        // Prevent moving backward from APPROVED or REJECTED to earlier statuses\n        if ((sourceStatus === 'APPROVED' || sourceStatus === 'REJECTED') && (destinationStatus === 'PENDING' || destinationStatus === 'DRAFT')) {\n          return false;\n        }\n        return true; // Allow all other movements for own tickets\n      }\n\n      // For other people's tickets, check if the move is forward in the workflow\n      return workflowOrder[destinationStatus] > workflowOrder[sourceStatus];\n    }\n\n    // REQUESTER can only move their own tickets from DRAFT to PENDING\n    if (role === 'REQUESTER') {\n      if (ticket.requesterId === currentUser._id && sourceStatus === 'DRAFT' && destinationStatus === 'PENDING') {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  };\n  const getRequesterName = ticket => {\n    var _ticket$requester;\n    return ((_ticket$requester = ticket.requester) === null || _ticket$requester === void 0 ? void 0 : _ticket$requester.fullName) || 'Unknown User';\n  };\n  const handleDragEnd = result => {\n    setIsDragging(false);\n    const {\n      draggableId,\n      source,\n      destination\n    } = result;\n\n    // Drop outside any droppable area or same position\n    if (!destination || source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n\n    // The draggableId is the ticket ID\n    const ticketId = draggableId;\n\n    // Source and destination are the status columns\n    const sourceStatus = source.droppableId;\n    const destinationStatus = destination.droppableId;\n    const ticket = tickets.find(t => t._id === ticketId);\n    if (!ticket) return;\n\n    // Check if the user has permission to move the ticket\n    if (canMoveTicket(ticket, sourceStatus, destinationStatus)) {\n      onStatusChange(ticketId, destinationStatus);\n    } else {\n      // Show toast notification for permission error\n      setToast({\n        message: `You don't have permission to move this ticket to ${destinationStatus} status`,\n        visible: true\n      });\n    }\n  };\n  const handleDragStart = () => {\n    setIsDragging(true);\n  };\n\n  // Handle closing the toast\n  const handleCloseToast = () => {\n    setToast({\n      ...toast,\n      visible: false\n    });\n  };\n  const checkDragDisabled = (ticket, status) => {\n    // ADMIN can move any ticket\n    if (currentUser.role === 'ADMIN') return false;\n\n    // APPROVER permissions\n    if (currentUser.role === 'APPROVER') {\n      // Allow APPROVERs to drag their own tickets from any status\n      if (ticket.requesterId === currentUser._id) return false;\n\n      // APPROVERs cannot drag other people's tickets that are in DRAFT status\n      return status === 'DRAFT';\n    }\n\n    // REQUESTER can only move their own tickets from DRAFT to PENDING\n    if (currentUser.role === 'REQUESTER') {\n      return !(ticket.requesterId === currentUser._id && status === 'DRAFT');\n    }\n    return true;\n  };\n\n  // Add a click handler to navigate to ticket detail\n  const handleTicketClick = ticketId => {\n    if (!isDragging) {\n      navigate(`/tickets/${ticketId}`);\n    }\n  };\n\n  // Debug function to fetch tickets directly\n  const debugFetchTickets = async () => {\n    try {\n      setDebugInfo('Fetching tickets directly...');\n      const rawResponse = await getAllTicketsRaw();\n      setDebugInfo(`Raw API response received. Check console for details.`);\n      console.log('Raw tickets response:', rawResponse);\n    } catch (error) {\n      setDebugInfo(`Error: ${error.message}`);\n      console.error('Debug fetch error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [toast.visible && /*#__PURE__*/_jsxDEV(Toast, {\n      message: toast.message,\n      type: \"error\",\n      onClose: handleCloseToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskboard-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"From:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dateRange.startDate.toISOString().split('T')[0],\n            onChange: e => handleDateFilterChange('start', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"To:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dateRange.endDate.toISOString().split('T')[0],\n            onChange: e => handleDateFilterChange('end', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // Set date range to all time\n            const end = new Date();\n            const start = new Date(2020, 0, 1); // Jan 1, 2020\n            handleDateFilterChange('start', start.toISOString().split('T')[0]);\n            handleDateFilterChange('end', end.toISOString().split('T')[0]);\n          },\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"All Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: debugFetchTickets,\n          style: {\n            marginLeft: '10px',\n            backgroundColor: '#ff9800',\n            color: 'white'\n          },\n          children: \"Debug API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          padding: '8px',\n          backgroundColor: '#f8f9fa',\n          borderRadius: '4px',\n          fontSize: '14px'\n        },\n        children: [\"Debug Info: \", debugInfo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), tickets.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        backgroundColor: '#f8f9fa',\n        borderRadius: '8px',\n        textAlign: 'center',\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Tickets Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no tickets to display. This could be due to:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          textAlign: 'left',\n          display: 'inline-block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"No tickets exist in the system\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Date filter excludes all tickets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"API connection issues\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Authentication problems\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Try changing the date range or use the \\\"All Time\\\" button.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      onDragStart: handleDragStart,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-board\",\n        children: columns.map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"column-title\",\n            children: [status, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ticket-count\",\n              children: [\"(\", ticketsByStatus[status].length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StrictModeDroppable, {\n            droppableId: status,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              className: `task-list ${snapshot.isDraggingOver ? 'drop-allowed' : ''}`,\n              children: [getVisibleTickets(status).map((ticket, index) => {\n                // Determine if this ticket can be dragged\n                const isDragDisabled = checkDragDisabled(ticket, status);\n                return /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: ticket._id,\n                  index: index,\n                  isDragDisabled: isDragDisabled,\n                  children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    className: `task-card ${snapshot.isDragging ? 'is-dragging' : ''} ${isDragDisabled ? 'not-draggable' : ''}`,\n                    onClick: () => handleTicketClick(ticket._id),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"task-priority\",\n                      \"data-priority\": ticket.department\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 409,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: ticket.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 410,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: ticket.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 411,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"task-meta\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"assignee\",\n                        children: getRequesterName(ticket)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 413,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"due-date\",\n                        children: ticket.requestDate ? new Date(ticket.requestDate).toLocaleDateString() : 'No date'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 414,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 412,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 29\n                  }, this)\n                }, ticket._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 25\n                }, this);\n              }), provided.placeholder, ticketsByStatus[status].length > pagination[status].limit && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column-pagination\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handlePageChange(status, -1),\n                  disabled: pagination[status].page === 1,\n                  className: \"pagination-btn\",\n                  children: \"\\xAB Prev\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"page-indicator\",\n                  children: [pagination[status].page, \" /\", Math.ceil(ticketsByStatus[status].length / pagination[status].limit)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handlePageChange(status, 1),\n                  disabled: pagination[status].page >= Math.ceil(ticketsByStatus[status].length / pagination[status].limit),\n                  className: \"pagination-btn\",\n                  children: \"Next \\xBB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)]\n        }, status, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(TaskBoard, \"ybQWqij5LNSe8AM4Ng0hrMX0E/c=\", false, function () {\n  return [useNavigate];\n});\n_c2 = TaskBoard;\nexport default TaskBoard;\nvar _c, _c2;\n$RefreshReg$(_c, \"StrictModeDroppable\");\n$RefreshReg$(_c2, \"TaskBoard\");","map":{"version":3,"names":["useState","useEffect","DragDropContext","Droppable","Draggable","Toast","useNavigate","getAllTicketsRaw","jsxDEV","_jsxDEV","Fragment","_Fragment","StrictModeDroppable","children","props","_s","enabled","setEnabled","animation","requestAnimationFrame","cancelAnimationFrame","fileName","_jsxFileName","lineNumber","columnNumber","_c","TaskBoard","tickets","onStatusChange","currentUser","_s2","columns","isDragging","setIsDragging","toast","setToast","message","visible","navigate","dateRange","setDateRange","end","Date","start","setDate","getDate","startDate","endDate","debugInfo","setDebugInfo","console","log","toISOString","pagination","setPagination","page","limit","filteredTickets","filter","ticket","ticketDate","requestDate","id","_id","title","status","date","inRange","role","requesterId","length","ticketsByStatus","reduce","acc","getVisibleTickets","slice","handlePageChange","increment","prev","columnPagination","maxPage","Math","ceil","handleDateFilterChange","type","dateString","parsedDate","canMoveTicket","sourceStatus","destinationStatus","workflowOrder","getRequesterName","_ticket$requester","requester","fullName","handleDragEnd","result","draggableId","source","destination","droppableId","index","ticketId","find","t","handleDragStart","handleCloseToast","checkDragDisabled","handleTicketClick","debugFetchTickets","rawResponse","error","onClose","className","value","split","onChange","e","target","onClick","style","marginLeft","backgroundColor","color","marginTop","padding","borderRadius","fontSize","textAlign","margin","display","onDragEnd","onDragStart","map","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","isDragDisabled","draggableProps","dragHandleProps","department","description","toLocaleDateString","placeholder","disabled","_c2","$RefreshReg$"],"sources":["/Users/a667227/Desktop/Work/ticket-management/src/components/TaskBoard.tsx"],"sourcesContent":["import { FC, useState, useEffect, ReactElement, useCallback } from 'react';\nimport '../styles/TaskBoard.css';\nimport { Ticket, TicketStatus, User } from '../types/system';\nimport { DragDropContext, Droppable, Draggable, DropResult, DroppableProps, DroppableProvided, DroppableStateSnapshot } from 'react-beautiful-dnd';\nimport Toast from './Toast';\nimport { useNavigate } from 'react-router-dom';\nimport { getAllTicketsRaw } from '../services/api'; // Import the debug function\n\ninterface TaskBoardProps {\n  tickets: Ticket[];\n  onStatusChange: (ticketId: string, newStatus: TicketStatus) => void;\n  currentUser: User;\n}\n\n// Updated StrictModeDroppable component to fix React 18 warnings\n// This is a compatibility wrapper for react-beautiful-dnd in React 18 with StrictMode\nconst StrictModeDroppable = ({ children, ...props }: DroppableProps & { children: (provided: DroppableProvided, snapshot: DroppableStateSnapshot) => ReactElement }) => {\n  const [enabled, setEnabled] = useState(false);\n  \n  useEffect(() => {\n    // Wait until after client-side hydration to enable\n    const animation = requestAnimationFrame(() => {\n      setEnabled(true);\n    });\n    \n    return () => {\n      cancelAnimationFrame(animation);\n    };\n  }, []);\n  \n  if (!enabled) {\n    return null;\n  }\n  \n  return <Droppable {...props}>{children}</Droppable>;\n};\n\nconst TaskBoard: FC<TaskBoardProps> = ({ tickets, onStatusChange, currentUser }) => {\n  const columns: TicketStatus[] = ['DRAFT', 'PENDING', 'APPROVED', 'REJECTED'];\n  const [isDragging, setIsDragging] = useState(false);\n  const [toast, setToast] = useState<{ message: string; visible: boolean }>({\n    message: '',\n    visible: false\n  });\n  const navigate = useNavigate();\n  \n  // State for date filter\n  const [dateRange, setDateRange] = useState(() => {\n    const end = new Date();\n    const start = new Date();\n    start.setDate(start.getDate() - 365); // Changed to show 1 year of tickets by default\n    return { startDate: start, endDate: end };\n  });\n  \n  // Adding debug state\n  const [debugInfo, setDebugInfo] = useState<string>('');\n  \n  // Log received tickets for debugging\n  useEffect(() => {\n    console.log('TaskBoard received tickets:', tickets);\n    console.log('Current date range:', { \n      startDate: dateRange.startDate.toISOString(), \n      endDate: dateRange.endDate.toISOString() \n    });\n  }, [tickets, dateRange]);\n  \n  // State for pagination per column\n  const [pagination, setPagination] = useState<{[key in TicketStatus]: {page: number, limit: number}}>({\n    'DRAFT': {page: 1, limit: 20},\n    'PENDING': {page: 1, limit: 20},\n    'APPROVED': {page: 1, limit: 20},\n    'REJECTED': {page: 1, limit: 20}\n  });\n  \n  // Filter tickets based on user role\n  const filteredTickets = tickets.filter(ticket => {\n    // Debug ticket date\n    const ticketDate = new Date(ticket.requestDate || '');\n    console.log('Filtering ticket:', { \n      id: ticket._id,\n      title: ticket.title,\n      status: ticket.status, \n      date: ticket.requestDate,\n      ticketDate: ticketDate.toISOString(),\n      inRange: ticketDate >= dateRange.startDate && ticketDate <= dateRange.endDate\n    });\n    \n    // Date range filter\n    if (ticketDate < dateRange.startDate || ticketDate > dateRange.endDate) {\n      return false;\n    }\n    \n    // User role filter\n    if (currentUser.role === 'ADMIN') return true;\n    if (currentUser.role === 'APPROVER') {\n      // Approvers can see all tickets in all statuses\n      return true;\n    }\n    return ticket.requesterId === currentUser._id;\n  });\n\n  // Log filtered tickets for debugging\n  useEffect(() => {\n    console.log('Filtered tickets count:', filteredTickets.length);\n  }, [filteredTickets]);\n  \n  // Group tickets by status\n  const ticketsByStatus = columns.reduce((acc, status) => {\n    acc[status] = filteredTickets.filter(ticket => ticket.status === status);\n    return acc;\n  }, {} as {[key in TicketStatus]: Ticket[]});\n  \n  // Get visible tickets per column with pagination\n  const getVisibleTickets = (status: TicketStatus) => {\n    const { page, limit } = pagination[status];\n    const start = (page - 1) * limit;\n    const end = start + limit;\n    return ticketsByStatus[status].slice(start, end);\n  };\n  \n  // Handle page change for a column\n  const handlePageChange = (status: TicketStatus, increment: number) => {\n    setPagination(prev => {\n      const columnPagination = {...prev[status]};\n      columnPagination.page += increment;\n      \n      // Ensure page is within valid range\n      const maxPage = Math.ceil(ticketsByStatus[status].length / columnPagination.limit) || 1;\n      if (columnPagination.page < 1) columnPagination.page = 1;\n      if (columnPagination.page > maxPage) columnPagination.page = maxPage;\n      \n      return {...prev, [status]: columnPagination};\n    });\n  };\n  \n  // Handle date filter changes\n  const handleDateFilterChange = (type: 'start' | 'end', dateString: string) => {\n    // Parse the date in a safer way to avoid timezone issues\n    const date = new Date(dateString + 'T00:00:00');\n    console.log('Date changed:', { type, dateString, parsedDate: date.toISOString() });\n    \n    setDateRange(prev => ({\n      ...prev,\n      [type === 'start' ? 'startDate' : 'endDate']: date\n    }));\n    \n    // Reset pagination when filter changes\n    setPagination({\n      'DRAFT': {page: 1, limit: 20},\n      'PENDING': {page: 1, limit: 20},\n      'APPROVED': {page: 1, limit: 20},\n      'REJECTED': {page: 1, limit: 20}\n    });\n  };\n\n  // Check if the user can move the ticket from source to destination status\n  const canMoveTicket = (\n    ticket: Ticket,\n    sourceStatus: TicketStatus,\n    destinationStatus: TicketStatus\n  ): boolean => {\n    const role = currentUser.role;\n    \n    // ADMIN can move tickets freely between any status\n    if (role === 'ADMIN') return true;\n    \n    // APPROVER can only move tickets forward in the workflow, but cannot move from DRAFT\n    if (role === 'APPROVER') {\n      // Define workflow order for all status determinations\n      const workflowOrder: { [key in TicketStatus]: number } = {\n        'DRAFT': 0,\n        'PENDING': 1,\n        'APPROVED': 2,\n        'REJECTED': 2  // APPROVED and REJECTED are at the same level\n      };\n      \n      // Approvers can move their own tickets with some restrictions\n      if (ticket.requesterId === currentUser._id) {\n        // Prevent moving backward from APPROVED or REJECTED to earlier statuses\n        if ((sourceStatus === 'APPROVED' || sourceStatus === 'REJECTED') && \n            (destinationStatus === 'PENDING' || destinationStatus === 'DRAFT')) {\n          return false;\n        }\n        return true; // Allow all other movements for own tickets\n      }\n      \n      // For other people's tickets, check if the move is forward in the workflow\n      return workflowOrder[destinationStatus] > workflowOrder[sourceStatus];\n    }\n    \n    // REQUESTER can only move their own tickets from DRAFT to PENDING\n    if (role === 'REQUESTER') {\n      if (ticket.requesterId === currentUser._id && sourceStatus === 'DRAFT' && destinationStatus === 'PENDING') {\n        return true;\n      }\n      return false;\n    }\n    \n    return false;\n  };\n\n  const getRequesterName = (ticket: Ticket): string => {\n    return ticket.requester?.fullName || 'Unknown User';\n  };\n\n  const handleDragEnd = (result: DropResult) => {\n    setIsDragging(false);\n    \n    const { draggableId, source, destination } = result;\n    \n    // Drop outside any droppable area or same position\n    if (!destination || \n        (source.droppableId === destination.droppableId && \n         source.index === destination.index)) {\n      return;\n    }\n    \n    // The draggableId is the ticket ID\n    const ticketId = draggableId;\n    \n    // Source and destination are the status columns\n    const sourceStatus = source.droppableId as TicketStatus;\n    const destinationStatus = destination.droppableId as TicketStatus;\n    \n    const ticket = tickets.find(t => t._id === ticketId);\n    \n    if (!ticket) return;\n    \n    // Check if the user has permission to move the ticket\n    if (canMoveTicket(ticket, sourceStatus, destinationStatus)) {\n      onStatusChange(ticketId, destinationStatus);\n    } else {\n      // Show toast notification for permission error\n      setToast({\n        message: `You don't have permission to move this ticket to ${destinationStatus} status`,\n        visible: true\n      });\n    }\n  };\n  \n  const handleDragStart = () => {\n    setIsDragging(true);\n  };\n\n  // Handle closing the toast\n  const handleCloseToast = () => {\n    setToast({ ...toast, visible: false });\n  };\n\n  const checkDragDisabled = (ticket: Ticket, status: TicketStatus): boolean => {\n    // ADMIN can move any ticket\n    if (currentUser.role === 'ADMIN') return false;\n    \n    // APPROVER permissions\n    if (currentUser.role === 'APPROVER') {\n      // Allow APPROVERs to drag their own tickets from any status\n      if (ticket.requesterId === currentUser._id) return false;\n      \n      // APPROVERs cannot drag other people's tickets that are in DRAFT status\n      return status === 'DRAFT';\n    }\n    \n    // REQUESTER can only move their own tickets from DRAFT to PENDING\n    if (currentUser.role === 'REQUESTER') {\n      return !(ticket.requesterId === currentUser._id && status === 'DRAFT');\n    }\n    \n    return true;\n  };\n\n  // Add a click handler to navigate to ticket detail\n  const handleTicketClick = (ticketId: string) => {\n    if (!isDragging) {\n      navigate(`/tickets/${ticketId}`);\n    }\n  };\n\n  // Debug function to fetch tickets directly\n  const debugFetchTickets = async () => {\n    try {\n      setDebugInfo('Fetching tickets directly...');\n      const rawResponse = await getAllTicketsRaw();\n      setDebugInfo(`Raw API response received. Check console for details.`);\n      console.log('Raw tickets response:', rawResponse);\n    } catch (error) {\n      setDebugInfo(`Error: ${error.message}`);\n      console.error('Debug fetch error:', error);\n    }\n  };\n\n  return (\n    <>\n      {toast.visible && (\n        <Toast \n          message={toast.message} \n          type=\"error\" \n          onClose={handleCloseToast} \n        />\n      )}\n      \n      <div className=\"taskboard-controls\">\n        <div className=\"date-filter\">\n          <div className=\"filter-group\">\n            <label>From:</label>\n            <input \n              type=\"date\" \n              value={dateRange.startDate.toISOString().split('T')[0]}\n              onChange={(e) => handleDateFilterChange('start', e.target.value)}\n            />\n          </div>\n          <div className=\"filter-group\">\n            <label>To:</label>\n            <input \n              type=\"date\" \n              value={dateRange.endDate.toISOString().split('T')[0]}\n              onChange={(e) => handleDateFilterChange('end', e.target.value)}\n            />\n          </div>\n          <button \n            onClick={() => {\n              // Set date range to all time\n              const end = new Date();\n              const start = new Date(2020, 0, 1); // Jan 1, 2020\n              handleDateFilterChange('start', start.toISOString().split('T')[0]);\n              handleDateFilterChange('end', end.toISOString().split('T')[0]);\n            }}\n            style={{ marginLeft: '10px' }}\n          >\n            All Time\n          </button>\n          <button \n            onClick={debugFetchTickets}\n            style={{ marginLeft: '10px', backgroundColor: '#ff9800', color: 'white' }}\n          >\n            Debug API\n          </button>\n        </div>\n        {debugInfo && (\n          <div style={{ \n            marginTop: '10px', \n            padding: '8px', \n            backgroundColor: '#f8f9fa', \n            borderRadius: '4px',\n            fontSize: '14px'\n          }}>\n            Debug Info: {debugInfo}\n          </div>\n        )}\n      </div>\n      \n      {/* Show a message when no tickets are available */}\n      {tickets.length === 0 && (\n        <div style={{ \n          padding: '20px', \n          backgroundColor: '#f8f9fa', \n          borderRadius: '8px', \n          textAlign: 'center',\n          margin: '20px 0'\n        }}>\n          <h3>No Tickets Available</h3>\n          <p>There are no tickets to display. This could be due to:</p>\n          <ul style={{ textAlign: 'left', display: 'inline-block' }}>\n            <li>No tickets exist in the system</li>\n            <li>Date filter excludes all tickets</li>\n            <li>API connection issues</li>\n            <li>Authentication problems</li>\n          </ul>\n          <p>Try changing the date range or use the \"All Time\" button.</p>\n        </div>\n      )}\n      \n      <DragDropContext onDragEnd={handleDragEnd} onDragStart={handleDragStart}>\n        <div className=\"task-board\">\n          {columns.map((status) => (\n            <div key={status} className=\"task-column\">\n              <h3 className=\"column-title\">\n                {status} \n                <span className=\"ticket-count\">\n                  ({ticketsByStatus[status].length})\n                </span>\n              </h3>\n              \n              <StrictModeDroppable droppableId={status}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    className={`task-list ${snapshot.isDraggingOver ? 'drop-allowed' : ''}`}\n                  >\n                    {getVisibleTickets(status).map((ticket, index) => {\n                      // Determine if this ticket can be dragged\n                      const isDragDisabled = checkDragDisabled(ticket, status);\n                        \n                      return (\n                        <Draggable \n                          key={ticket._id} \n                          draggableId={ticket._id}\n                          index={index}\n                          isDragDisabled={isDragDisabled}\n                        >\n                          {(provided, snapshot) => (\n                            <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              className={`task-card ${snapshot.isDragging ? 'is-dragging' : ''} ${isDragDisabled ? 'not-draggable' : ''}`}\n                              onClick={() => handleTicketClick(ticket._id)}\n                            >\n                              <div className=\"task-priority\" data-priority={ticket.department}></div>\n                              <h4>{ticket.title}</h4>\n                              <p>{ticket.description}</p>\n                              <div className=\"task-meta\">\n                                <span className=\"assignee\">{getRequesterName(ticket)}</span>\n                                <span className=\"due-date\">\n                                  {ticket.requestDate ? new Date(ticket.requestDate).toLocaleDateString() : 'No date'}\n                                </span>\n                              </div>\n                            </div>\n                          )}\n                        </Draggable>\n                      );\n                    })}\n                    {provided.placeholder}\n                    \n                    {/* Pagination controls */}\n                    {ticketsByStatus[status].length > pagination[status].limit && (\n                      <div className=\"column-pagination\">\n                        <button \n                          onClick={() => handlePageChange(status, -1)}\n                          disabled={pagination[status].page === 1}\n                          className=\"pagination-btn\"\n                        >\n                          &laquo; Prev\n                        </button>\n                        <span className=\"page-indicator\">\n                          {pagination[status].page} / \n                          {Math.ceil(ticketsByStatus[status].length / pagination[status].limit)}\n                        </span>\n                        <button \n                          onClick={() => handlePageChange(status, 1)}\n                          disabled={\n                            pagination[status].page >= \n                            Math.ceil(ticketsByStatus[status].length / pagination[status].limit)\n                          }\n                          className=\"pagination-btn\"\n                        >\n                          Next &raquo;\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </StrictModeDroppable>\n            </div>\n          ))}\n        </div>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default TaskBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}