{"ast":null,"code":"var _jsxFileName = \"/Users/a667227/Desktop/Work/ticket-management/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout';\nimport RouteWrapper from './components/RouteWrapper';\nimport MyTickets from './components/tickets/MyTickets';\nimport Login from './components/Login';\nimport { createTicket, getTickets, updateTicketStatus, updateTicket, getAllTicketsRaw } from './services/api';\nimport TicketDetail from './components/tickets/TicketDetail';\nimport RequestManagement from './components/admin/RequestManagement';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  var _debugInfo$data;\n  const [tickets, setTickets] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [debugInfo, setDebugInfo] = useState({\n    visible: false,\n    data: null\n  });\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (token && savedUser) {\n      try {\n        const parsedUser = JSON.parse(savedUser);\n        console.log('Loaded user:', parsedUser); // Debug log\n        console.log('Token found:', token ? 'Yes (length: ' + token.length + ')' : 'No');\n        setIsAuthenticated(true);\n        setCurrentUser(parsedUser);\n        // Fetch tickets when authenticated\n        fetchTickets();\n      } catch (error) {\n        console.error('Error parsing saved user data:', error);\n        // Handle corrupted user data by clearing it\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n      }\n    } else {\n      console.log('No authentication found. Token:', !!token, 'User:', !!savedUser);\n    }\n  }, []);\n  const fetchTickets = async dateRange => {\n    try {\n      // Use a default date range if none provided (all time)\n      if (!dateRange) {\n        const end = new Date();\n        const start = new Date(2020, 0, 1); // Jan 1, 2020 instead of 365 days\n        dateRange = {\n          startDate: start,\n          endDate: end\n        };\n      }\n\n      // Ensure startDate and endDate are defined\n      const safeRange = {\n        startDate: dateRange.startDate || new Date(2020, 0, 1),\n        endDate: dateRange.endDate || new Date()\n      };\n      console.log('App fetching tickets with date range:', {\n        startDate: safeRange.startDate.toISOString(),\n        endDate: safeRange.endDate.toISOString()\n      });\n      const fetchedTickets = await getTickets(undefined, 1, 100, safeRange);\n      console.log(`App received ${fetchedTickets.tickets.length} tickets`);\n      setTickets(fetchedTickets.tickets);\n    } catch (error) {\n      console.error('Error fetching tickets:', error);\n      // If we get an authentication error, clear the token and redirect to login\n      if (error !== null && error !== void 0 && error.response && error.response.status === 401) {\n        console.error('Authentication error. Redirecting to login.');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n        setCurrentUser(null);\n      }\n    }\n  };\n  const handleLoginSuccess = (token, user) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setTickets([]);\n  };\n  const handleCreateRequest = () => {\n    // Use navigate directly in components that need it\n    window.location.href = '/tickets/create';\n  };\n  const handleTicketSubmit = async (ticketData, navigate) => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      navigate('/tickets');\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n  const handleTicketStatusChange = async (ticketId, newStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n  const handleUpdateTicket = async (ticketId, updatedData) => {\n    try {\n      if ('status' in updatedData) {\n        // Use status-specific endpoint for status updates\n        await updateTicketStatus(ticketId, updatedData.status);\n      } else {\n        // Use general update endpoint for other updates\n        await updateTicket(ticketId, updatedData);\n      }\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket:', error);\n      alert('Failed to update ticket. Please try again.');\n    }\n  };\n\n  // Add debug function to directly fetch and display the raw API response\n  const debugApiCall = async () => {\n    try {\n      var _localStorage$getItem;\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'loading',\n          message: 'Fetching data from API...'\n        }\n      });\n\n      // Call the raw tickets endpoint\n      const rawResponse = await getAllTicketsRaw();\n      console.log('DEBUG: Raw API response:', rawResponse);\n\n      // Show detailed debug info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'success',\n          timestamp: new Date().toISOString(),\n          endpoint: '/tickets',\n          response: rawResponse,\n          auth: {\n            tokenExists: !!localStorage.getItem('token'),\n            tokenLength: ((_localStorage$getItem = localStorage.getItem('token')) === null || _localStorage$getItem === void 0 ? void 0 : _localStorage$getItem.length) || 0,\n            userInfo: currentUser ? {\n              id: currentUser._id,\n              role: currentUser.role,\n              email: currentUser.email\n            } : 'No user data'\n          }\n        }\n      });\n    } catch (error) {\n      var _error$response;\n      console.error('Debug API call failed:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          timestamp: new Date().toISOString(),\n          message: (error === null || error === void 0 ? void 0 : error.message) || 'Unknown error',\n          details: (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || {},\n          stack: (error === null || error === void 0 ? void 0 : error.stack) || ''\n        }\n      });\n    }\n  };\n\n  // Improved test ticket creation with detailed responses\n  const createTestTicket = async () => {\n    if (!currentUser) return;\n    try {\n      console.log('Creating test ticket...');\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'loading',\n          message: 'Creating test ticket...'\n        }\n      });\n      const testTicketData = {\n        _id: '',\n        // This will be generated by the server\n        title: 'Test Ticket ' + new Date().toISOString(),\n        description: 'This is a test ticket created for debugging.',\n        requesterId: currentUser._id,\n        department: currentUser.department,\n        chemicalConfig: {\n          machineId: 'TEST-MACHINE',\n          machineName: 'Test Machine',\n          chemicalType: 'Test Chemical',\n          concentration: 1.0,\n          temperature: 25.0,\n          flowRate: 1.0\n        },\n        requestDate: new Date().toISOString()\n      };\n      const response = await createTicket(testTicketData);\n      console.log('Test ticket created successfully:', response);\n\n      // Show success info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'success',\n          message: 'Test ticket created successfully',\n          ticketData: response,\n          timestamp: new Date().toISOString()\n        }\n      });\n\n      // Fetch tickets again\n      fetchTickets();\n    } catch (error) {\n      var _error$response2;\n      console.error('Error creating test ticket:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          message: `Error creating test ticket: ${(error === null || error === void 0 ? void 0 : error.message) || 'Unknown error'}`,\n          details: (error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || {},\n          timestamp: new Date().toISOString()\n        }\n      });\n      alert(`Error creating test ticket: ${(error === null || error === void 0 ? void 0 : error.message) || 'Unknown error'}`);\n    }\n  };\n\n  // Function to close debug panel\n  const closeDebugPanel = () => {\n    setDebugInfo({\n      ...debugInfo,\n      visible: false\n    });\n  };\n  if (!isAuthenticated || !currentUser) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated but no tickets, add a debug button\n  if (tickets.length === 0) {\n    console.log('No tickets found. Adding debug UI...');\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [debugInfo.visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        zIndex: 9999,\n        overflow: 'auto',\n        padding: '20px',\n        color: '#fff',\n        fontFamily: 'monospace'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#1e1e1e',\n          padding: '20px',\n          borderRadius: '8px',\n          maxWidth: '1200px',\n          margin: '0 auto',\n          boxShadow: '0 0 20px rgba(0,0,0,0.5)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              color: '#61dafb',\n              margin: 0\n            },\n            children: \"API Debug Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeDebugPanel,\n            style: {\n              backgroundColor: '#e74c3c',\n              color: 'white',\n              border: 'none',\n              padding: '5px 15px',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#2d2d2d',\n            padding: '15px',\n            borderRadius: '4px',\n            overflowX: 'auto'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              maxHeight: '80vh',\n              margin: 0,\n              color: ((_debugInfo$data = debugInfo.data) === null || _debugInfo$data === void 0 ? void 0 : _debugInfo$data.status) === 'error' ? '#ff6b6b' : '#a3e635'\n            },\n            children: JSON.stringify(debugInfo.data, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px',\n        backgroundColor: '#343a40',\n        color: 'white',\n        textAlign: 'center',\n        position: 'sticky',\n        top: 0,\n        zIndex: 1000,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createTestTicket,\n        style: {\n          padding: '5px 10px',\n          backgroundColor: '#28a745',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px'\n        },\n        children: \"Create Test Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: debugApiCall,\n        style: {\n          padding: '5px 10px',\n          backgroundColor: '#007bff',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px'\n        },\n        children: \"Debug API Response\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchTickets(),\n        style: {\n          padding: '5px 10px',\n          backgroundColor: '#6c757d',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px'\n        },\n        children: \"Refresh Tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), tickets.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px',\n        backgroundColor: '#f8d7da',\n        color: '#721c24',\n        textAlign: 'center',\n        margin: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tickets found. Use the debug tools above to investigate.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          currentUser: currentUser,\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(RouteWrapper, {\n            component: \"home\",\n            tickets: tickets,\n            currentUser: currentUser,\n            onCreateRequest: handleCreateRequest,\n            onStatusChange: handleTicketStatusChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"tickets\",\n          element: /*#__PURE__*/_jsxDEV(MyTickets, {\n            tickets: tickets,\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"tickets/create\",\n          element: /*#__PURE__*/_jsxDEV(RouteWrapper, {\n            component: \"create\",\n            currentUser: currentUser,\n            onCreateRequest: handleCreateRequest,\n            onSubmit: handleTicketSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/my-tickets\",\n          element: /*#__PURE__*/_jsxDEV(MyTickets, {\n            tickets: tickets,\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/tickets/:id\",\n          element: /*#__PURE__*/_jsxDEV(TicketDetail, {\n            tickets: tickets,\n            currentUser: currentUser,\n            onUpdate: handleUpdateTicket\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin/requests\",\n          element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            currentUser: currentUser,\n            requiredRole: ['ADMIN', 'APPROVER'],\n            children: /*#__PURE__*/_jsxDEV(RequestManagement, {\n              tickets: tickets,\n              currentUser: currentUser,\n              onUpdate: handleUpdateTicket\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"7wlnlvI7o+JkWXgScrhnnUUqogE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Routes","Route","Navigate","Layout","RouteWrapper","MyTickets","Login","createTicket","getTickets","updateTicketStatus","updateTicket","getAllTicketsRaw","TicketDetail","RequestManagement","ProtectedRoute","jsxDEV","_jsxDEV","App","_s","_debugInfo$data","tickets","setTickets","isAuthenticated","setIsAuthenticated","currentUser","setCurrentUser","debugInfo","setDebugInfo","visible","data","token","localStorage","getItem","savedUser","parsedUser","JSON","parse","console","log","length","fetchTickets","error","removeItem","dateRange","end","Date","start","startDate","endDate","safeRange","toISOString","fetchedTickets","undefined","response","status","handleLoginSuccess","user","handleLogout","handleCreateRequest","window","location","href","handleTicketSubmit","ticketData","navigate","alert","handleTicketStatusChange","ticketId","newStatus","handleUpdateTicket","updatedData","debugApiCall","_localStorage$getItem","message","rawResponse","timestamp","endpoint","auth","tokenExists","tokenLength","userInfo","id","_id","role","email","_error$response","details","stack","createTestTicket","testTicketData","title","description","requesterId","department","chemicalConfig","machineId","machineName","chemicalType","concentration","temperature","flowRate","requestDate","_error$response2","closeDebugPanel","onLoginSuccess","fileName","_jsxFileName","lineNumber","columnNumber","children","style","position","top","left","right","bottom","backgroundColor","zIndex","overflow","padding","color","fontFamily","borderRadius","maxWidth","margin","boxShadow","display","justifyContent","marginBottom","onClick","border","cursor","overflowX","maxHeight","stringify","textAlign","gap","path","element","onLogout","index","component","onCreateRequest","onStatusChange","onSubmit","onUpdate","requiredRole","to","replace","_c","$RefreshReg$"],"sources":["/Users/a667227/Desktop/Work/ticket-management/src/App.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout';\nimport RouteWrapper from './components/RouteWrapper';\nimport MyTickets from './components/tickets/MyTickets';\nimport Login from './components/Login';\nimport { User, Ticket, TicketStatus } from './types/system';\nimport { createTicket, getTickets, updateTicketStatus, updateTicket, getAllTicketsRaw } from './services/api';\nimport TicketDetail from './components/tickets/TicketDetail';\nimport RequestManagement from './components/admin/RequestManagement';\nimport ProtectedRoute from './components/ProtectedRoute';\n\nconst App: FC = () => {\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [debugInfo, setDebugInfo] = useState<{ visible: boolean; data: any }>({\n    visible: false,\n    data: null\n  });\n\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (token && savedUser) {\n      try {\n        const parsedUser = JSON.parse(savedUser);\n        console.log('Loaded user:', parsedUser); // Debug log\n        console.log('Token found:', token ? 'Yes (length: ' + token.length + ')' : 'No');\n        setIsAuthenticated(true);\n        setCurrentUser(parsedUser);\n        // Fetch tickets when authenticated\n        fetchTickets();\n      } catch (error: any) {\n        console.error('Error parsing saved user data:', error);\n        // Handle corrupted user data by clearing it\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n      }\n    } else {\n      console.log('No authentication found. Token:', !!token, 'User:', !!savedUser);\n    }\n  }, []);\n\n  const fetchTickets = async (dateRange?: { startDate?: Date, endDate?: Date }) => {\n    try {\n      // Use a default date range if none provided (all time)\n      if (!dateRange) {\n        const end = new Date();\n        const start = new Date(2020, 0, 1); // Jan 1, 2020 instead of 365 days\n        dateRange = { startDate: start, endDate: end };\n      }\n      \n      // Ensure startDate and endDate are defined\n      const safeRange = {\n        startDate: dateRange.startDate || new Date(2020, 0, 1),\n        endDate: dateRange.endDate || new Date()\n      };\n      \n      console.log('App fetching tickets with date range:', {\n        startDate: safeRange.startDate.toISOString(),\n        endDate: safeRange.endDate.toISOString()\n      });\n      \n      const fetchedTickets = await getTickets(undefined, 1, 100, safeRange);\n      console.log(`App received ${fetchedTickets.tickets.length} tickets`);\n      setTickets(fetchedTickets.tickets);\n    } catch (error: any) {\n      console.error('Error fetching tickets:', error);\n      // If we get an authentication error, clear the token and redirect to login\n      if (error?.response && error.response.status === 401) {\n        console.error('Authentication error. Redirecting to login.');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n        setCurrentUser(null);\n      }\n    }\n  };\n\n  const handleLoginSuccess = (token: string, user: User) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setTickets([]);\n  };\n\n  const handleCreateRequest = () => {\n    // Use navigate directly in components that need it\n    window.location.href = '/tickets/create';\n  };\n\n  const handleTicketSubmit = async (ticketData: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'>, navigate: (path: string) => void) => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      navigate('/tickets');\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n\n  const handleTicketStatusChange = async (ticketId: string, newStatus: TicketStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n\n  const handleUpdateTicket = async (ticketId: string, updatedData: Partial<Ticket>) => {\n    try {\n      if ('status' in updatedData) {\n        // Use status-specific endpoint for status updates\n        await updateTicketStatus(ticketId, updatedData.status as TicketStatus);\n      } else {\n        // Use general update endpoint for other updates\n        await updateTicket(ticketId, updatedData);\n      }\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket:', error);\n      alert('Failed to update ticket. Please try again.');\n    }\n  };\n\n  // Add debug function to directly fetch and display the raw API response\n  const debugApiCall = async () => {\n    try {\n      setDebugInfo({\n        visible: true,\n        data: { status: 'loading', message: 'Fetching data from API...' }\n      });\n      \n      // Call the raw tickets endpoint\n      const rawResponse = await getAllTicketsRaw();\n      \n      console.log('DEBUG: Raw API response:', rawResponse);\n      \n      // Show detailed debug info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'success',\n          timestamp: new Date().toISOString(),\n          endpoint: '/tickets',\n          response: rawResponse,\n          auth: {\n            tokenExists: !!localStorage.getItem('token'),\n            tokenLength: localStorage.getItem('token')?.length || 0,\n            userInfo: currentUser ? {\n              id: currentUser._id,\n              role: currentUser.role,\n              email: currentUser.email\n            } : 'No user data'\n          }\n        }\n      });\n    } catch (error: any) {\n      console.error('Debug API call failed:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          timestamp: new Date().toISOString(),\n          message: error?.message || 'Unknown error',\n          details: error?.response?.data || {},\n          stack: error?.stack || ''\n        }\n      });\n    }\n  };\n\n  // Improved test ticket creation with detailed responses\n  const createTestTicket = async () => {\n    if (!currentUser) return;\n    \n    try {\n      console.log('Creating test ticket...');\n      setDebugInfo({\n        visible: true,\n        data: { status: 'loading', message: 'Creating test ticket...' }\n      });\n      \n      const testTicketData: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'> = {\n        _id: '', // This will be generated by the server\n        title: 'Test Ticket ' + new Date().toISOString(),\n        description: 'This is a test ticket created for debugging.',\n        requesterId: currentUser._id,\n        department: currentUser.department,\n        chemicalConfig: {\n          machineId: 'TEST-MACHINE',\n          machineName: 'Test Machine',\n          chemicalType: 'Test Chemical',\n          concentration: 1.0,\n          temperature: 25.0,\n          flowRate: 1.0\n        },\n        requestDate: new Date().toISOString()\n      };\n      \n      const response = await createTicket(testTicketData);\n      console.log('Test ticket created successfully:', response);\n      \n      // Show success info\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'success',\n          message: 'Test ticket created successfully',\n          ticketData: response,\n          timestamp: new Date().toISOString()\n        }\n      });\n      \n      // Fetch tickets again\n      fetchTickets();\n    } catch (error: any) {\n      console.error('Error creating test ticket:', error);\n      setDebugInfo({\n        visible: true,\n        data: {\n          status: 'error',\n          message: `Error creating test ticket: ${error?.message || 'Unknown error'}`,\n          details: error?.response?.data || {},\n          timestamp: new Date().toISOString()\n        }\n      });\n      alert(`Error creating test ticket: ${error?.message || 'Unknown error'}`);\n    }\n  };\n\n  // Function to close debug panel\n  const closeDebugPanel = () => {\n    setDebugInfo({ ...debugInfo, visible: false });\n  };\n\n  if (!isAuthenticated || !currentUser) {\n    return <Login onLoginSuccess={handleLoginSuccess} />;\n  }\n\n  // If authenticated but no tickets, add a debug button\n  if (tickets.length === 0) {\n    console.log('No tickets found. Adding debug UI...');\n  }\n\n  return (\n    <BrowserRouter>\n      {/* Debug panel */}\n      {debugInfo.visible && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.8)',\n          zIndex: 9999,\n          overflow: 'auto',\n          padding: '20px',\n          color: '#fff',\n          fontFamily: 'monospace'\n        }}>\n          <div style={{ \n            backgroundColor: '#1e1e1e', \n            padding: '20px', \n            borderRadius: '8px',\n            maxWidth: '1200px',\n            margin: '0 auto',\n            boxShadow: '0 0 20px rgba(0,0,0,0.5)'\n          }}>\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '20px' }}>\n              <h2 style={{ color: '#61dafb', margin: 0 }}>API Debug Information</h2>\n              <button \n                onClick={closeDebugPanel}\n                style={{\n                  backgroundColor: '#e74c3c',\n                  color: 'white',\n                  border: 'none',\n                  padding: '5px 15px',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                }}\n              >\n                Close\n              </button>\n            </div>\n            \n            <div style={{ \n              backgroundColor: '#2d2d2d', \n              padding: '15px', \n              borderRadius: '4px',\n              overflowX: 'auto'\n            }}>\n              <pre style={{ \n                maxHeight: '80vh', \n                margin: 0, \n                color: debugInfo.data?.status === 'error' ? '#ff6b6b' : '#a3e635' \n              }}>\n                {JSON.stringify(debugInfo.data, null, 2)}\n              </pre>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Debug tools bar */}\n      <div style={{\n        padding: '10px',\n        backgroundColor: '#343a40',\n        color: 'white',\n        textAlign: 'center',\n        position: 'sticky',\n        top: 0,\n        zIndex: 1000,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '10px'\n      }}>\n        <button \n          onClick={createTestTicket}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#28a745',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px'\n          }}\n        >\n          Create Test Ticket\n        </button>\n        <button\n          onClick={debugApiCall}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none', \n            borderRadius: '4px'\n          }}\n        >\n          Debug API Response\n        </button>\n        <button\n          onClick={() => fetchTickets()}\n          style={{\n            padding: '5px 10px',\n            backgroundColor: '#6c757d',\n            color: 'white',\n            border: 'none', \n            borderRadius: '4px'\n          }}\n        >\n          Refresh Tickets\n        </button>\n      </div>\n\n      {/* Existing no tickets warning - we'll keep this but make it less prominent */}\n      {tickets.length === 0 && (\n        <div style={{\n          padding: '10px',\n          backgroundColor: '#f8d7da',\n          color: '#721c24',\n          textAlign: 'center',\n          margin: '10px'\n        }}>\n          <p>No tickets found. Use the debug tools above to investigate.</p>\n        </div>\n      )}\n\n      <Routes>\n        <Route \n          path=\"/\" \n          element={\n            <Layout \n              currentUser={currentUser}\n              onLogout={handleLogout}\n            />\n          }\n        >\n          <Route index element={\n            <RouteWrapper \n              component=\"home\"\n              tickets={tickets}\n              currentUser={currentUser}\n              onCreateRequest={handleCreateRequest}\n              onStatusChange={handleTicketStatusChange}\n            />\n          } />\n          <Route \n            path=\"tickets\"\n            element={\n              <MyTickets\n                tickets={tickets}\n                currentUser={currentUser}\n              />\n            }\n          />\n          <Route \n            path=\"tickets/create\" \n            element={\n              <RouteWrapper \n                component=\"create\"\n                currentUser={currentUser}\n                onCreateRequest={handleCreateRequest}\n                onSubmit={handleTicketSubmit}\n              />\n            } \n          />\n          <Route \n            path=\"/my-tickets\" \n            element={\n              <MyTickets \n                tickets={tickets} \n                currentUser={currentUser}\n              />\n            } \n          />\n          <Route \n            path=\"/tickets/:id\" \n            element={\n              <TicketDetail \n                tickets={tickets} \n                currentUser={currentUser} \n                onUpdate={handleUpdateTicket} \n              />\n            } \n          />\n          <Route \n            path=\"/admin/requests\" \n            element={\n              <ProtectedRoute currentUser={currentUser} requiredRole={['ADMIN', 'APPROVER']}>\n                <RequestManagement\n                  tickets={tickets}\n                  currentUser={currentUser}\n                  onUpdate={handleUpdateTicket}\n                />\n              </ProtectedRoute>\n            }\n          />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}