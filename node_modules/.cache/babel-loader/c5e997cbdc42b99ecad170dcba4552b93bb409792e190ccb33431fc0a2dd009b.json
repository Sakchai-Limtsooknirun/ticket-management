{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:5001/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'},withCredentials:true});// Add token to requests if it exists\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token&&config.headers){config.headers.Authorization=`Bearer ${token}`;}return config;});export const login=async(username,password)=>{const response=await api.post('/auth/login',{username,password});return response.data;};export const createTicket=async ticketData=>{const formData=new FormData();// Add ticket data\nformData.append('title',ticketData.title);formData.append('description',ticketData.description);formData.append('requesterId',ticketData.requesterId);formData.append('department',ticketData.department);formData.append('chemicalConfig',JSON.stringify(ticketData.chemicalConfig));// Add files if they exist\nif(ticketData.attachments&&ticketData.attachments instanceof FileList){Array.from(ticketData.attachments).forEach(file=>{formData.append('files',file);});}const response=await api.post('/tickets',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;};export const getTickets=async()=>{const response=await api.get('/tickets');return response.data;};export const updateTicketStatus=async(ticketId,status)=>{const response=await api.patch(`/tickets/${ticketId}/status`,{status});return response.data;};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","login","username","password","response","post","data","createTicket","ticketData","formData","FormData","append","title","description","requesterId","department","JSON","stringify","chemicalConfig","attachments","FileList","Array","from","forEach","file","getTickets","get","updateTicketStatus","ticketId","status","patch"],"sources":["/Users/a667227/Desktop/Work/ticket-management/src/services/api.ts"],"sourcesContent":["import axios, { InternalAxiosRequestConfig } from 'axios';\nimport { Ticket } from '../types/system';\n\nconst API_BASE_URL = 'http://localhost:5001/api';\n\nexport interface LoginResponse {\n  token: string;\n  user: {\n    id: string;\n    username: string;\n    fullName: string;\n    role: string;\n    department: string;\n  };\n}\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use((config: InternalAxiosRequestConfig) => {\n  const token = localStorage.getItem('token');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const login = async (username: string, password: string): Promise<LoginResponse> => {\n  const response = await api.post<LoginResponse>('/auth/login', { username, password });\n  return response.data;\n};\n\nexport const createTicket = async (ticketData: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'>): Promise<Ticket> => {\n  const formData = new FormData();\n  \n  // Add ticket data\n  formData.append('title', ticketData.title);\n  formData.append('description', ticketData.description);\n  formData.append('requesterId', ticketData.requesterId);\n  formData.append('department', ticketData.department);\n  formData.append('chemicalConfig', JSON.stringify(ticketData.chemicalConfig));\n  \n  // Add files if they exist\n  if (ticketData.attachments && ticketData.attachments instanceof FileList) {\n    Array.from(ticketData.attachments).forEach(file => {\n      formData.append('files', file);\n    });\n  }\n\n  const response = await api.post<Ticket>('/tickets', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n  return response.data;\n};\n\nexport const getTickets = async (): Promise<Ticket[]> => {\n  const response = await api.get<Ticket[]>('/tickets');\n  return response.data;\n};\n\nexport const updateTicketStatus = async (ticketId: string, status: string): Promise<Ticket> => {\n  const response = await api.patch<Ticket>(`/tickets/${ticketId}/status`, { status });\n  return response.data;\n};\n\nexport default api; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAsC,OAAO,CAGzD,KAAM,CAAAC,YAAY,CAAG,2BAA2B,CAahD,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,eAAe,CAAE,IACnB,CAAC,CAAC,CAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAkC,EAAK,CACnE,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,EAAID,MAAM,CAACL,OAAO,CAAE,CAC3BK,MAAM,CAACL,OAAO,CAACS,aAAa,CAAG,UAAUH,KAAK,EAAE,CAClD,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAK,KAAK,CAAG,KAAAA,CAAOC,QAAgB,CAAEC,QAAgB,GAA6B,CACzF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACiB,IAAI,CAAgB,aAAa,CAAE,CAAEH,QAAQ,CAAEC,QAAS,CAAC,CAAC,CACrF,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,UAAqE,EAAsB,CAC5H,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAE/B;AACAD,QAAQ,CAACE,MAAM,CAAC,OAAO,CAAEH,UAAU,CAACI,KAAK,CAAC,CAC1CH,QAAQ,CAACE,MAAM,CAAC,aAAa,CAAEH,UAAU,CAACK,WAAW,CAAC,CACtDJ,QAAQ,CAACE,MAAM,CAAC,aAAa,CAAEH,UAAU,CAACM,WAAW,CAAC,CACtDL,QAAQ,CAACE,MAAM,CAAC,YAAY,CAAEH,UAAU,CAACO,UAAU,CAAC,CACpDN,QAAQ,CAACE,MAAM,CAAC,gBAAgB,CAAEK,IAAI,CAACC,SAAS,CAACT,UAAU,CAACU,cAAc,CAAC,CAAC,CAE5E;AACA,GAAIV,UAAU,CAACW,WAAW,EAAIX,UAAU,CAACW,WAAW,WAAY,CAAAC,QAAQ,CAAE,CACxEC,KAAK,CAACC,IAAI,CAACd,UAAU,CAACW,WAAW,CAAC,CAACI,OAAO,CAACC,IAAI,EAAI,CACjDf,QAAQ,CAACE,MAAM,CAAC,OAAO,CAAEa,IAAI,CAAC,CAChC,CAAC,CAAC,CACJ,CAEA,KAAM,CAAApB,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACiB,IAAI,CAAS,UAAU,CAAEI,QAAQ,CAAE,CAC5DlB,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACF,MAAO,CAAAa,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAmB,UAAU,CAAG,KAAAA,CAAA,GAA+B,CACvD,KAAM,CAAArB,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAACsC,GAAG,CAAW,UAAU,CAAC,CACpD,MAAO,CAAAtB,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,MAAO,MAAM,CAAAqB,kBAAkB,CAAG,KAAAA,CAAOC,QAAgB,CAAEC,MAAc,GAAsB,CAC7F,KAAM,CAAAzB,QAAQ,CAAG,KAAM,CAAAhB,GAAG,CAAC0C,KAAK,CAAS,YAAYF,QAAQ,SAAS,CAAE,CAAEC,MAAO,CAAC,CAAC,CACnF,MAAO,CAAAzB,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED,cAAe,CAAAlB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}