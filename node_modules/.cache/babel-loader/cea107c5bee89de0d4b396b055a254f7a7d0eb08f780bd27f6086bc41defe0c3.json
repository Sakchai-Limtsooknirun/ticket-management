{"ast":null,"code":"var _jsxFileName = \"/Users/a667227/Desktop/Work/web2-announcement/src/App.tsx\",\n  _s3 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout';\nimport Home from './components/Home';\nimport TicketCreation from './components/tickets/TicketCreation';\nimport Login from './components/Login';\nimport { createTicket, getTickets, updateTicketStatus } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const [tickets, setTickets] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (token && savedUser) {\n      setIsAuthenticated(true);\n      setCurrentUser(JSON.parse(savedUser));\n      // Fetch tickets when authenticated\n      fetchTickets();\n    }\n  }, []);\n  const fetchTickets = async () => {\n    try {\n      const fetchedTickets = await getTickets();\n      setTickets(fetchedTickets);\n    } catch (error) {\n      console.error('Error fetching tickets:', error);\n    }\n  };\n  const handleLoginSuccess = (token, user) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setTickets([]);\n  };\n  const handleCreateRequest = navigate => {\n    navigate('/tickets/create');\n  };\n  const handleTicketSubmit = async (ticketData, navigate) => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      navigate('/');\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n  const handleTicketStatusChange = async (ticketId, newStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          currentUser: currentUser,\n          onLogout: handleLogout,\n          onCreateRequest: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            tickets: tickets,\n            currentUser: currentUser,\n            onCreateRequest: _s(() => {\n              _s();\n              return handleCreateRequest(useNavigate());\n            }, \"7z+bV9xHBQ1A1bt6m/1oQLk0tZA=\", false, function () {\n              return [useNavigate];\n            }),\n            onStatusChange: handleTicketStatusChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"tickets/create\",\n          element: /*#__PURE__*/_jsxDEV(TicketCreation, {\n            currentUser: currentUser,\n            onSubmit: _s2(data => {\n              _s2();\n              return handleTicketSubmit(data, useNavigate());\n            }, \"7z+bV9xHBQ1A1bt6m/1oQLk0tZA=\", false, function () {\n              return [useNavigate];\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s3(App, \"ZQmta9wSj6ro8Y7WkzeO5hYSXCk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Routes","Route","Navigate","useNavigate","Layout","Home","TicketCreation","Login","createTicket","getTickets","updateTicketStatus","jsxDEV","_jsxDEV","App","_s3","_s","$RefreshSig$","_s2","tickets","setTickets","isAuthenticated","setIsAuthenticated","currentUser","setCurrentUser","token","localStorage","getItem","savedUser","JSON","parse","fetchTickets","fetchedTickets","error","console","handleLoginSuccess","user","handleLogout","removeItem","handleCreateRequest","navigate","handleTicketSubmit","ticketData","alert","handleTicketStatusChange","ticketId","newStatus","onLoginSuccess","fileName","_jsxFileName","lineNumber","columnNumber","children","path","element","onLogout","onCreateRequest","index","onStatusChange","onSubmit","data","to","replace","_c","$RefreshReg$"],"sources":["/Users/a667227/Desktop/Work/web2-announcement/src/App.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout';\nimport Home from './components/Home';\nimport TicketCreation from './components/tickets/TicketCreation';\nimport Login from './components/Login';\nimport { User, Ticket, TicketStatus } from './types/system';\nimport { createTicket, getTickets, updateTicketStatus } from './services/api';\n\nconst App: FC = () => {\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (token && savedUser) {\n      setIsAuthenticated(true);\n      setCurrentUser(JSON.parse(savedUser));\n      // Fetch tickets when authenticated\n      fetchTickets();\n    }\n  }, []);\n\n  const fetchTickets = async () => {\n    try {\n      const fetchedTickets = await getTickets();\n      setTickets(fetchedTickets);\n    } catch (error) {\n      console.error('Error fetching tickets:', error);\n    }\n  };\n\n  const handleLoginSuccess = (token: string, user: User) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setTickets([]);\n  };\n\n  const handleCreateRequest = (navigate: (path: string) => void) => {\n    navigate('/tickets/create');\n  };\n\n  const handleTicketSubmit = async (ticketData: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'>, navigate: (path: string) => void) => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      navigate('/');\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n\n  const handleTicketStatusChange = async (ticketId: string, newStatus: TicketStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n\n  if (!isAuthenticated) {\n    return <Login onLoginSuccess={handleLoginSuccess} />;\n  }\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route \n          path=\"/\" \n          element={\n            <Layout \n              currentUser={currentUser!}\n              onLogout={handleLogout}\n              onCreateRequest={() => {}}\n            />\n          }\n        >\n          <Route index element={\n            <Home \n              tickets={tickets}\n              currentUser={currentUser!}\n              onCreateRequest={() => handleCreateRequest(useNavigate())}\n              onStatusChange={handleTicketStatusChange}\n            />\n          } />\n          <Route \n            path=\"tickets/create\" \n            element={\n              <TicketCreation \n                currentUser={currentUser!}\n                onSubmit={(data) => handleTicketSubmit(data, useNavigate())}\n              />\n            } \n          />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}