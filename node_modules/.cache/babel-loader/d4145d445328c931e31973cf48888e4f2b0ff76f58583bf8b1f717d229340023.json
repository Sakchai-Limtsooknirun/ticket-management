{"ast":null,"code":"var _jsxFileName = \"/Users/a667227/Desktop/Work/web2-announcement/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout';\nimport RouteWrapper from './components/RouteWrapper';\nimport Login from './components/Login';\nimport { createTicket, getTickets, updateTicketStatus } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tickets, setTickets] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (token && savedUser) {\n      setIsAuthenticated(true);\n      setCurrentUser(JSON.parse(savedUser));\n      // Fetch tickets when authenticated\n      fetchTickets();\n    }\n  }, []);\n  const fetchTickets = async () => {\n    try {\n      const fetchedTickets = await getTickets();\n      setTickets(fetchedTickets);\n    } catch (error) {\n      console.error('Error fetching tickets:', error);\n    }\n  };\n  const handleLoginSuccess = (token, user) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setTickets([]);\n  };\n  const handleCreateRequest = navigate => {\n    navigate('/tickets/create');\n  };\n  const handleTicketSubmit = async (ticketData, navigate) => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      navigate('/');\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n  const handleTicketStatusChange = async (ticketId, newStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          currentUser: currentUser,\n          onLogout: handleLogout,\n          onCreateRequest: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(RouteWrapper, {\n            component: \"home\",\n            tickets: tickets,\n            currentUser: currentUser,\n            onCreateRequest: handleCreateRequest,\n            onStatusChange: handleTicketStatusChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"tickets/create\",\n          element: /*#__PURE__*/_jsxDEV(RouteWrapper, {\n            component: \"create\",\n            currentUser: currentUser,\n            onCreateRequest: handleCreateRequest,\n            onSubmit: handleTicketSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZQmta9wSj6ro8Y7WkzeO5hYSXCk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Routes","Route","Navigate","Layout","RouteWrapper","Login","createTicket","getTickets","updateTicketStatus","jsxDEV","_jsxDEV","App","_s","tickets","setTickets","isAuthenticated","setIsAuthenticated","currentUser","setCurrentUser","token","localStorage","getItem","savedUser","JSON","parse","fetchTickets","fetchedTickets","error","console","handleLoginSuccess","user","handleLogout","removeItem","handleCreateRequest","navigate","handleTicketSubmit","ticketData","alert","handleTicketStatusChange","ticketId","newStatus","onLoginSuccess","fileName","_jsxFileName","lineNumber","columnNumber","children","path","element","onLogout","onCreateRequest","index","component","onStatusChange","onSubmit","to","replace","_c","$RefreshReg$"],"sources":["/Users/a667227/Desktop/Work/web2-announcement/src/App.tsx"],"sourcesContent":["import { FC, useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\nimport './App.css';\nimport Layout from './components/Layout';\nimport RouteWrapper from './components/RouteWrapper';\nimport Login from './components/Login';\nimport { User, Ticket, TicketStatus } from './types/system';\nimport { createTicket, getTickets, updateTicketStatus } from './services/api';\n\nconst App: FC = () => {\n  const [tickets, setTickets] = useState<Ticket[]>([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    // Check for existing auth token and user data\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (token && savedUser) {\n      setIsAuthenticated(true);\n      setCurrentUser(JSON.parse(savedUser));\n      // Fetch tickets when authenticated\n      fetchTickets();\n    }\n  }, []);\n\n  const fetchTickets = async () => {\n    try {\n      const fetchedTickets = await getTickets();\n      setTickets(fetchedTickets);\n    } catch (error) {\n      console.error('Error fetching tickets:', error);\n    }\n  };\n\n  const handleLoginSuccess = (token: string, user: User) => {\n    setIsAuthenticated(true);\n    setCurrentUser(user);\n    // Fetch tickets after successful login\n    fetchTickets();\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setIsAuthenticated(false);\n    setCurrentUser(null);\n    setTickets([]);\n  };\n\n  const handleCreateRequest = (navigate: (path: string) => void) => {\n    navigate('/tickets/create');\n  };\n\n  const handleTicketSubmit = async (ticketData: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'>, navigate: (path: string) => void) => {\n    try {\n      await createTicket(ticketData);\n      // Fetch updated tickets list\n      await fetchTickets();\n      navigate('/');\n      alert('Ticket created successfully!');\n    } catch (error) {\n      console.error('Error creating ticket:', error);\n      alert('Failed to create ticket. Please try again.');\n    }\n  };\n\n  const handleTicketStatusChange = async (ticketId: string, newStatus: TicketStatus) => {\n    try {\n      await updateTicketStatus(ticketId, newStatus);\n      // Fetch updated tickets list\n      await fetchTickets();\n    } catch (error) {\n      console.error('Error updating ticket status:', error);\n      alert('Failed to update ticket status. Please try again.');\n    }\n  };\n\n  if (!isAuthenticated) {\n    return <Login onLoginSuccess={handleLoginSuccess} />;\n  }\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route \n          path=\"/\" \n          element={\n            <Layout \n              currentUser={currentUser!}\n              onLogout={handleLogout}\n              onCreateRequest={() => {}}\n            />\n          }\n        >\n          <Route index element={\n            <RouteWrapper \n              component=\"home\"\n              tickets={tickets}\n              currentUser={currentUser!}\n              onCreateRequest={handleCreateRequest}\n              onStatusChange={handleTicketStatusChange}\n            />\n          } />\n          <Route \n            path=\"tickets/create\" \n            element={\n              <RouteWrapper \n                component=\"create\"\n                currentUser={currentUser!}\n                onCreateRequest={handleCreateRequest}\n                onSubmit={handleTicketSubmit}\n              />\n            } \n          />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}