{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,currentUser,requiredRole}=_ref;// Check if required role is a string or array of strings\nif(Array.isArray(requiredRole)){// Allow access if user role is included in the required roles array\nif(!requiredRole.map(role=>role.toUpperCase()).includes(currentUser.role.toUpperCase())){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}}else{// Check against single role\nif(currentUser.role.toUpperCase()!==requiredRole.toUpperCase()){return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}}return/*#__PURE__*/_jsx(_Fragment,{children:children});};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","jsx","_jsx","Fragment","_Fragment","ProtectedRoute","_ref","children","currentUser","requiredRole","Array","isArray","map","role","toUpperCase","includes","to","replace"],"sources":["/Users/s89539/Desktop/ticket-management/src/components/ProtectedRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { User } from '../types/system';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  currentUser: User;\n  requiredRole: string | string[];\n}\n\nconst ProtectedRoute: React.FC<ProtectedRouteProps> = ({ \n  children, \n  currentUser, \n  requiredRole \n}) => {\n  // Check if required role is a string or array of strings\n  if (Array.isArray(requiredRole)) {\n    // Allow access if user role is included in the required roles array\n    if (!requiredRole.map(role => role.toUpperCase()).includes(currentUser.role.toUpperCase())) {\n      return <Navigate to=\"/\" replace />;\n    }\n  } else {\n    // Check against single role\n    if (currentUser.role.toUpperCase() !== requiredRole.toUpperCase()) {\n      return <Navigate to=\"/\" replace />;\n    }\n  }\n\n  return <>{children}</>;\n};\n\nexport default ProtectedRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAS5C,KAAM,CAAAC,cAA6C,CAAGC,IAAA,EAIhD,IAJiD,CACrDC,QAAQ,CACRC,WAAW,CACXC,YACF,CAAC,CAAAH,IAAA,CACC;AACA,GAAII,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,CAAE,CAC/B;AACA,GAAI,CAACA,YAAY,CAACG,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACP,WAAW,CAACK,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC,CAAE,CAC1F,mBAAOZ,IAAA,CAACF,QAAQ,EAACgB,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACpC,CACF,CAAC,IAAM,CACL;AACA,GAAIT,WAAW,CAACK,IAAI,CAACC,WAAW,CAAC,CAAC,GAAKL,YAAY,CAACK,WAAW,CAAC,CAAC,CAAE,CACjE,mBAAOZ,IAAA,CAACF,QAAQ,EAACgB,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACpC,CACF,CAEA,mBAAOf,IAAA,CAAAE,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}