{"ast":null,"code":"var _jsxFileName = \"/Users/a667227/Desktop/Work/ticket-management/src/components/TaskBoard.tsx\";\nimport '../styles/TaskBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskBoard = ({\n  tickets,\n  onStatusChange,\n  currentUser\n}) => {\n  const columns = ['DRAFT', 'PENDING', 'APPROVED', 'REJECTED'];\n  const canChangeStatus = ticket => {\n    if (currentUser.role === 'ADMIN') return true;\n    if (currentUser.role === 'APPROVER' && ticket.status === 'PENDING') return true;\n    if (currentUser.role === 'REQUESTER' && ticket.requesterId === currentUser.id && ticket.status === 'DRAFT') return true;\n    return false;\n  };\n  const getNextStatus = currentStatus => {\n    switch (currentStatus) {\n      case 'DRAFT':\n        return 'PENDING';\n      case 'PENDING':\n        return currentUser.role === 'APPROVER' ? 'APPROVED' : null;\n      default:\n        return null;\n    }\n  };\n  const getRequesterName = ticket => {\n    var _ticket$requester;\n    return ((_ticket$requester = ticket.requester) === null || _ticket$requester === void 0 ? void 0 : _ticket$requester.fullName) || 'Unknown User';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-board\",\n    children: columns.map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"column-title\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: tickets.filter(ticket => ticket.status === status).map(ticket => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-priority\",\n            \"data-priority\": ticket.department\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: ticket.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: ticket.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"assignee\",\n              children: getRequesterName(ticket)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"due-date\",\n              children: ticket.requestDate ? new Date(ticket.requestDate).toLocaleDateString() : 'No date'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), canChangeStatus(ticket) && getNextStatus(ticket.status) && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"status-change-btn\",\n            onClick: () => {\n              const nextStatus = getNextStatus(ticket.status);\n              if (nextStatus) {\n                onStatusChange(ticket._id, nextStatus);\n              }\n            },\n            children: [\"Move to \", getNextStatus(ticket.status)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, ticket._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-task-btn\",\n        children: \"+ Add Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, status, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","TaskBoard","tickets","onStatusChange","currentUser","columns","canChangeStatus","ticket","role","status","requesterId","id","getNextStatus","currentStatus","getRequesterName","_ticket$requester","requester","fullName","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","filter","department","title","description","requestDate","Date","toLocaleDateString","onClick","nextStatus","_id","_c","$RefreshReg$"],"sources":["/Users/a667227/Desktop/Work/ticket-management/src/components/TaskBoard.tsx"],"sourcesContent":["import { FC } from 'react';\nimport '../styles/TaskBoard.css';\nimport { Ticket, TicketStatus, User } from '../types/system';\n\ninterface TaskBoardProps {\n  tickets: Ticket[];\n  onStatusChange: (ticketId: string, newStatus: TicketStatus) => void;\n  currentUser: User;\n}\n\nconst TaskBoard: FC<TaskBoardProps> = ({ tickets, onStatusChange, currentUser }) => {\n  const columns: TicketStatus[] = ['DRAFT', 'PENDING', 'APPROVED', 'REJECTED'];\n\n  const canChangeStatus = (ticket: Ticket): boolean => {\n    if (currentUser.role === 'ADMIN') return true;\n    if (currentUser.role === 'APPROVER' && ticket.status === 'PENDING') return true;\n    if (currentUser.role === 'REQUESTER' && ticket.requesterId === currentUser.id && ticket.status === 'DRAFT') return true;\n    return false;\n  };\n\n  const getNextStatus = (currentStatus: TicketStatus): TicketStatus | null => {\n    switch (currentStatus) {\n      case 'DRAFT': return 'PENDING';\n      case 'PENDING': return currentUser.role === 'APPROVER' ? 'APPROVED' : null;\n      default: return null;\n    }\n  };\n\n  const getRequesterName = (ticket: Ticket): string => {\n    return ticket.requester?.fullName || 'Unknown User';\n  };\n\n  return (\n    <div className=\"task-board\">\n      {columns.map((status) => (\n        <div key={status} className=\"task-column\">\n          <h3 className=\"column-title\">{status}</h3>\n          <div className=\"task-list\">\n            {tickets\n              .filter((ticket) => ticket.status === status)\n              .map((ticket) => (\n                <div key={ticket._id} className=\"task-card\">\n                  <div className=\"task-priority\" data-priority={ticket.department}></div>\n                  <h4>{ticket.title}</h4>\n                  <p>{ticket.description}</p>\n                  <div className=\"task-meta\">\n                    <span className=\"assignee\">{getRequesterName(ticket)}</span>\n                    <span className=\"due-date\">\n                      {ticket.requestDate ? new Date(ticket.requestDate).toLocaleDateString() : 'No date'}\n                    </span>\n                  </div>\n                  {canChangeStatus(ticket) && getNextStatus(ticket.status) && (\n                    <button \n                      className=\"status-change-btn\"\n                      onClick={() => {\n                        const nextStatus = getNextStatus(ticket.status);\n                        if (nextStatus) {\n                          onStatusChange(ticket._id, nextStatus);\n                        }\n                      }}\n                    >\n                      Move to {getNextStatus(ticket.status)}\n                    </button>\n                  )}\n                </div>\n              ))}\n          </div>\n          <button className=\"add-task-btn\">+ Add Ticket</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TaskBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}