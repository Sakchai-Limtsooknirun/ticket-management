{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const login = async (username, password) => {\n  const response = await api.post('/auth/login', {\n    username,\n    password\n  });\n  return response.data;\n};\nexport const createTicket = async formData => {\n  const response = await api.post('/tickets', formData);\n  return response.data;\n};\nexport const getTickets = async () => {\n  const response = await api.get('/tickets');\n  return response.data;\n};\nexport const updateTicketStatus = async (ticketId, status) => {\n  const response = await api.patch(`/tickets/${ticketId}/status`, {\n    status\n  });\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","login","username","password","response","post","data","createTicket","formData","getTickets","get","updateTicketStatus","ticketId","status","patch"],"sources":["/Users/a667227/Desktop/Work/web2-announcement/src/services/api.ts"],"sourcesContent":["import axios, { InternalAxiosRequestConfig } from 'axios';\n\nconst API_BASE_URL = 'http://localhost:5000/api';\n\nexport interface LoginResponse {\n  token: string;\n  user: {\n    id: string;\n    username: string;\n    fullName: string;\n    role: string;\n    department: string;\n  };\n}\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add token to requests if it exists\napi.interceptors.request.use((config: InternalAxiosRequestConfig) => {\n  const token = localStorage.getItem('token');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const login = async (username: string, password: string): Promise<LoginResponse> => {\n  const response = await api.post<LoginResponse>('/auth/login', { username, password });\n  return response.data;\n};\n\nexport const createTicket = async (formData: FormData) => {\n  const response = await api.post('/tickets', formData);\n  return response.data;\n};\n\nexport const getTickets = async () => {\n  const response = await api.get('/tickets');\n  return response.data;\n};\n\nexport const updateTicketStatus = async (ticketId: string, status: string) => {\n  const response = await api.patch(`/tickets/${ticketId}/status`, { status });\n  return response.data;\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAsC,OAAO;AAEzD,MAAMC,YAAY,GAAG,2BAA2B;AAahD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAkC,IAAK;EACnE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,IAAID,MAAM,CAACJ,OAAO,EAAE;IAC3BI,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMK,KAAK,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,KAA6B;EACzF,MAAMC,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAgB,aAAa,EAAE;IAAEH,QAAQ;IAAEC;EAAS,CAAC,CAAC;EACrF,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAkB,IAAK;EACxD,MAAMJ,QAAQ,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,UAAU,EAAEG,QAAQ,CAAC;EACrD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAML,QAAQ,GAAG,MAAMf,GAAG,CAACqB,GAAG,CAAC,UAAU,CAAC;EAC1C,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMK,kBAAkB,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,MAAc,KAAK;EAC5E,MAAMT,QAAQ,GAAG,MAAMf,GAAG,CAACyB,KAAK,CAAC,YAAYF,QAAQ,SAAS,EAAE;IAAEC;EAAO,CAAC,CAAC;EAC3E,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}