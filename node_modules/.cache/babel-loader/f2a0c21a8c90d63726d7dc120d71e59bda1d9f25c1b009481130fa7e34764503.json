{"ast":null,"code":"import React from'react';import{useNavigate}from'react-router-dom';import Home from'./Home';import TicketCreation from'./tickets/TicketCreation';import{jsx as _jsx}from\"react/jsx-runtime\";const RouteWrapper=_ref=>{let{component,tickets=[],currentUser,onCreateRequest,onStatusChange=()=>{},onSubmit=async()=>{}}=_ref;const navigate=useNavigate();if(component==='home'){return/*#__PURE__*/_jsx(Home,{tickets:tickets,currentUser:currentUser,onCreateRequest:()=>onCreateRequest(navigate),onStatusChange:onStatusChange});}if(component==='create'){return/*#__PURE__*/_jsx(TicketCreation,{currentUser:currentUser,onSubmit:async data=>await onSubmit(data,navigate)});}return null;};export default RouteWrapper;","map":{"version":3,"names":["React","useNavigate","Home","TicketCreation","jsx","_jsx","RouteWrapper","_ref","component","tickets","currentUser","onCreateRequest","onStatusChange","onSubmit","navigate","data"],"sources":["/Users/s89539/Desktop/ticket-management/src/components/RouteWrapper.tsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Home from './Home';\nimport TicketCreation from './tickets/TicketCreation';\nimport { User, Ticket, TicketStatus } from '../types/system';\n\ninterface RouteWrapperProps {\n  component: 'home' | 'create';\n  tickets?: Ticket[];\n  currentUser: User;\n  onCreateRequest: (navigate: (path: string) => void) => void;\n  onStatusChange?: (ticketId: string, newStatus: TicketStatus) => void;\n  onSubmit?: (data: Omit<Ticket, 'id' | 'status' | 'createdAt' | 'updatedAt'>, navigate: (path: string) => void) => Promise<void>;\n}\n\nconst RouteWrapper: React.FC<RouteWrapperProps> = ({ \n  component, \n  tickets = [], \n  currentUser, \n  onCreateRequest, \n  onStatusChange = () => {}, \n  onSubmit = async () => {} \n}) => {\n  const navigate = useNavigate();\n\n  if (component === 'home') {\n    return (\n      <Home \n        tickets={tickets}\n        currentUser={currentUser}\n        onCreateRequest={() => onCreateRequest(navigate)}\n        onStatusChange={onStatusChange}\n      />\n    );\n  }\n\n  if (component === 'create') {\n    return (\n      <TicketCreation \n        currentUser={currentUser}\n        onSubmit={async (data:any) => await onSubmit(data, navigate)}\n      />\n    );\n  }\n\n  return null;\n};\n\nexport default RouteWrapper; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,IAAI,KAAM,QAAQ,CACzB,MAAO,CAAAC,cAAc,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAYtD,KAAM,CAAAC,YAAyC,CAAGC,IAAA,EAO5C,IAP6C,CACjDC,SAAS,CACTC,OAAO,CAAG,EAAE,CACZC,WAAW,CACXC,eAAe,CACfC,cAAc,CAAGA,CAAA,GAAM,CAAC,CAAC,CACzBC,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAAC,CAC1B,CAAC,CAAAN,IAAA,CACC,KAAM,CAAAO,QAAQ,CAAGb,WAAW,CAAC,CAAC,CAE9B,GAAIO,SAAS,GAAK,MAAM,CAAE,CACxB,mBACEH,IAAA,CAACH,IAAI,EACHO,OAAO,CAAEA,OAAQ,CACjBC,WAAW,CAAEA,WAAY,CACzBC,eAAe,CAAEA,CAAA,GAAMA,eAAe,CAACG,QAAQ,CAAE,CACjDF,cAAc,CAAEA,cAAe,CAChC,CAAC,CAEN,CAEA,GAAIJ,SAAS,GAAK,QAAQ,CAAE,CAC1B,mBACEH,IAAA,CAACF,cAAc,EACbO,WAAW,CAAEA,WAAY,CACzBG,QAAQ,CAAE,KAAO,CAAAE,IAAQ,EAAK,KAAM,CAAAF,QAAQ,CAACE,IAAI,CAAED,QAAQ,CAAE,CAC9D,CAAC,CAEN,CAEA,MAAO,KAAI,CACb,CAAC,CAED,cAAe,CAAAR,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}