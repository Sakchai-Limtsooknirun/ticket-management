{"ast":null,"code":"import{useState,useEffect}from'react';import'../styles/TaskBoard.css';import{DragDropContext,Droppable,Draggable}from'react-beautiful-dnd';import Toast from'./Toast';import{useNavigate}from'react-router-dom';import{getAllTicketsRaw}from'../services/api';// Import the debug function\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";// Updated StrictModeDroppable component to fix React 18 warnings\n// This is a compatibility wrapper for react-beautiful-dnd in React 18 with StrictMode\nconst StrictModeDroppable=_ref=>{let{children,...props}=_ref;const[enabled,setEnabled]=useState(false);useEffect(()=>{// Wait until after client-side hydration to enable\nconst animation=requestAnimationFrame(()=>{setEnabled(true);});return()=>{cancelAnimationFrame(animation);};},[]);if(!enabled){return null;}return/*#__PURE__*/_jsx(Droppable,{...props,children:children});};const TaskBoard=_ref2=>{let{tickets,onStatusChange,currentUser}=_ref2;const columns=['DRAFT','PENDING','APPROVED','REJECTED'];const[isDragging,setIsDragging]=useState(false);const[toast,setToast]=useState({message:'',visible:false});const navigate=useNavigate();// State for date filter\nconst[dateRange,setDateRange]=useState(()=>{const end=new Date();const start=new Date();start.setDate(start.getDate()-30);// Default to show last 30 days of tickets\nreturn{startDate:start,endDate:end};});// Adding debug state\nconst[debugInfo,setDebugInfo]=useState('');// Log received tickets for debugging\nuseEffect(()=>{console.log('TaskBoard received tickets:',tickets);console.log('Current date range:',{startDate:dateRange.startDate.toISOString(),endDate:dateRange.endDate.toISOString()});},[tickets,dateRange]);// State for pagination per column\nconst[pagination,setPagination]=useState({'DRAFT':{page:1,limit:20},'PENDING':{page:1,limit:20},'APPROVED':{page:1,limit:20},'REJECTED':{page:1,limit:20}});// Filter tickets based on user role\nconst filteredTickets=tickets.filter(ticket=>{// Debug ticket date\nconst ticketDate=new Date(ticket.requestDate||'');console.log('Filtering ticket:',{id:ticket._id,title:ticket.title,status:ticket.status,date:ticket.requestDate,ticketDate:ticketDate.toISOString(),inRange:ticketDate>=dateRange.startDate&&ticketDate<=dateRange.endDate});// Date range filter\nif(ticketDate<dateRange.startDate||ticketDate>dateRange.endDate){return false;}// User role filter\nif(currentUser.role==='ADMIN')return true;if(currentUser.role==='APPROVER'){// Approvers can see all tickets in all statuses\nreturn true;}return ticket.requesterId===currentUser._id;});// Log filtered tickets for debugging\nuseEffect(()=>{console.log('Filtered tickets count:',filteredTickets.length);},[filteredTickets]);// Group tickets by status\nconst ticketsByStatus=columns.reduce((acc,status)=>{acc[status]=filteredTickets.filter(ticket=>ticket.status===status);return acc;},{});// Get visible tickets per column with pagination\nconst getVisibleTickets=status=>{const{page,limit}=pagination[status];const start=(page-1)*limit;const end=start+limit;return ticketsByStatus[status].slice(start,end);};// Handle page change for a column\nconst handlePageChange=(status,increment)=>{setPagination(prev=>{const columnPagination={...prev[status]};columnPagination.page+=increment;// Ensure page is within valid range\nconst maxPage=Math.ceil(ticketsByStatus[status].length/columnPagination.limit)||1;if(columnPagination.page<1)columnPagination.page=1;if(columnPagination.page>maxPage)columnPagination.page=maxPage;return{...prev,[status]:columnPagination};});};// Handle date filter changes\nconst handleDateFilterChange=(type,dateString)=>{// Parse the date, ensuring it's treated as UTC midnight to avoid timezone issues\nlet date=new Date(dateString);// If it's an end date, set it to the end of the day (23:59:59.999)\nif(type==='end'){date=new Date(date.getFullYear(),date.getMonth(),date.getDate(),23,59,59,999);}console.log('Date changed:',{type,dateString,parsedDate:date.toISOString()});setDateRange(prev=>{// Reset pagination whenever date filter changes\nObject.keys(pagination).forEach(status=>{pagination[status].page=1;});return{...prev,[type==='start'?'startDate':'endDate']:date};});};// Add a function to set the date range to \"all time\"\nconst setAllTimeRange=()=>{const startDate=new Date('2020-01-01');const endDate=new Date();endDate.setHours(23,59,59,999);// Set to end of current day\nconsole.log('Setting all time range:',{startDate:startDate.toISOString(),endDate:endDate.toISOString()});setDateRange({startDate,endDate});// Reset pagination\nObject.keys(pagination).forEach(status=>{pagination[status].page=1;});};// Check if the user can move the ticket from source to destination status\nconst canMoveTicket=(ticket,sourceStatus,destinationStatus)=>{const role=currentUser.role;// ADMIN can move tickets freely between any status\nif(role==='ADMIN')return true;// APPROVER can only move tickets forward in the workflow, but cannot move from DRAFT\nif(role==='APPROVER'){// Define workflow order for all status determinations\nconst workflowOrder={'DRAFT':0,'PENDING':1,'APPROVED':2,'REJECTED':2// APPROVED and REJECTED are at the same level\n};// Approvers can move their own tickets with some restrictions\nif(ticket.requesterId===currentUser._id){// Prevent moving backward from APPROVED or REJECTED to earlier statuses\nif((sourceStatus==='APPROVED'||sourceStatus==='REJECTED')&&(destinationStatus==='PENDING'||destinationStatus==='DRAFT')){return false;}return true;// Allow all other movements for own tickets\n}// For other people's tickets, check if the move is forward in the workflow\nreturn workflowOrder[destinationStatus]>workflowOrder[sourceStatus];}// REQUESTER can only move their own tickets from DRAFT to PENDING\nif(role==='REQUESTER'){if(ticket.requesterId===currentUser._id&&sourceStatus==='DRAFT'&&destinationStatus==='PENDING'){return true;}return false;}return false;};const getRequesterName=ticket=>{var _ticket$requester;return((_ticket$requester=ticket.requester)===null||_ticket$requester===void 0?void 0:_ticket$requester.fullName)||'Unknown User';};const handleDragEnd=result=>{setIsDragging(false);const{draggableId,source,destination}=result;// Drop outside any droppable area or same position\nif(!destination||source.droppableId===destination.droppableId&&source.index===destination.index){return;}// The draggableId is the ticket ID\nconst ticketId=draggableId;// Source and destination are the status columns\nconst sourceStatus=source.droppableId;const destinationStatus=destination.droppableId;const ticket=tickets.find(t=>t._id===ticketId);if(!ticket)return;// Check if the user has permission to move the ticket\nif(canMoveTicket(ticket,sourceStatus,destinationStatus)){onStatusChange(ticketId,destinationStatus);}else{// Show toast notification for permission error\nsetToast({message:`You don't have permission to move this ticket to ${destinationStatus} status`,visible:true});}};const handleDragStart=()=>{setIsDragging(true);};// Handle closing the toast\nconst handleCloseToast=()=>{setToast({...toast,visible:false});};const checkDragDisabled=(ticket,status)=>{// ADMIN can move any ticket\nif(currentUser.role==='ADMIN')return false;// APPROVER permissions\nif(currentUser.role==='APPROVER'){// Allow APPROVERs to drag their own tickets from any status\nif(ticket.requesterId===currentUser._id)return false;// APPROVERs cannot drag other people's tickets that are in DRAFT status\nreturn status==='DRAFT';}// REQUESTER can only move their own tickets from DRAFT to PENDING\nif(currentUser.role==='REQUESTER'){return!(ticket.requesterId===currentUser._id&&status==='DRAFT');}return true;};// Add a click handler to navigate to ticket detail\nconst handleTicketClick=ticketId=>{if(!isDragging){navigate(`/tickets/${ticketId}`);}};// Debug function to fetch tickets directly\nconst debugFetchTickets=async()=>{try{setDebugInfo('Fetching tickets directly...');const rawResponse=await getAllTicketsRaw();setDebugInfo(`Raw API response received. Check console for details.`);console.log('Raw tickets response:',rawResponse);}catch(error){setDebugInfo(`Error: ${(error===null||error===void 0?void 0:error.message)||'Unknown error'}`);console.error('Debug fetch error:',error);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[toast.visible&&/*#__PURE__*/_jsx(Toast,{message:toast.message,type:\"error\",onClose:handleCloseToast}),/*#__PURE__*/_jsxs(\"div\",{className:\"taskboard-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"date-filter\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"From:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:dateRange.startDate.toISOString().split('T')[0],onChange:e=>handleDateFilterChange('start',e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"To:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:dateRange.endDate.toISOString().split('T')[0],onChange:e=>handleDateFilterChange('end',e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{onClick:setAllTimeRange,style:{padding:'0.5rem 1rem',marginLeft:'1rem',backgroundColor:'#4caf50',color:'white',border:'none',borderRadius:'4px',cursor:'pointer'},children:\"All Time\"}),/*#__PURE__*/_jsx(\"button\",{onClick:debugFetchTickets,style:{padding:'0.5rem 1rem',marginLeft:'0.5rem',backgroundColor:'#ff9800',color:'white',border:'none',borderRadius:'4px',cursor:'pointer'},children:\"Debug API\"})]}),debugInfo&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'10px',padding:'8px',backgroundColor:'#f8f9fa',borderRadius:'4px',fontSize:'14px'},children:[\"Debug Info: \",debugInfo]})]}),tickets.length===0&&/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',backgroundColor:'#f8f9fa',borderRadius:'8px',textAlign:'center',margin:'20px 0'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"No Tickets Available\"}),/*#__PURE__*/_jsx(\"p\",{children:\"There are no tickets to display. This could be due to:\"}),/*#__PURE__*/_jsxs(\"ul\",{style:{textAlign:'left',display:'inline-block'},children:[/*#__PURE__*/_jsx(\"li\",{children:\"No tickets exist in the system\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Date filter excludes all tickets\"}),/*#__PURE__*/_jsx(\"li\",{children:\"API connection issues\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Authentication problems\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"Try changing the date range or use the \\\"All Time\\\" button.\"})]}),/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:handleDragEnd,onDragStart:handleDragStart,children:/*#__PURE__*/_jsx(\"div\",{className:\"task-board\",children:columns.map(status=>/*#__PURE__*/_jsxs(\"div\",{className:\"task-column\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"column-title\",children:[status,/*#__PURE__*/_jsxs(\"span\",{className:\"ticket-count\",children:[\"(\",ticketsByStatus[status].length,\")\"]})]}),/*#__PURE__*/_jsx(StrictModeDroppable,{droppableId:status,children:(provided,snapshot)=>/*#__PURE__*/_jsxs(\"div\",{ref:provided.innerRef,...provided.droppableProps,className:`task-list ${snapshot.isDraggingOver?'drop-allowed':''}`,children:[getVisibleTickets(status).map((ticket,index)=>{// Determine if this ticket can be dragged\nconst isDragDisabled=checkDragDisabled(ticket,status);return/*#__PURE__*/_jsx(Draggable,{draggableId:ticket._id,index:index,isDragDisabled:isDragDisabled,children:(provided,snapshot)=>/*#__PURE__*/_jsxs(\"div\",{ref:provided.innerRef,...provided.draggableProps,...provided.dragHandleProps,className:`task-card ${snapshot.isDragging?'is-dragging':''} ${isDragDisabled?'not-draggable':''}`,onClick:()=>handleTicketClick(ticket._id),children:[/*#__PURE__*/_jsx(\"div\",{className:\"task-priority\",\"data-priority\":ticket.department}),/*#__PURE__*/_jsx(\"h4\",{children:ticket.title}),/*#__PURE__*/_jsx(\"p\",{children:ticket.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-meta\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"assignee\",children:getRequesterName(ticket)}),/*#__PURE__*/_jsx(\"span\",{className:\"due-date\",children:ticket.requestDate?new Date(ticket.requestDate).toLocaleDateString():'No date'})]})]})},ticket._id);}),provided.placeholder,ticketsByStatus[status].length>pagination[status].limit&&/*#__PURE__*/_jsxs(\"div\",{className:\"column-pagination\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlePageChange(status,-1),disabled:pagination[status].page===1,className:\"pagination-btn\",children:\"\\xAB Prev\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"page-indicator\",children:[pagination[status].page,\" /\",Math.ceil(ticketsByStatus[status].length/pagination[status].limit)]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlePageChange(status,1),disabled:pagination[status].page>=Math.ceil(ticketsByStatus[status].length/pagination[status].limit),className:\"pagination-btn\",children:\"Next \\xBB\"})]})]})})]},status))})})]});};export default TaskBoard;","map":{"version":3,"names":["useState","useEffect","DragDropContext","Droppable","Draggable","Toast","useNavigate","getAllTicketsRaw","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StrictModeDroppable","_ref","children","props","enabled","setEnabled","animation","requestAnimationFrame","cancelAnimationFrame","TaskBoard","_ref2","tickets","onStatusChange","currentUser","columns","isDragging","setIsDragging","toast","setToast","message","visible","navigate","dateRange","setDateRange","end","Date","start","setDate","getDate","startDate","endDate","debugInfo","setDebugInfo","console","log","toISOString","pagination","setPagination","page","limit","filteredTickets","filter","ticket","ticketDate","requestDate","id","_id","title","status","date","inRange","role","requesterId","length","ticketsByStatus","reduce","acc","getVisibleTickets","slice","handlePageChange","increment","prev","columnPagination","maxPage","Math","ceil","handleDateFilterChange","type","dateString","getFullYear","getMonth","parsedDate","Object","keys","forEach","setAllTimeRange","setHours","canMoveTicket","sourceStatus","destinationStatus","workflowOrder","getRequesterName","_ticket$requester","requester","fullName","handleDragEnd","result","draggableId","source","destination","droppableId","index","ticketId","find","t","handleDragStart","handleCloseToast","checkDragDisabled","handleTicketClick","debugFetchTickets","rawResponse","error","onClose","className","value","split","onChange","e","target","onClick","style","padding","marginLeft","backgroundColor","color","border","borderRadius","cursor","marginTop","fontSize","textAlign","margin","display","onDragEnd","onDragStart","map","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","isDragDisabled","draggableProps","dragHandleProps","department","description","toLocaleDateString","placeholder","disabled"],"sources":["/Users/s89539/Desktop/ticket-management/src/components/TaskBoard.tsx"],"sourcesContent":["import { FC, useState, useEffect, ReactElement, useCallback } from 'react';\nimport '../styles/TaskBoard.css';\nimport { Ticket, TicketStatus, User } from '../types/system';\nimport { DragDropContext, Droppable, Draggable, DropResult, DroppableProps, DroppableProvided, DroppableStateSnapshot } from 'react-beautiful-dnd';\nimport Toast from './Toast';\nimport { useNavigate } from 'react-router-dom';\nimport { getAllTicketsRaw } from '../services/api'; // Import the debug function\n\ninterface TaskBoardProps {\n  tickets: Ticket[];\n  onStatusChange: (ticketId: string, newStatus: TicketStatus) => void;\n  currentUser: User;\n}\n\n// Updated StrictModeDroppable component to fix React 18 warnings\n// This is a compatibility wrapper for react-beautiful-dnd in React 18 with StrictMode\nconst StrictModeDroppable = ({ children, ...props }: DroppableProps & { children: (provided: DroppableProvided, snapshot: DroppableStateSnapshot) => ReactElement }) => {\n  const [enabled, setEnabled] = useState(false);\n  \n  useEffect(() => {\n    // Wait until after client-side hydration to enable\n    const animation = requestAnimationFrame(() => {\n      setEnabled(true);\n    });\n    \n    return () => {\n      cancelAnimationFrame(animation);\n    };\n  }, []);\n  \n  if (!enabled) {\n    return null;\n  }\n  \n  return <Droppable {...props}>{children}</Droppable>;\n};\n\nconst TaskBoard: FC<TaskBoardProps> = ({ tickets, onStatusChange, currentUser }) => {\n  const columns: TicketStatus[] = ['DRAFT', 'PENDING', 'APPROVED', 'REJECTED'];\n  const [isDragging, setIsDragging] = useState(false);\n  const [toast, setToast] = useState<{ message: string; visible: boolean }>({\n    message: '',\n    visible: false\n  });\n  const navigate = useNavigate();\n  \n  // State for date filter\n  const [dateRange, setDateRange] = useState(() => {\n    const end = new Date();\n    const start = new Date();\n    start.setDate(start.getDate() - 30); // Default to show last 30 days of tickets\n    return { startDate: start, endDate: end };\n  });\n  \n  // Adding debug state\n  const [debugInfo, setDebugInfo] = useState<string>('');\n  \n  // Log received tickets for debugging\n  useEffect(() => {\n    console.log('TaskBoard received tickets:', tickets);\n    console.log('Current date range:', { \n      startDate: dateRange.startDate.toISOString(), \n      endDate: dateRange.endDate.toISOString() \n    });\n  }, [tickets, dateRange]);\n  \n  // State for pagination per column\n  const [pagination, setPagination] = useState<{[key in TicketStatus]: {page: number, limit: number}}>({\n    'DRAFT': {page: 1, limit: 20},\n    'PENDING': {page: 1, limit: 20},\n    'APPROVED': {page: 1, limit: 20},\n    'REJECTED': {page: 1, limit: 20}\n  });\n  \n  // Filter tickets based on user role\n  const filteredTickets = tickets.filter(ticket => {\n    // Debug ticket date\n    const ticketDate = new Date(ticket.requestDate || '');\n    console.log('Filtering ticket:', { \n      id: ticket._id,\n      title: ticket.title,\n      status: ticket.status, \n      date: ticket.requestDate,\n      ticketDate: ticketDate.toISOString(),\n      inRange: ticketDate >= dateRange.startDate && ticketDate <= dateRange.endDate\n    });\n    \n    // Date range filter\n    if (ticketDate < dateRange.startDate || ticketDate > dateRange.endDate) {\n      return false;\n    }\n    \n    // User role filter\n    if (currentUser.role === 'ADMIN') return true;\n    if (currentUser.role === 'APPROVER') {\n      // Approvers can see all tickets in all statuses\n      return true;\n    }\n    return ticket.requesterId === currentUser._id;\n  });\n\n  // Log filtered tickets for debugging\n  useEffect(() => {\n    console.log('Filtered tickets count:', filteredTickets.length);\n  }, [filteredTickets]);\n  \n  // Group tickets by status\n  const ticketsByStatus = columns.reduce((acc, status) => {\n    acc[status] = filteredTickets.filter(ticket => ticket.status === status);\n    return acc;\n  }, {} as {[key in TicketStatus]: Ticket[]});\n  \n  // Get visible tickets per column with pagination\n  const getVisibleTickets = (status: TicketStatus) => {\n    const { page, limit } = pagination[status];\n    const start = (page - 1) * limit;\n    const end = start + limit;\n    return ticketsByStatus[status].slice(start, end);\n  };\n  \n  // Handle page change for a column\n  const handlePageChange = (status: TicketStatus, increment: number) => {\n    setPagination(prev => {\n      const columnPagination = {...prev[status]};\n      columnPagination.page += increment;\n      \n      // Ensure page is within valid range\n      const maxPage = Math.ceil(ticketsByStatus[status].length / columnPagination.limit) || 1;\n      if (columnPagination.page < 1) columnPagination.page = 1;\n      if (columnPagination.page > maxPage) columnPagination.page = maxPage;\n      \n      return {...prev, [status]: columnPagination};\n    });\n  };\n  \n  // Handle date filter changes\n  const handleDateFilterChange = (type: 'start' | 'end', dateString: string) => {\n    // Parse the date, ensuring it's treated as UTC midnight to avoid timezone issues\n    let date = new Date(dateString);\n    \n    // If it's an end date, set it to the end of the day (23:59:59.999)\n    if (type === 'end') {\n      date = new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59, 999);\n    }\n    \n    console.log('Date changed:', { type, dateString, parsedDate: date.toISOString() });\n    \n    setDateRange(prev => {\n      // Reset pagination whenever date filter changes\n      Object.keys(pagination).forEach(status => {\n        pagination[status as TicketStatus].page = 1;\n      });\n      \n      return {\n        ...prev,\n        [type === 'start' ? 'startDate' : 'endDate']: date\n      };\n    });\n  };\n\n  // Add a function to set the date range to \"all time\"\n  const setAllTimeRange = () => {\n    const startDate = new Date('2020-01-01');\n    const endDate = new Date();\n    endDate.setHours(23, 59, 59, 999); // Set to end of current day\n    \n    console.log('Setting all time range:', { \n      startDate: startDate.toISOString(), \n      endDate: endDate.toISOString() \n    });\n    \n    setDateRange({ startDate, endDate });\n    \n    // Reset pagination\n    Object.keys(pagination).forEach(status => {\n      pagination[status as TicketStatus].page = 1;\n    });\n  };\n\n  // Check if the user can move the ticket from source to destination status\n  const canMoveTicket = (\n    ticket: Ticket,\n    sourceStatus: TicketStatus,\n    destinationStatus: TicketStatus\n  ): boolean => {\n    const role = currentUser.role;\n    \n    // ADMIN can move tickets freely between any status\n    if (role === 'ADMIN') return true;\n    \n    // APPROVER can only move tickets forward in the workflow, but cannot move from DRAFT\n    if (role === 'APPROVER') {\n      // Define workflow order for all status determinations\n      const workflowOrder: { [key in TicketStatus]: number } = {\n        'DRAFT': 0,\n        'PENDING': 1,\n        'APPROVED': 2,\n        'REJECTED': 2  // APPROVED and REJECTED are at the same level\n      };\n      \n      // Approvers can move their own tickets with some restrictions\n      if (ticket.requesterId === currentUser._id) {\n        // Prevent moving backward from APPROVED or REJECTED to earlier statuses\n        if ((sourceStatus === 'APPROVED' || sourceStatus === 'REJECTED') && \n            (destinationStatus === 'PENDING' || destinationStatus === 'DRAFT')) {\n          return false;\n        }\n        return true; // Allow all other movements for own tickets\n      }\n      \n      // For other people's tickets, check if the move is forward in the workflow\n      return workflowOrder[destinationStatus] > workflowOrder[sourceStatus];\n    }\n    \n    // REQUESTER can only move their own tickets from DRAFT to PENDING\n    if (role === 'REQUESTER') {\n      if (ticket.requesterId === currentUser._id && sourceStatus === 'DRAFT' && destinationStatus === 'PENDING') {\n        return true;\n      }\n      return false;\n    }\n    \n    return false;\n  };\n\n  const getRequesterName = (ticket: Ticket): string => {\n    return ticket.requester?.fullName || 'Unknown User';\n  };\n\n  const handleDragEnd = (result: DropResult) => {\n    setIsDragging(false);\n    \n    const { draggableId, source, destination } = result;\n    \n    // Drop outside any droppable area or same position\n    if (!destination || \n        (source.droppableId === destination.droppableId && \n         source.index === destination.index)) {\n      return;\n    }\n    \n    // The draggableId is the ticket ID\n    const ticketId = draggableId;\n    \n    // Source and destination are the status columns\n    const sourceStatus = source.droppableId as TicketStatus;\n    const destinationStatus = destination.droppableId as TicketStatus;\n    \n    const ticket = tickets.find(t => t._id === ticketId);\n    \n    if (!ticket) return;\n    \n    // Check if the user has permission to move the ticket\n    if (canMoveTicket(ticket, sourceStatus, destinationStatus)) {\n      onStatusChange(ticketId, destinationStatus);\n    } else {\n      // Show toast notification for permission error\n      setToast({\n        message: `You don't have permission to move this ticket to ${destinationStatus} status`,\n        visible: true\n      });\n    }\n  };\n  \n  const handleDragStart = () => {\n    setIsDragging(true);\n  };\n\n  // Handle closing the toast\n  const handleCloseToast = () => {\n    setToast({ ...toast, visible: false });\n  };\n\n  const checkDragDisabled = (ticket: Ticket, status: TicketStatus): boolean => {\n    // ADMIN can move any ticket\n    if (currentUser.role === 'ADMIN') return false;\n    \n    // APPROVER permissions\n    if (currentUser.role === 'APPROVER') {\n      // Allow APPROVERs to drag their own tickets from any status\n      if (ticket.requesterId === currentUser._id) return false;\n      \n      // APPROVERs cannot drag other people's tickets that are in DRAFT status\n      return status === 'DRAFT';\n    }\n    \n    // REQUESTER can only move their own tickets from DRAFT to PENDING\n    if (currentUser.role === 'REQUESTER') {\n      return !(ticket.requesterId === currentUser._id && status === 'DRAFT');\n    }\n    \n    return true;\n  };\n\n  // Add a click handler to navigate to ticket detail\n  const handleTicketClick = (ticketId: string) => {\n    if (!isDragging) {\n      navigate(`/tickets/${ticketId}`);\n    }\n  };\n\n  // Debug function to fetch tickets directly\n  const debugFetchTickets = async () => {\n    try {\n      setDebugInfo('Fetching tickets directly...');\n      const rawResponse = await getAllTicketsRaw();\n      setDebugInfo(`Raw API response received. Check console for details.`);\n      console.log('Raw tickets response:', rawResponse);\n    } catch (error: any) {\n      setDebugInfo(`Error: ${error?.message || 'Unknown error'}`);\n      console.error('Debug fetch error:', error);\n    }\n  };\n\n  return (\n    <>\n      {toast.visible && (\n        <Toast \n          message={toast.message} \n          type=\"error\" \n          onClose={handleCloseToast} \n        />\n      )}\n      \n      <div className=\"taskboard-controls\">\n        <div className=\"date-filter\">\n          <div className=\"filter-group\">\n            <label>From:</label>\n            <input \n              type=\"date\" \n              value={dateRange.startDate.toISOString().split('T')[0]}\n              onChange={(e) => handleDateFilterChange('start', e.target.value)}\n            />\n          </div>\n          <div className=\"filter-group\">\n            <label>To:</label>\n            <input \n              type=\"date\" \n              value={dateRange.endDate.toISOString().split('T')[0]}\n              onChange={(e) => handleDateFilterChange('end', e.target.value)}\n            />\n          </div>\n          <button \n            onClick={setAllTimeRange}\n            style={{\n              padding: '0.5rem 1rem',\n              marginLeft: '1rem',\n              backgroundColor: '#4caf50',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            }}\n          >\n            All Time\n          </button>\n          <button \n            onClick={debugFetchTickets}\n            style={{\n              padding: '0.5rem 1rem',\n              marginLeft: '0.5rem',\n              backgroundColor: '#ff9800',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            }}\n          >\n            Debug API\n          </button>\n        </div>\n        {debugInfo && (\n          <div style={{ \n            marginTop: '10px', \n            padding: '8px', \n            backgroundColor: '#f8f9fa', \n            borderRadius: '4px',\n            fontSize: '14px'\n          }}>\n            Debug Info: {debugInfo}\n          </div>\n        )}\n      </div>\n      \n      {/* Show a message when no tickets are available */}\n      {tickets.length === 0 && (\n        <div style={{ \n          padding: '20px', \n          backgroundColor: '#f8f9fa', \n          borderRadius: '8px', \n          textAlign: 'center',\n          margin: '20px 0'\n        }}>\n          <h3>No Tickets Available</h3>\n          <p>There are no tickets to display. This could be due to:</p>\n          <ul style={{ textAlign: 'left', display: 'inline-block' }}>\n            <li>No tickets exist in the system</li>\n            <li>Date filter excludes all tickets</li>\n            <li>API connection issues</li>\n            <li>Authentication problems</li>\n          </ul>\n          <p>Try changing the date range or use the \"All Time\" button.</p>\n        </div>\n      )}\n      \n      <DragDropContext onDragEnd={handleDragEnd} onDragStart={handleDragStart}>\n        <div className=\"task-board\">\n          {columns.map((status) => (\n            <div key={status} className=\"task-column\">\n              <h3 className=\"column-title\">\n                {status} \n                <span className=\"ticket-count\">\n                  ({ticketsByStatus[status].length})\n                </span>\n              </h3>\n              \n              <StrictModeDroppable droppableId={status}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    className={`task-list ${snapshot.isDraggingOver ? 'drop-allowed' : ''}`}\n                  >\n                    {getVisibleTickets(status).map((ticket, index) => {\n                      // Determine if this ticket can be dragged\n                      const isDragDisabled = checkDragDisabled(ticket, status);\n                        \n                      return (\n                        <Draggable \n                          key={ticket._id} \n                          draggableId={ticket._id}\n                          index={index}\n                          isDragDisabled={isDragDisabled}\n                        >\n                          {(provided, snapshot) => (\n                            <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              className={`task-card ${snapshot.isDragging ? 'is-dragging' : ''} ${isDragDisabled ? 'not-draggable' : ''}`}\n                              onClick={() => handleTicketClick(ticket._id)}\n                            >\n                              <div className=\"task-priority\" data-priority={ticket.department}></div>\n                              <h4>{ticket.title}</h4>\n                              <p>{ticket.description}</p>\n                              <div className=\"task-meta\">\n                                <span className=\"assignee\">{getRequesterName(ticket)}</span>\n                                <span className=\"due-date\">\n                                  {ticket.requestDate ? new Date(ticket.requestDate).toLocaleDateString() : 'No date'}\n                                </span>\n                              </div>\n                            </div>\n                          )}\n                        </Draggable>\n                      );\n                    })}\n                    {provided.placeholder}\n                    \n                    {/* Pagination controls */}\n                    {ticketsByStatus[status].length > pagination[status].limit && (\n                      <div className=\"column-pagination\">\n                        <button \n                          onClick={() => handlePageChange(status, -1)}\n                          disabled={pagination[status].page === 1}\n                          className=\"pagination-btn\"\n                        >\n                          &laquo; Prev\n                        </button>\n                        <span className=\"page-indicator\">\n                          {pagination[status].page} / \n                          {Math.ceil(ticketsByStatus[status].length / pagination[status].limit)}\n                        </span>\n                        <button \n                          onClick={() => handlePageChange(status, 1)}\n                          disabled={\n                            pagination[status].page >= \n                            Math.ceil(ticketsByStatus[status].length / pagination[status].limit)\n                          }\n                          className=\"pagination-btn\"\n                        >\n                          Next &raquo;\n                        </button>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </StrictModeDroppable>\n            </div>\n          ))}\n        </div>\n      </DragDropContext>\n    </>\n  );\n};\n\nexport default TaskBoard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}